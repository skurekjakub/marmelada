<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Defining image filters - Kentico 11 Documentation</title>

    
    <link rel="stylesheet" href="assets/css/expand-macro.css">

            <meta name="scroll-content-language-key" content="">
    
    <meta name="description" content="">
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=2.0, user-scalable=yes">

<script type="text/javascript" src="assets/js/jquery.min.js"></script>
<script type="text/javascript" src="assets/js/jquery.scrollTo.min.js"></script>


<script type="text/javascript" src="assets/js/translate.js"></script>

<script type="text/javascript" src="assets/js/theme.main.js"></script>

    <script type="text/javascript" src="assets/js/iframeResizer.min.js"></script>

<link rel="stylesheet" href="assets/css/content-style.css">
    <link rel="stylesheet" href="assets/css/search.css">

<link rel="stylesheet" href="assets/css/theme.main.css">
<link rel="stylesheet" href="assets/css/theme.colors.css">

            <!-- ES5 support for older browsers, needed by lunr -->
        <script src="js/augment.js"></script> 
        <script id="worker" type="javascript/worker">

        startIndex = function() {
            idx = lunr.Index.load(lunrIndex);
            idx.pipeline.remove(lunr.stopWordFilter);
            postMessage({type: "setup-complete"});
        }

        onmessage = function (event) {
            var message = event.data;

            if ((message.type === 'setup') && message.baseUrl) {
                var url = message.baseUrl;
                importScripts(url + 'js/lunr.js');
                importScripts(url + 'js/lunr-extras.js');
                importScripts(url + 'js/lunr-index.js');
                importScripts(url + 'js/lunr-data.js');
                startIndex();
            }

            if (idx && (message.type === 'search-request') && message.query) {
                var searchWord = message.query;
                var results = idx.search(searchWord).map(function (result) {
                    return lunrData.filter(function (d) {
                        return d.id === parseInt(result.ref, 10)
                    })[0]
                });
                postMessage({type: 'search-results', results: results, query: searchWord, queryId: message.queryId});
            }
        }

    </script>
    </head>

<body pageid="68879260">

<div id="ht-loader">
    <noscript>
        <p style="width: 100%; text-align:center; position: absolute; margin-top: 200px;">This content cannot be displayed without JavaScript.<br>Please enable JavaScript and reload the page.</p>
    </noscript>
</div>

<div>
   	<header id="ht-headerbar">
    <div class="ht-headerbar-left">
        <a href="" id="ht-menu-toggle" class="sp-aui-icon-small sp-aui-iconfont-appswitcher"></a>
    </div>
    <div class="ht-headerbar-right">
            <div class="sp-aui-icon-small ht-search-index-loader ht-header-icon"></div>

        <div id="ht-search">
            <div class="ht-search-input" style="display: none;">
              	<a href="#" class="sp-aui-icon-small sp-aui-iconfont-remove ht-search-clear"></a>

                <form action="#" method="GET" id="search">
                    <input class="search-input" type="text" placeholder="Search" tabindex="-1" autocomplete="off" name="q" value="">
                    <input type="hidden" name="max" value="15" />
                    <input type="submit" style="display:none" tabindex="-4"/>
                </form>

                <a href="#" id="ht-search-button" class="ht-header-icon ht-header-icon-svg">
                                        <svg width="40px" height="40px" viewBox="0 0 40 40" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                        <g>
                            <path d="M29.572,28.802 L28.801,29.571 C28.515,29.857 28.187,30 27.816,30 C27.445,30 27.116,29.857 26.831,29.571 L21.392,24.134 C20.193,24.762 18.908,25.076 17.538,25.076 C15.396,25.076 13.605,24.348 12.163,22.892 C10.721,21.436 10,19.651 10,17.538 C10,15.397 10.721,13.605 12.163,12.163 C13.605,10.721 15.396,10 17.538,10 C19.651,10 21.434,10.721 22.89,12.163 C24.347,13.605 25.075,15.397 25.075,17.538 C25.075,18.937 24.761,20.222 24.132,21.393 L29.572,26.832 C29.857,27.118 30,27.446 30,27.817 C30,28.188 29.857,28.517 29.572,28.802 L29.572,28.802 Z M13.662,21.414 C14.732,22.485 16.024,23.02 17.538,23.02 C19.051,23.02 20.343,22.485 21.413,21.414 C22.484,20.344 23.019,19.052 23.019,17.538 C23.019,16.025 22.484,14.733 21.413,13.662 C20.343,12.592 19.051,12.056 17.538,12.056 C16.024,12.056 14.732,12.592 13.662,13.662 C12.591,14.733 12.056,16.025 12.056,17.538 C12.056,19.052 12.591,20.344 13.662,21.414 L13.662,21.414 Z"></path>
                        </g>
                    </svg>
              	</a>

                <div class="ht-search-dropdown ht-dropdown">
                    <ul></ul>
                </div>
            </div>
        </div>
    </div>
    </header>   	<aside id="ht-sidebar">
    <div class="ht-sidebar-content">
        <div class="ht-sidebar-content-scroll-container">
            <header class="ht-sidebar-header">
                <h1 class="ht-logo">
                    <span class="ht-logo-label">K11</span>
                    <img class="space-logo" src="global.logo" />
                </h1>
                <a href="Kentico-11-Documentation-Home.htm" class="ht-space-link">
                    <h2>Kentico 11 Documentation</h2>
                </a>
            </header>
                            <iframe id="ht-nav" src="toc.html?pageId=68880834"></iframe>
                <script>
                    $('iframe#ht-nav').iFrameResize(
                            { 'log': true, 'autoResize': true, 'heightCalculationMethod': 'lowestElement', 'checkOrigin': false });
                </script>
                    </div>
    </div>

</aside></div>

<div id="ht-wrap-container">

            
    <div id="ht-sidebar-dragbar">
    <div class="ht-sidebar-drag-handle">
        <span class="drag-handle-1"></span>
        <span class="drag-handle-2"></span>
        <span class="drag-handle-3"></span>
    </div>
</div>
    <article id="ht-content" class="ht-content">
        <header class="ht-content-header">
            <div id="ht-breadcrumb">
    <ul>
        <li><a href="Kentico-11-Documentation-Home.htm">Kentico 11 Documentation</a></li>
                                                                                                             <li><a href="" onclick="$('.shortcut').each(function(){$(this).removeClass('shortcut')}); $(this).parent().addClass('shortcut'); return false;">...</a> </li>
                                        <li class="shortcut"><a href="Developing-websites.htm">Developing websites</a></li>
                                                                                     <li><a href="Managing-responsive-images.htm">Managing responsive images</a></li>
                                                            </ul>
</div>            <h1 id="src-68880834"> <span>Defining image filters</span></h1>
        </header>

        <div id="main-content" class="wiki-content sp-grid-section" data-index-for-search="true">
<p   
>Filters describe image operations that can be applied on images saved as <a   href="k11/Page-attachments.htm">page attachments</a>. These operations may include actions such as crop, resize, watermark, etc. The filters then serve as building blocks when <a   href="k11/Defining-image-variants.htm">creating image variant definitions</a>.</p>
<p   
>By default, no filters are included in the system. To add a new filter, you need to create a class in the Kentico project and implement the filter in code.</p>
    <div class="section section-1" id="src-68880834_Definingimagefilters-Creatingacropfilter">
        <h1 class="heading "><span>Creating a crop filter</span></h1>
<p   
>The following example describes how to create a basic crop image filter that crops images based on the provided width. The crop is applied on the center of the image. The example uses the built-in <i class=" ">ImageHelper</i> library to perform the image operation.</p>
<ol class=" "><li class=" "><p   
>Open your project in Visual Studio (using the <strong class=" ">WebSite.sln</strong> or <strong class=" ">WebApp.sln</strong> file).</p>
</li><li class=" "><p   
>Create a new class in the <strong class=" ">App_Code</strong> folder (or <i class=" ">Old_App_Code</i> folder if the project is installed as a web application).<br/>You can name it, for example, <strong class=" ">CropImageFilter.cs</strong>.</p>
    <div  class="confbox admonition admonition-info">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">Using the class in your own project<br/></strong></p>
<p   
>If you want to use the code file in a separate library or external application, you need to allow the system to detect the class in a custom assembly. In your project, navigate to the<i class=" "> Properties/AssemblyInfo.cs</i> file and a    <span style="color: #000000;">
dd the <i class=" ">AssemblyDiscoverable</i> assembly attribute:    </span>
    <span style="color: #000000;">
    </span>
</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="plain">using CMS;</code></div>
<div class="line">Â </div>
<div class="line"><code class="plain">[assembly: AssemblyDiscoverable]</code></div>
</div>
    </div>
        </div>
    </div>
</li><li class=" "><p   
>Add <i class=" ">using</i> statements for the following namespaces:</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="plain">using System;</code></div>
<div class="line"><code class="plain">using System.IO;</code></div>
<div class="line">Â </div>
<div class="line"><code class="plain">using CMS.Core;</code></div>
<div class="line"><code class="plain">using CMS.Helpers;</code></div>
<div class="line"><code class="plain">using CMS.ResponsiveImages;</code></div>
</div>
    </div>
</li><li class=" "><p   
>Set the class to implement the <strong class=" ">IImageFilter </strong>interface.</p>
</li><li class=" "><p   
>Provide a property for setting the image width and use the property in the filter class constructor.</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="comments">/// &lt;summary&gt;</code></div>
<div class="line"><code class="comments">/// Sample filter for cropping images.</code></div>
<div class="line"><code class="comments">/// &lt;/summary&gt;</code></div>
<div class="line"><code class="keyword">public</code><code class="plain"> </code><code class="keyword">class</code><code class="plain"> CropImageFilter : IImageFilter</code></div>
<div class="line"><code class="plain">{</code></div>
<div class="line"><code class="plain">    </code><code class="keyword">private</code><code class="plain"> </code><code class="keyword">int</code><code class="plain"> Width { get; set; }</code></div>
<div class="line">Â </div>
<div class="line"><code class="plain">    </code><code class="keyword">public</code><code class="plain"> CropImageFilter(</code><code class="keyword">int</code><code class="plain"> width)</code></div>
<div class="line"><code class="plain">    {</code></div>
<div class="line"><code class="plain">        Width = width;</code></div>
<div class="line"><code class="plain">    }</code></div>
<div class="line"><code class="plain">    </code></div>
<div class="line"><code class="plain">    ...</code></div>
<div class="line"><code class="plain">}</code></div>
</div>
    </div>
</li><li class=" "><p   
>In the class, implement the <strong class=" ">ApplyFilter </strong>method required by the interface. The <i class=" ">ApplyFilter</i> method defines the actions applied on the image data.</p>
    <div  class="confbox admonition admonition-info">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">ApplyFilter return values</strong></p>
<p   
>Return values of the following types in the <i class=" ">ApplyFilter</i> method:</p>
<ul class=" "><li class=" "><p   
><strong class=" ">ImageContainer</strong> &ndash; when the filter is applied successfully, return a new <i class=" ">ImageContainer</i> object.</p>
</li><li class=" "><p   
><strong class=" ">null</strong> &ndash; if the filter was not applied, return <i class=" ">null</i> to signify that the image data was not modified. Returning a <i class=" ">null</i> value means that the filter returns unmodified input image data.</p>
</li><li class=" "><p   
><strong class=" ">ImageFilterException</strong> &ndash; if the application of the filter fails or the filter cannot be applied, throw an <i class=" ">ImageFilterException</i> exception with an appropriate error message.</p>
</li></ul>        </div>
    </div>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">public</code><code class="plain"> ImageContainer ApplyFilter(ImageContainer container)</code></div>
<div class="line"><code class="plain">{</code></div>
<div class="line"><code class="plain">    </code><code class="keyword">try</code></div>
<div class="line"><code class="plain">    {</code></div>
<div class="line"><code class="plain">        using (Stream imageStream = container.OpenReadStream())</code></div>
<div class="line"><code class="plain">        {</code></div>
<div class="line"><code class="plain">            ImageHelper imageHelper = </code><code class="keyword">new</code><code class="plain"> ImageHelper(BinaryData.GetByteArrayFromStream(imageStream));</code></div>
<div class="line">Â </div>
<div class="line"><code class="plain">            </code><code class="comments">// Calculates correct image height to maintain aspect ratio</code></div>
<div class="line"><code class="plain">            </code><code class="keyword">int</code><code class="plain">[] dimensions = imageHelper.EnsureImageDimensions(Width, </code><code class="value">0</code><code class="plain">, </code><code class="value">0</code><code class="plain">);</code></div>
<div class="line"><code class="plain">            </code><code class="keyword">int</code><code class="plain"> croppedWidth = dimensions[</code><code class="value">0</code><code class="plain">];</code></div>
<div class="line"><code class="plain">            </code><code class="keyword">int</code><code class="plain"> croppedHeight = dimensions[</code><code class="value">1</code><code class="plain">];</code></div>
<div class="line">Â </div>
<div class="line"><code class="plain">			</code><code class="comments">// Crops the center of image to the specified size</code></div>
<div class="line"><code class="plain">            </code><code class="keyword">byte</code><code class="plain">[] trimmedImage = imageHelper.GetTrimmedImageData(croppedWidth, croppedHeight, ImageHelper.ImageTrimAreaEnum.MiddleCenter);</code></div>
<div class="line">Â </div>
<div class="line"><code class="plain">            using (MemoryStream croppedImageData = </code><code class="keyword">new</code><code class="plain"> MemoryStream(trimmedImage))</code></div>
<div class="line"><code class="plain">            {</code></div>
<div class="line"><code class="plain">                </code><code class="comments">// Updates image metadata to reflect new image size, maintains MIME type and extension</code></div>
<div class="line"><code class="plain">				ImageMetadata croppedImageMetadata = </code><code class="keyword">new</code><code class="plain"> ImageMetadata(croppedWidth, croppedHeight, container.Metadata.MimeType, container.Metadata.Extension);</code></div>
<div class="line">Â </div>
<div class="line"><code class="plain">                </code><code class="comments">// Returns the modified image data</code></div>
<div class="line"><code class="plain">                </code><code class="keyword">return</code><code class="plain"> </code><code class="keyword">new</code><code class="plain"> ImageContainer(croppedImageData , croppedImageMetadata);</code></div>
<div class="line"><code class="plain">            }</code></div>
<div class="line"><code class="plain">        }</code></div>
<div class="line"><code class="plain">    }</code></div>
<div class="line"><code class="plain">    </code><code class="keyword">catch</code><code class="plain"> (ArgumentException ex)</code></div>
<div class="line"><code class="plain">    {</code></div>
<div class="line"><code class="plain">        </code><code class="keyword">throw</code><code class="plain"> </code><code class="keyword">new</code><code class="plain"> ImageFilterException(</code><code class="string">"Failed to crop the image."</code><code class="plain">, ex);</code></div>
<div class="line"><code class="plain">    }</code></div>
<div class="line"><code class="plain">}</code></div>
</div>
    </div>
</li><li class=" "><p   
>On web application projects, build the solution.</p>
</li></ol><p   
>With the crop filter prepared, you can now use it to <a   href="k11/Defining-image-variants.htm">create an image variant definition</a>.</p>
    </div>
        </div>

    </article>


               
            
    <footer id="ht-footer">
    <a href="#" id="ht-jump-top" class="sp-aui-icon-small sp-aui-iconfont-arrows-up"></a>
</footer></div>

<div>
    <div id="ht-mq-detect"></div>
</div>

    <script src="js/lunr.js"></script>
    <script src="js/lunr-extras.js"></script>
    <script src="assets/js/scroll-search.js"></script>

    <script src="assets/js/expand-macro.js"></script>
</body>
</html>
