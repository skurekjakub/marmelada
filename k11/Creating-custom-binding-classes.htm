<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Creating custom binding classes - Kentico 11 Documentation</title>

    
    <link rel="stylesheet" href="assets/css/expand-macro.css">

            <meta name="scroll-content-language-key" content="">
    
    <meta name="description" content="">
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=2.0, user-scalable=yes">

<script type="text/javascript" src="assets/js/jquery.min.js"></script>
<script type="text/javascript" src="assets/js/jquery.scrollTo.min.js"></script>


<script type="text/javascript" src="assets/js/translate.js"></script>

<script type="text/javascript" src="assets/js/theme.main.js"></script>

    <script type="text/javascript" src="assets/js/iframeResizer.min.js"></script>

<link rel="stylesheet" href="assets/css/content-style.css">
    <link rel="stylesheet" href="assets/css/search.css">

<link rel="stylesheet" href="assets/css/theme.main.css">
<link rel="stylesheet" href="assets/css/theme.colors.css">

            <!-- ES5 support for older browsers, needed by lunr -->
        <script src="js/augment.js"></script> 
        <script id="worker" type="javascript/worker">

        startIndex = function() {
            idx = lunr.Index.load(lunrIndex);
            idx.pipeline.remove(lunr.stopWordFilter);
            postMessage({type: "setup-complete"});
        }

        onmessage = function (event) {
            var message = event.data;

            if ((message.type === 'setup') && message.baseUrl) {
                var url = message.baseUrl;
                importScripts(url + 'js/lunr.js');
                importScripts(url + 'js/lunr-extras.js');
                importScripts(url + 'js/lunr-index.js');
                importScripts(url + 'js/lunr-data.js');
                startIndex();
            }

            if (idx && (message.type === 'search-request') && message.query) {
                var searchWord = message.query;
                var results = idx.search(searchWord).map(function (result) {
                    return lunrData.filter(function (d) {
                        return d.id === parseInt(result.ref, 10)
                    })[0]
                });
                postMessage({type: 'search-results', results: results, query: searchWord, queryId: message.queryId});
            }
        }

    </script>
    </head>

<body pageid="68879260">

<div id="ht-loader">
    <noscript>
        <p style="width: 100%; text-align:center; position: absolute; margin-top: 200px;">This content cannot be displayed without JavaScript.<br>Please enable JavaScript and reload the page.</p>
    </noscript>
</div>

<div>
   	<header id="ht-headerbar">
    <div class="ht-headerbar-left">
        <a href="" id="ht-menu-toggle" class="sp-aui-icon-small sp-aui-iconfont-appswitcher"></a>
    </div>
    <div class="ht-headerbar-right">
            <div class="sp-aui-icon-small ht-search-index-loader ht-header-icon"></div>

        <div id="ht-search">
            <div class="ht-search-input" style="display: none;">
              	<a href="#" class="sp-aui-icon-small sp-aui-iconfont-remove ht-search-clear"></a>

                <form action="#" method="GET" id="search">
                    <input class="search-input" type="text" placeholder="Search" tabindex="-1" autocomplete="off" name="q" value="">
                    <input type="hidden" name="max" value="15" />
                    <input type="submit" style="display:none" tabindex="-4"/>
                </form>

                <a href="#" id="ht-search-button" class="ht-header-icon ht-header-icon-svg">
                                        <svg width="40px" height="40px" viewBox="0 0 40 40" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                        <g>
                            <path d="M29.572,28.802 L28.801,29.571 C28.515,29.857 28.187,30 27.816,30 C27.445,30 27.116,29.857 26.831,29.571 L21.392,24.134 C20.193,24.762 18.908,25.076 17.538,25.076 C15.396,25.076 13.605,24.348 12.163,22.892 C10.721,21.436 10,19.651 10,17.538 C10,15.397 10.721,13.605 12.163,12.163 C13.605,10.721 15.396,10 17.538,10 C19.651,10 21.434,10.721 22.89,12.163 C24.347,13.605 25.075,15.397 25.075,17.538 C25.075,18.937 24.761,20.222 24.132,21.393 L29.572,26.832 C29.857,27.118 30,27.446 30,27.817 C30,28.188 29.857,28.517 29.572,28.802 L29.572,28.802 Z M13.662,21.414 C14.732,22.485 16.024,23.02 17.538,23.02 C19.051,23.02 20.343,22.485 21.413,21.414 C22.484,20.344 23.019,19.052 23.019,17.538 C23.019,16.025 22.484,14.733 21.413,13.662 C20.343,12.592 19.051,12.056 17.538,12.056 C16.024,12.056 14.732,12.592 13.662,13.662 C12.591,14.733 12.056,16.025 12.056,17.538 C12.056,19.052 12.591,20.344 13.662,21.414 L13.662,21.414 Z"></path>
                        </g>
                    </svg>
              	</a>

                <div class="ht-search-dropdown ht-dropdown">
                    <ul></ul>
                </div>
            </div>
        </div>
    </div>
    </header>   	<aside id="ht-sidebar">
    <div class="ht-sidebar-content">
        <div class="ht-sidebar-content-scroll-container">
            <header class="ht-sidebar-header">
                <h1 class="ht-logo">
                    <span class="ht-logo-label">K11</span>
                    <img class="space-logo" src="global.logo" />
                </h1>
                <a href="Kentico-11-Documentation-Home.htm" class="ht-space-link">
                    <h2>Kentico 11 Documentation</h2>
                </a>
            </header>
                            <iframe id="ht-nav" src="toc.html?pageId=68882249"></iframe>
                <script>
                    $('iframe#ht-nav').iFrameResize(
                            { 'log': true, 'autoResize': true, 'heightCalculationMethod': 'lowestElement', 'checkOrigin': false });
                </script>
                    </div>
    </div>

</aside></div>

<div id="ht-wrap-container">

            
    <div id="ht-sidebar-dragbar">
    <div class="ht-sidebar-drag-handle">
        <span class="drag-handle-1"></span>
        <span class="drag-handle-2"></span>
        <span class="drag-handle-3"></span>
    </div>
</div>
    <article id="ht-content" class="ht-content">
        <header class="ht-content-header">
            <div id="ht-breadcrumb">
    <ul>
        <li><a href="Kentico-11-Documentation-Home.htm">Kentico 11 Documentation</a></li>
                                                                                                             <li><a href="" onclick="$('.shortcut').each(function(){$(this).removeClass('shortcut')}); $(this).parent().addClass('shortcut'); return false;">...</a> </li>
                                        <li class="shortcut"><a href="Custom-development.htm">Custom development</a></li>
                                                                                     <li><a href="Creating-custom-modules.htm">Creating custom modules</a></li>
                                                            </ul>
</div>            <h1 id="src-68882249"> <span>Creating custom binding classes</span></h1>
        </header>

        <div id="main-content" class="wiki-content sp-grid-section" data-index-for-search="true">
<p   
>Binding classes represent relationships between other classes. Add a binding class to your <a   href="k11/Creating-custom-modules.htm">custom modules</a> if you need to store many-to-many relationships between a custom class and another class in the system (custom or default). For example, bindings allow you to assign objects to sites, users, etc.</p>
    <div  class="confbox admonition admonition-info">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p  class="confluence-link" 
>When planning relationships between classes, consider the following alternatives to binding classes:</p>
<ul class=" "><li class="confluence-link "><p   
>Use <a   href="k11/Adding-references-between-classes.htm">reference fields (foreign keys)</a> to define one-to-many relationships between standalone classes &ndash; each object of a class can have a relationship with one object of another class.</p>
</li><li class="confluence-link "><p   
>Use <a   href="k11/Setting-parent-child-relationships-for-classes.htm">parent-child relationships</a> to define a hierarchy for classes.</p>
</li></ul>        </div>
    </div>
    <div  class="confbox admonition admonition-note">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">Page bindings</strong></p>
<p   
>We do NOT recommend creating bindings between custom classes and Kentico pages. Pages in Kentico are complex data structures that consist of multiple classes and have special logic for handling other factors, such as <a   href="k11/Configuring-workflows.htm">workflow</a>.</p>
<p   
>Custom page bindings do not provide automatic support for many types of functionality that works for bindings between other classes, such as deleting of binding records when a related page is deleted.</p>
        </div>
    </div>
    <h3 id="src-68882249_Creatingcustombindingclasses-Addingbindingclasses" class="heading "><span>Adding binding classes</span></h3>
<p   
>You can create two types of binding classes:</p>
<ul class=" "><li class=" "><p   
><a   href="k11/#src-68882249_Creatingcustombindingclasses-Primarykeywithidentity">Binding class with its own primary key / identity column</a> (recommended)</p>
</li><li class=" "><p   
><a   href="k11/#src-68882249_Creatingcustombindingclasses-Compoundprimarykey">Binding class with a compound primary key consisting of two or more foreign keys</a></p>
</li></ul>    <h4 id="src-68882249_Creatingcustombindingclasses-Primarykeywithidentity" class="heading "><span>Primary key with identity</span></h4>
<p   
>Use the following steps to create a binding class with a dedicated identity column:</p>
<ol class=" "><li class=" "><p   
>Open the <strong class=" ">Modules</strong> application and edit the custom module where you want to create the binding class.</p>
</li><li class=" "><p   
>Select the <strong class=" ">Classes</strong> tab and click <strong class=" ">New class</strong>.</p>
</li><li class=" "><p   
>Fill in the <strong class=" ">Class display name</strong> and <strong class=" ">Class</strong> identifier.</p>
</li><li class=" "><p   
>Click <strong class=" ">Next</strong>.</p>
</li><li class=" "><p   
>Confirm or change the <strong class=" ">Primary key name</strong> of the identity column.</p>
    <div  class="confbox admonition admonition-note">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">Important</strong>: Leave the <strong class=" ">Is M:N table</strong> option disabled.</p>
        </div>
    </div>
</li><li class=" "><p   
>Clear the <strong class=" ">Include Guid field</strong> and <strong class=" ">Include LastModified field</strong> checkboxes. These fields are not relevant for binding classes.</p>
</li><li class=" "><p   
>Click <strong class=" ">Next</strong>.</p>
</li><li class=" "><p   
>Leave the default primary key field. Click <strong class=" ">New field</strong> to create <i class=" ">two or more</i> standard fields for storing the IDs of the related objects:<br/><br/></p>
<ul class=" "><li class=" "><p   
><strong class=" ">Field type</strong>: Standard field</p>
</li><li class=" "><p   
><strong class=" ">Data type</strong>: Integer number</p>
</li><li class=" "><p   
><strong class=" ">Required</strong>: yes (checked)</p>
</li><li class=" "><p   
><strong class=" ">Reference to</strong>: select the appropriate class</p>
</li><li class=" "><p   
><strong class=" ">Reference type</strong>: Binding</p>
</li><li class=" "><p   
><strong class=" ">Display field in the editing form</strong>: no (not checked)</p>
</li></ul></li><li class=" "><p   
>Click <strong class=" ">Save</strong> for each field and then <strong class=" ">Next</strong>.</p>
</li><li class=" "><p   
>Click <strong class=" ">Finish</strong>.</p>
</li></ol><p   
>The system creates the corresponding table in the database. Perform the following steps to prepare the class&#39;s code and finalize the database table:</p>
<ol class=" "><li class=" "><p   
>Select the <strong class=" ">Code</strong> tab in the editing interface of the binding class.</p>
</li><li class=" "><p   
>Click <strong class=" ">Save code</strong>. The system generates an <i class=" ">Info</i> and <i class=" ">InfoProvider</i> class for the binding object.</p>
</li><li class=" "><p   
>Edit the <i class=" ">Info</i> class (for example in Visual Studio).</p>
</li><li class=" "><p   
>Navigate to the <strong class=" ">TYPEINFO</strong> field in the class&#39;s code.</p>
</li><li class=" "><p   
>Add the <strong class=" ">IsBinding</strong> property to the initializer of the new <strong class=" ">ObjectTypeInfo</strong> object and set the value to <i class=" ">true</i>. See <a   href="k11/#src-68882249_Creatingcustombindingclasses-Settingthetypeinformationforbindingclasses">Setting the type information for binding classes</a> for details.</p>
    <div  class="confbox admonition admonition-info">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">Note</strong>: On web application installations, you need to manually include the <i class=" ">Info</i> and <i class=" ">InfoProvider</i> class files into <strong class=" ">CMSApp</strong> or the dedicated module project, and build the solution.</p>
        </div>
    </div>
</li><li class=" "><p   
>Manually set the class&#39;s ID fields as foreign keys in your database. See <a  class="external-link" href="http://msdn.microsoft.com/en-us/library/ms189049.aspx">Create Foreign Key Relationships</a> for more information.</p>
</li></ol><p   
>The binding class is now ready. You can create relationships between objects using the API or prepare a user interface for this purpose. See the <a   href="k11/#src-68882249_Creatingcustombindingclasses-Example-Creatingabindingclass">Example</a> section to learn more.</p>
<p   
><br/></p>
    <div  class="confbox panel">
            <div class="title panel-header">On this page</div>
            <div class="panel-content">
<p   
></p>
<ul class="toc-indentation "><li class=" "><p   
><a   href="k11/#src-68882249_Creatingcustombindingclasses-Addingbindingclasses">Adding binding classes</a></p>
<ul class="toc-indentation "><li class=" "><p   
><a   href="k11/#src-68882249_Creatingcustombindingclasses-Primarykeywithidentity">Primary key with identity</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68882249_Creatingcustombindingclasses-Compoundprimarykey">Compound primary key</a></p>
</li></ul></li><li class=" "><p   
><a   href="k11/#src-68882249_Creatingcustombindingclasses-Settingthetypeinformationforbindingclasses">Setting the type information for binding classes</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68882249_Creatingcustombindingclasses-Example-Creatingabindingclass">Example - Creating a binding class</a></p>
<ul class="toc-indentation "><li class=" "><p   
><a   href="k11/#src-68882249_Creatingcustombindingclasses-Preparingthebindingclass">Preparing the binding class</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68882249_Creatingcustombindingclasses-Creatingforeignkeysforthedatabasetable">Creating foreign keys for the database table</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68882249_Creatingcustombindingclasses-Buildingabindingmanagementinterface">Building a binding management interface</a></p>
</li></ul></li></ul><p   
></p>
        </div>
    </div>
    <div  class="confbox panel">
            <div class="title panel-header">Related pages</div>
            <div class="panel-content">
<ul class=" "><li class=" "><p   
><a   href="k11/Creating-custom-modules.htm">Creating custom modules</a></p>
</li><li class=" "><p   
><a   href="k11/Setting-the-type-information-for-module-classes.htm">Setting the type information for module classes</a></p>
</li><li class=" "><p   
><a   href="k11/Adding-references-between-classes.htm">Adding references between classes</a></p>
</li><li class=" "><p   
><a   href="k11/Reference---ObjectTypeInfo.htm">Reference - ObjectTypeInfo</a></p>
</li></ul>        </div>
    </div>
    <h4 id="src-68882249_Creatingcustombindingclasses-Compoundprimarykey" class="heading "><span>Compound primary key</span></h4>
<p   
>Use the following steps to create a binding class without its own identity column:</p>
<ol class=" "><li class=" "><p   
>Open the <strong class=" ">Modules</strong> application and edit the custom module where you want to create the binding class.</p>
</li><li class=" "><p   
>Select the <strong class=" ">Classes</strong> tab and click <strong class=" ">New class</strong>.</p>
</li><li class=" "><p   
>Fill in the <strong class=" ">Class display name</strong> and <strong class=" ">Class</strong> identifier.</p>
</li><li class=" "><p   
>Click <strong class=" ">Next</strong>.</p>
</li><li class=" "><p   
>Enter the <strong class=" ">Primary key name</strong>. We recommend using the name of the identifier column of the first class in the relationship.</p>
</li><li class=" "><p   
>Enable <strong class=" ">Is M:N table</strong>.</p>
</li><li class=" "><p   
>Clear the <strong class=" ">Include Guid field</strong> and <strong class=" ">Include LastModified field</strong> checkboxes. These fields are not relevant for binding classes.</p>
</li><li class=" "><p   
>Click <strong class=" ">Next</strong>.</p>
</li><li class=" "><p   
>Set the following options for the default primary key field:<br/><br/></p>
<ul class=" "><li class=" "><p   
><strong class=" ">Reference to</strong>: select the first class in the relationship</p>
</li><li class=" "><p   
><strong class=" ">Reference type</strong>: Binding</p>
</li></ul></li><li class=" "><p   
>Click <strong class=" ">Save</strong>.</p>
</li><li class=" "><p   
>Click <strong class=" ">New field</strong> to create <i class=" ">one or more</i> additional fields for storing the IDs of the related objects:<br/><br/></p>
<ul class=" "><li class=" "><p   
><strong class=" ">Field type</strong>: Primary key (use the <i class=" ">Primary key</i> field type for all of the ID fields in Kentico &mdash; the result in the database is a compound primary key)</p>
</li><li class=" "><p   
><strong class=" ">Data type</strong>: Integer number</p>
</li><li class=" "><p   
><strong class=" ">Required</strong>: yes (checked)</p>
</li><li class=" "><p   
><strong class=" ">Reference to</strong>: select the appropriate class</p>
</li><li class=" "><p   
><strong class=" ">Reference type</strong>: Binding</p>
</li><li class=" "><p   
><strong class=" ">Display field in the editing form</strong>: no (not checked)</p>
</li></ul></li><li class=" "><p   
>Click <strong class=" ">Save</strong> for each field and then <strong class=" ">Next</strong>.</p>
</li><li class=" "><p   
>Click <strong class=" ">Finish</strong>.</p>
</li></ol><p   
>The system creates the corresponding table in the database. Perform the following steps to prepare the class&#39;s code and finalize the database table:</p>
<ol class=" "><li class=" "><p   
>Select the <strong class=" ">Code</strong> tab in the editing interface of the binding class.</p>
</li><li class=" "><p   
>Click <strong class=" ">Save code</strong>. The system generates an <i class=" ">Info</i> and <i class=" ">InfoProvider</i> class for the binding object.</p>
</li><li class=" "><p   
>Edit the <i class=" ">Info</i> class (for example in Visual Studio).</p>
</li><li class=" "><p   
>Navigate to the <strong class=" ">TYPEINFO</strong> field in the class&#39;s code.</p>
</li><li class=" "><p   
>Set the <strong class=" ">idColumn</strong> parameter to <i class=" ">null</i> in the <strong class=" ">ObjectTypeInfo</strong> constructor (the fourth parameter).</p>
</li><li class=" "><p   
>Add the <strong class=" ">IsBinding</strong> property to the initializer of the new <strong class=" ">ObjectTypeInfo</strong> object and set the value to <i class=" ">true</i>. See <a   href="k11/#src-68882249_Creatingcustombindingclasses-Settingthetypeinformationforbindingclasses">Setting the type information for binding classes</a> for details.</p>
    <div  class="confbox admonition admonition-info">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">Note</strong>: On web application installations, you need to manually include the <i class=" ">Info</i> and <i class=" ">InfoProvider</i> class files into <strong class=" ">CMSApp</strong> or the dedicated module project, and build the solution.</p>
        </div>
    </div>
</li><li class=" "><p   
>Manually set the class&#39;s ID fields as foreign keys in your database. See <a  class="external-link" href="http://msdn.microsoft.com/en-us/library/ms189049.aspx">Create Foreign Key Relationships</a> for more information.</p>
</li></ol><p   
>The binding class is now ready. You can create relationships between objects using the API or prepare a user interface for this purpose. See the <a   href="k11/#src-68882249_Creatingcustombindingclasses-Example-Creatingabindingclass">Example</a> section to learn more.</p>
    <h3 id="src-68882249_Creatingcustombindingclasses-Settingthetypeinformationforbindingclasses" class="heading "><span>Setting the type information for binding classes</span></h3>
<p   
>The <a   href="k11/Setting-the-type-information-for-module-classes.htm"><strong class=" ">type information</strong></a> is code that defines the general behavior and basic properties of classes in Kentico. You can configure the type information inside the <i class=" ">Info</i> class of a given Kentico class using an object of the <strong class=" ">ObjectTypeInfo</strong> type.</p>
<p   
>See the sections below to learn how to set the type information for binding classes.</p>
    <div  class="confbox admonition admonition-info">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">Note</strong>: When you generate the <i class=" ">Info</i> class from the interface of the <strong class=" ">Modules</strong> application and have the fields set correctly for the binding class, the system configures <i class=" ">most</i> of the type information automatically.</p>
        </div>
    </div>
<p   
><strong class=" ">Parameters of the ObjectTypeInfo constructor</strong>:</p>
<ul class=" "><li class=" "><p   
><strong class=" ">idColumn (4)</strong> - the name of the identity column of the binding class. Must be <i class=" ">null</i> for binding classes that do not have a dedicated identity column (with a compound primary key).</p>
</li><li class=" "><p   
><strong class=" ">siteIDColumn (10)</strong> - for bindings to site objects, must contain the name of the class column that stores the ID of the related site. Set to <i class=" ">null</i> for bindings between non-site objects<i class=" ">.</i></p>
</li><li class=" "><p   
><strong class=" ">parentID (11)</strong> - the name of the column that stores the ID of the first class in the relationship.</p>
</li><li class=" "><p   
><strong class=" ">parentObjectType (12)</strong> - the object type name of the first class in the relationship. You can get the value from the OBJECT_TYPE constant in the given class&#39;s <i class=" ">Info</i> class.</p>
</li></ul><p   
><strong class=" ">Properties in the ObjectTypeInfo initializer</strong>:</p>
<ul class=" "><li class=" "><p   
><strong class=" ">ModuleName</strong> - the code name of the module that contains the binding class.</p>
</li><li class=" "><p   
><strong class=" ">IsBinding</strong> - always set to <i class=" ">true</i> for binding classes<i class=" ">.</i></p>
</li><li class=" "><p   
><strong class=" ">DependsOn</strong> - List of <strong class=" ">ObjectDependency</strong> objects representing the classes in the relationship. Add an ObjectDependency for each class in the relationship except for the one specified via the<i class=" "> parent</i> parameters in the constructor. Not required for site bindings.</p>
</li></ul>    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                    <div class="title">Examples</div>
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-title="Examples" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="comments">// Sample type information definition for a general binding class</code></div>
<div class="line"><code class="comments">// Relationship between custom offices and roles</code></div>
<div class="line"><code class="keyword">public</code><code class="plain"> </code><code class="keyword">static</code><code class="plain"> ObjectTypeInfo TYPEINFO = </code><code class="keyword">new</code><code class="plain"> ObjectTypeInfo(</code><code class="keyword">typeof</code><code class="plain">(OfficeRoleInfoProvider), OBJECT_TYPE, </code><code class="string">"CompanyOverview.OfficeRole"</code><code class="plain">, </code><code class="string">"OfficeRoleID"</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="string">"OfficeID"</code><code class="plain">, </code><code class="string">"companyoverview.office"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">{</code></div>
<div class="line"><code class="plain">	ModuleName = </code><code class="string">"CompanyOverview"</code><code class="plain">,</code></div>
<div class="line"><code class="plain">	IsBinding = </code><code class="keyword">true</code><code class="plain">,</code></div>
<div class="line"><code class="plain">	DependsOn = </code><code class="keyword">new</code><code class="plain"> List&lt;ObjectDependency&gt;()</code></div>
<div class="line"><code class="plain">	{</code></div>
<div class="line"><code class="plain">		</code><code class="keyword">new</code><code class="plain"> ObjectDependency(</code><code class="string">"RoleID"</code><code class="plain">, </code><code class="string">"cms.role"</code><code class="plain">, ObjectDependencyEnum.Binding),</code></div>
<div class="line"><code class="plain">	},</code></div>
<div class="line"><code class="plain">};</code></div>
<div class="line"> </div>
<div class="line"> </div>
<div class="line"><code class="comments">// Sample type information definition for a site binding class</code></div>
<div class="line"><code class="comments">// Relationship between custom offices and sites</code></div>
<div class="line"><code class="keyword">public</code><code class="plain"> </code><code class="keyword">static</code><code class="plain"> ObjectTypeInfo TYPEINFO = </code><code class="keyword">new</code><code class="plain"> ObjectTypeInfo(</code><code class="keyword">typeof</code><code class="plain">(OfficeSiteInfoProvider), OBJECT_TYPE, </code><code class="string">"CompanyOverview.OfficeSite"</code><code class="plain">, </code><code class="string">"OfficeSiteID"</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="string">"SiteID"</code><code class="plain">, </code><code class="string">"OfficeID"</code><code class="plain">, </code><code class="string">"companyoverview.office"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">{</code></div>
<div class="line"><code class="plain">	ModuleName = </code><code class="string">"CompanyOverview"</code><code class="plain">,</code></div>
<div class="line"><code class="plain">	IsBinding = </code><code class="keyword">true</code></div>
<div class="line"><code class="plain">};</code></div>
</div>
    </div>
    <h3 id="src-68882249_Creatingcustombindingclasses-Example-Creatingabindingclass" class="heading "><span>Example - Creating a binding class</span></h3>
<p   
>The following example demonstrates how to create a binding class, including an editing interface. The sample binding class allows the creation of relationships between offices and users. Each relationship indicates that a user is a manager of a given office.</p>
    <div  class="confbox admonition admonition-note">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
>To follow the example, you first need to create the <strong class=" ">Company overview</strong> custom module according to the instructions in <a   href="k11/Creating-custom-modules.htm">Creating custom modules</a>.</p>
        </div>
    </div>
    <h4 id="src-68882249_Creatingcustombindingclasses-Preparingthebindingclass" class="heading "><span>Preparing the binding class</span></h4>
<ol class=" "><li class=" "><p   
>Open the <strong class=" ">Modules</strong> application and edit the <strong class=" ">Company overview</strong> module.</p>
</li><li class=" "><p   
>Select the <strong class=" ">Classes</strong> tab and click <strong class=" ">New class</strong>.</p>
</li><li class=" "><p   
>Fill in the class names:</p>
<ul class=" "><li class=" "><p   
><strong class=" ">Class display name</strong>: Office manager binding</p>
</li><li class=" "><p   
><strong class=" ">Class</strong>: OfficeUser</p>
</li></ul></li><li class=" "><p   
>Click <strong class=" ">Next</strong>.</p>
</li><li class=" "><p   
>In step 2, clear the <strong class=" ">Include OfficeUserGuid field</strong> and <strong class=" ">Include OfficeUserLastModified field</strong> checkboxes. These fields are not relevant for binding classes.</p>
</li><li class=" "><p   
>Click <strong class=" ">Next</strong>.</p>
</li><li class=" "><p   
>Create two fields for storing the IDs of the related offices and users. Click <strong class=" ">New field</strong>, set the properties, and click <strong class=" ">Save</strong> for each field:<br/><br/></p>
<ul class=" "><li class=" "><p   
><strong class=" ">Field type</strong>: Standard field</p>
</li><li class=" "><p   
><strong class=" ">Field name</strong>: OfficeID</p>
</li><li class=" "><p   
><strong class=" ">Data type</strong>: Integer number</p>
</li><li class=" "><p   
><strong class=" ">Required</strong>: yes (checked)</p>
</li><li class=" "><p   
><strong class=" ">Reference to</strong>: Custom office</p>
</li><li class=" "><p   
><strong class=" ">Reference type</strong>: Binding</p>
</li><li class=" "><p   
><strong class=" ">Display field in the editing form</strong>: no (not checked)<br/><br/></p>
</li><li class=" "><p   
><strong class=" ">Field type</strong>: Standard field</p>
</li><li class=" "><p   
><strong class=" ">Field name</strong>: UserID</p>
</li><li class=" "><p   
><strong class=" ">Data type</strong>: Integer number</p>
</li><li class=" "><p   
><strong class=" ">Required</strong>: yes (checked)</p>
</li><li class=" "><p   
><strong class=" ">Reference to</strong>: User</p>
</li><li class=" "><p   
><strong class=" ">Reference type</strong>: Binding</p>
</li><li class=" "><p   
><strong class=" ">Display field in the editing form</strong>: no (not checked)</p>
</li></ul></li><li class=" "><p   
>Click <strong class=" ">Next</strong>.</p>
</li><li class=" "><p   
>Click <strong class=" ">Finish</strong>.</p>
</li></ol><p   
>Generate the code required for the binding class&#39;s API (including the type information):</p>
<ol class=" "><li class=" "><p   
>Select the <strong class=" ">Code</strong> tab in the editing interface of the <i class=" ">Office manager binding</i> class.</p>
</li><li class=" "><p   
>Click <strong class=" ">Save code</strong>. The system generates an <i class=" ">Info</i> and <i class=" ">InfoProvider</i> class for the binding object in the <i class=" ">~/App_Code/CMSModules/CompanyOverview</i> folder.</p>
</li><li class=" "><p   
>Open your web project in Visual Studio and edit <strong class=" "><i class=" ">OfficeUserInfo.cs</i></strong>.</p>
    <div  class="confbox admonition admonition-note">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">Note</strong>: On web application installations, the system generates the files in the <strong class=" ">Old_App_Code</strong> folder. You need to manually include the files into the <strong class=" ">CMSApp</strong> project and build the solution.</p>
        </div>
    </div>
</li><li class=" "><p   
>Navigate to the <strong class=" ">TYPEINFO</strong> field in the class&#39;s code.</p>
</li><li class=" "><p   
>Add the <strong class=" ">IsBinding</strong> property to the initializer of the new <strong class=" ">ObjectTypeInfo</strong> object and set the value to <i class=" ">true</i>:</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">public</code><code class="plain"> </code><code class="keyword">static</code><code class="plain"> ObjectTypeInfo TYPEINFO = </code><code class="keyword">new</code><code class="plain"> ObjectTypeInfo(</code><code class="keyword">typeof</code><code class="plain">(OfficeUserInfoProvider), OBJECT_TYPE, </code><code class="string">"CompanyOverview.OfficeUser"</code><code class="plain">, </code><code class="string">"OfficeUserID"</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="keyword">null</code><code class="plain">, </code><code class="string">"OfficeID"</code><code class="plain">, </code><code class="string">"companyoverview.office"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">{</code></div>
<div class="line"><code class="plain">	ModuleName = </code><code class="string">"CompanyOverview"</code><code class="plain">,</code></div>
<div class="line"><code class="plain">	IsBinding = </code><code class="keyword">true</code><code class="plain">,</code></div>
<div class="line"><code class="plain">	DependsOn = </code><code class="keyword">new</code><code class="plain"> List&lt;ObjectDependency&gt;() </code></div>
<div class="line"><code class="plain">	{</code></div>
<div class="line"><code class="plain">		</code><code class="keyword">new</code><code class="plain"> ObjectDependency(</code><code class="string">"UserID"</code><code class="plain">, </code><code class="string">"cms.user"</code><code class="plain">, ObjectDependencyEnum.Binding), </code></div>
<div class="line"><code class="plain">	},</code></div>
<div class="line"><code class="plain">};</code></div>
</div>
    </div>
</li><li class=" "><p   
>Save the change (build the project on web application installations).</p>
</li></ol><p   
>Finally, create a <a   href="k11/Working-with-resource-strings.htm">resource string</a> for displaying the binding class&#39;s object type name:</p>
<ol class=" "><li class=" "><p   
>In the Kentico administration interface, open the <strong class=" ">Localization</strong> application.</p>
</li><li class=" "><p   
>On the <strong class=" ">Resource strings</strong> tab, click <strong class=" ">New string</strong>.</p>
</li><li class=" "><p   
>Enter the following <strong class=" ">Key</strong>: <i class=" ">ObjectType.CompanyOverview_OfficeUser </i>(the general format is <i class=" ">ObjectType.&lt;class code name with an underscore&gt;</i>)<i class=" "><br/></i></p>
</li><li class=" "><p   
>Type the following text for the English version of the key: <i class=" ">Office manager binding</i></p>
</li><li class=" "><p   
>Click <strong class=" ">Save</strong>.</p>
</li></ol><p   
>The system uses the resource string in the administration interface, for example when selecting classes.</p>
    <h4 id="src-68882249_Creatingcustombindingclasses-Creatingforeignkeysforthedatabasetable" class="heading "><span>Creating foreign keys for the database table</span></h4>
<p   
>You need to manually set the ID columns of your custom binding classes as foreign keys in the corresponding database table.</p>
<p   
>In this example, create foreign keys for the <strong class=" ">OfficeID</strong> and <strong class=" ">UserID</strong> columns in the <strong class=" ">CompanyOverview_OfficeUser</strong> table. Add relationships with the corresponding columns in the <strong class=" ">CompanyOverview_Office</strong> and <strong class=" ">CMS_User</strong> tables respectively.</p>
<p   
>You can either use SQL Server Management Studio or execute an SQL script. See <a  class="external-link" href="http://msdn.microsoft.com/en-us/library/ms189049.aspx">Create Foreign Key Relationships</a> for more information.</p>
    <h4 id="src-68882249_Creatingcustombindingclasses-Buildingabindingmanagementinterface" class="heading "><span>Building a binding management interface</span></h4>
<p   
>The following steps show how to create a custom page in the administration interface that allows users to set relationships between objects:</p>
<ol class=" "><li class=" "><p   
>In the <strong class=" ">Modules</strong> application, edit the <strong class=" ">Company overview</strong> module.</p>
</li><li class=" "><p   
>Select the <strong class=" ">User interface</strong> tab.</p>
</li><li class=" "><p   
>Expand the <strong class=" ">CMS -&gt; Administration -&gt; Custom</strong> element in the UI element tree.</p>
</li></ol>    <h5 id="src-68882249_safe-id-Q3JlYXRpbmdjdXN0b21iaW5kaW5nY2xhc3Nlcy1BZGRpbmd0YWJzdG90aGVvZmZpY2VlZGl0aW5naW50ZXJmYWNlOg" class="heading "><span>Adding tabs to the office editing interface:</span></h5>
<ol class=" "><li class=" "><p   
>Select <strong class=" ">Company overview</strong> in the UI element tree.</p>
</li><li class=" "><p   
>Click <strong class=" ">New element</strong> (<img  class="confluence-embedded-image"  src="images/download/attachments/68879208/new.png" alt="images/download/attachments/68879208/new.png"   />
).</p>
</li><li class=" "><p   
>Set the following properties for the element:<br/></p>
<ul class=" "><li class=" "><p   
><strong class=" ">Display name</strong>: Edit office tabs</p>
</li><li class=" "><p   
><strong class=" ">Code name</strong>: EditOfficeTabs (<strong class=" ">Important</strong>: The code name of elements for editing objects under listings must always start with the <i class=" "><strong class=" ">Edit</strong></i> keyword)</p>
</li><li class=" "><p   
><strong class=" ">Module</strong>: Company overview</p>
</li><li class=" "><p   
><strong class=" ">Display breadcrumbs</strong>: yes</p>
</li><li class=" "><p   
><strong class=" ">Page template</strong>: Vertical tabs</p>
</li></ul></li><li class=" "><p   
>Click <strong class=" ">Save</strong>.</p>
</li></ol>    <h5 id="src-68882249_safe-id-Q3JlYXRpbmdjdXN0b21iaW5kaW5nY2xhc3Nlcy1Nb3Zpbmd0aGVvcmlnaW5hbG9mZmljZWVkaXRpbmdlbGVtZW50dW5kZXJ0aGV0YWJzOg" class="heading "><span>Moving the original office editing element under the tabs:</span></h5>
<ol class=" "><li class=" "><p   
>Select the <strong class=" ">Edit office</strong> element (from the example in <a   href="k11/Creating-custom-modules.htm">Creating custom modules</a>).</p>
</li><li class=" "><p   
>Change the element&#39;s names and move it under the new tabs element:</p>
<ul class=" "><li class=" "><p   
><strong class=" ">Display name</strong>: General</p>
</li><li class=" "><p   
><strong class=" ">Code name</strong>: GeneralEditOffice</p>
</li><li class=" "><p   
><strong class=" ">Parent element</strong>: Edit office tabs</p>
</li></ul></li><li class=" "><p   
>Click <strong class=" ">Save</strong>.</p>
</li><li class=" "><p   
>Open the <strong class=" ">Properties</strong> tab and disable the <strong class=" ">Display breadcrumbs</strong> property.</p>
</li><li class=" "><p   
>Click <strong class=" ">Save</strong>.</p>
</li></ol>    <h5 id="src-68882249_safe-id-Q3JlYXRpbmdjdXN0b21iaW5kaW5nY2xhc3Nlcy1BZGRpbmd0aGViaW5kaW5nbWFuYWdlbWVudGVsZW1lbnQ6" class="heading "><span>Adding the binding management element:</span></h5>
<ol class=" "><li class=" "><p   
>Select the <strong class=" ">Edit office tabs</strong> element in the tree.</p>
</li><li class=" "><p   
>Click <strong class=" ">New element</strong> (<img  class="confluence-embedded-image"  src="images/download/attachments/68879208/new.png" alt="images/download/attachments/68879208/new.png"   />
).</p>
</li><li class=" "><p   
>Set the following properties for the element:<br/></p>
<ul class=" "><li class=" "><p   
><strong class=" ">Display name</strong>: Managers</p>
</li><li class=" "><p   
><strong class=" ">Code name</strong>: ManagersEditOffice</p>
</li><li class=" "><p   
><strong class=" ">Module</strong>: Company overview</p>
</li><li class=" "><p   
><strong class=" ">Page template</strong>: Edit bindings</p>
</li></ul></li><li class=" "><p   
>Click <strong class=" ">Save</strong>.</p>
</li><li class=" "><p   
>Switch to the <strong class=" ">Properties</strong> tab and set the following values in the <strong class=" ">Binding</strong> category:<br/></p>
<ul class=" "><li class=" "><p   
><strong class=" ">Binding object type</strong>: Office manager binding</p>
</li><li class=" "><p   
><strong class=" ">Target object type</strong>: User</p>
</li><li class=" "><p   
><strong class=" ">Where condition</strong>: OfficeID = {% UIContext.ObjectID %}</p>
    <div  class="confbox admonition admonition-info">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
>The following properties define the <strong class=" ">Office &ndash; User</strong> binding:</p>
<ul class=" "><li class=" "><p   
><strong class=" ">Object type</strong> - the first class in the relationship (in this case, the element inherits the <i class=" "><strong class=" ">Custom office</strong></i> object type from the parent elements)</p>
</li><li class=" "><p   
><strong class=" ">Binding object type</strong> - the binding class itself (<i class=" "><strong class=" ">Office manager binding</strong></i>)</p>
</li><li class=" "><p   
><strong class=" ">Target object type</strong> - the second class in the relationship <i class=" ">(<strong class=" ">User</strong></i> in this case)</p>
</li></ul><p   
>The <strong class=" ">Where condition</strong> ensures that only the relationships of the currently edited office object are displayed.</p>
        </div>
    </div>
</li></ul></li><li class=" "><p   
>Click <strong class=" ">Save</strong>.</p>
</li></ol><p   
>The binding editing interface is now ready.</p>
<p   
><img  class="confluence-embedded-image confluence-content-image-border"  src="images/download/attachments/68882249/Edit_Bindings_Element.png" alt="images/download/attachments/68882249/Edit_Bindings_Element.png" width="500" height="346" />
        <br/><span class="caption">Defining a UI element for binding management</span>
    </p>
<p   
>If you open the <strong class=" ">Company overview</strong> application in the <strong class=" ">Custom</strong> category and edit an office, you can manage the office-user bindings on the <strong class=" ">Managers</strong> tab.</p>
<p   
><img  class="confluence-embedded-image confluence-content-image-border"  src="images/download/attachments/68882249/Binding_Management.png" alt="images/download/attachments/68882249/Binding_Management.png" width="500"  />
        <br/><span class="caption">Editing the manager relationships between offices and users</span>
    </p>
        </div>

    </article>


               
            
    <footer id="ht-footer">
    <a href="#" id="ht-jump-top" class="sp-aui-icon-small sp-aui-iconfont-arrows-up"></a>
</footer></div>

<div>
    <div id="ht-mq-detect"></div>
</div>

    <script src="js/lunr.js"></script>
    <script src="js/lunr-extras.js"></script>
    <script src="assets/js/scroll-search.js"></script>

    <script src="assets/js/expand-macro.js"></script>
</body>
</html>
