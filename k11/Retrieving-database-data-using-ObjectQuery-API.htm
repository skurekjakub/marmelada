<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Retrieving database data using ObjectQuery API - Kentico 11 Documentation</title>

    
    <link rel="stylesheet" href="assets/css/expand-macro.css">

            <meta name="scroll-content-language-key" content="">
    
    <meta name="description" content="">
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=2.0, user-scalable=yes">

<script type="text/javascript" src="assets/js/jquery.min.js"></script>
<script type="text/javascript" src="assets/js/jquery.scrollTo.min.js"></script>


<script type="text/javascript" src="assets/js/translate.js"></script>

<script type="text/javascript" src="assets/js/theme.main.js"></script>

    <script type="text/javascript" src="assets/js/iframeResizer.min.js"></script>

<link rel="stylesheet" href="assets/css/content-style.css">
    <link rel="stylesheet" href="assets/css/search.css">

<link rel="stylesheet" href="assets/css/theme.main.css">
<link rel="stylesheet" href="assets/css/theme.colors.css">

            <!-- ES5 support for older browsers, needed by lunr -->
        <script src="js/augment.js"></script> 
        <script id="worker" type="javascript/worker">

        startIndex = function() {
            idx = lunr.Index.load(lunrIndex);
            idx.pipeline.remove(lunr.stopWordFilter);
            postMessage({type: "setup-complete"});
        }

        onmessage = function (event) {
            var message = event.data;

            if ((message.type === 'setup') && message.baseUrl) {
                var url = message.baseUrl;
                importScripts(url + 'js/lunr.js');
                importScripts(url + 'js/lunr-extras.js');
                importScripts(url + 'js/lunr-index.js');
                importScripts(url + 'js/lunr-data.js');
                startIndex();
            }

            if (idx && (message.type === 'search-request') && message.query) {
                var searchWord = message.query;
                var results = idx.search(searchWord).map(function (result) {
                    return lunrData.filter(function (d) {
                        return d.id === parseInt(result.ref, 10)
                    })[0]
                });
                postMessage({type: 'search-results', results: results, query: searchWord, queryId: message.queryId});
            }
        }

    </script>
    </head>

<body pageid="68879260">

<div id="ht-loader">
    <noscript>
        <p style="width: 100%; text-align:center; position: absolute; margin-top: 200px;">This content cannot be displayed without JavaScript.<br>Please enable JavaScript and reload the page.</p>
    </noscript>
</div>

<div>
   	<header id="ht-headerbar">
    <div class="ht-headerbar-left">
        <a href="" id="ht-menu-toggle" class="sp-aui-icon-small sp-aui-iconfont-appswitcher"></a>
    </div>
    <div class="ht-headerbar-right">
            <div class="sp-aui-icon-small ht-search-index-loader ht-header-icon"></div>

        <div id="ht-search">
            <div class="ht-search-input" style="display: none;">
              	<a href="#" class="sp-aui-icon-small sp-aui-iconfont-remove ht-search-clear"></a>

                <form action="#" method="GET" id="search">
                    <input class="search-input" type="text" placeholder="Search" tabindex="-1" autocomplete="off" name="q" value="">
                    <input type="hidden" name="max" value="15" />
                    <input type="submit" style="display:none" tabindex="-4"/>
                </form>

                <a href="#" id="ht-search-button" class="ht-header-icon ht-header-icon-svg">
                                        <svg width="40px" height="40px" viewBox="0 0 40 40" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                        <g>
                            <path d="M29.572,28.802 L28.801,29.571 C28.515,29.857 28.187,30 27.816,30 C27.445,30 27.116,29.857 26.831,29.571 L21.392,24.134 C20.193,24.762 18.908,25.076 17.538,25.076 C15.396,25.076 13.605,24.348 12.163,22.892 C10.721,21.436 10,19.651 10,17.538 C10,15.397 10.721,13.605 12.163,12.163 C13.605,10.721 15.396,10 17.538,10 C19.651,10 21.434,10.721 22.89,12.163 C24.347,13.605 25.075,15.397 25.075,17.538 C25.075,18.937 24.761,20.222 24.132,21.393 L29.572,26.832 C29.857,27.118 30,27.446 30,27.817 C30,28.188 29.857,28.517 29.572,28.802 L29.572,28.802 Z M13.662,21.414 C14.732,22.485 16.024,23.02 17.538,23.02 C19.051,23.02 20.343,22.485 21.413,21.414 C22.484,20.344 23.019,19.052 23.019,17.538 C23.019,16.025 22.484,14.733 21.413,13.662 C20.343,12.592 19.051,12.056 17.538,12.056 C16.024,12.056 14.732,12.592 13.662,13.662 C12.591,14.733 12.056,16.025 12.056,17.538 C12.056,19.052 12.591,20.344 13.662,21.414 L13.662,21.414 Z"></path>
                        </g>
                    </svg>
              	</a>

                <div class="ht-search-dropdown ht-dropdown">
                    <ul></ul>
                </div>
            </div>
        </div>
    </div>
    </header>   	<aside id="ht-sidebar">
    <div class="ht-sidebar-content">
        <div class="ht-sidebar-content-scroll-container">
            <header class="ht-sidebar-header">
                <h1 class="ht-logo">
                    <span class="ht-logo-label">K11</span>
                    <img class="space-logo" src="global.logo" />
                </h1>
                <a href="Kentico-11-Documentation-Home.htm" class="ht-space-link">
                    <h2>Kentico 11 Documentation</h2>
                </a>
            </header>
                            <iframe id="ht-nav" src="toc.html?pageId=68882160"></iframe>
                <script>
                    $('iframe#ht-nav').iFrameResize(
                            { 'log': true, 'autoResize': true, 'heightCalculationMethod': 'lowestElement', 'checkOrigin': false });
                </script>
                    </div>
    </div>

</aside></div>

<div id="ht-wrap-container">

            
    <div id="ht-sidebar-dragbar">
    <div class="ht-sidebar-drag-handle">
        <span class="drag-handle-1"></span>
        <span class="drag-handle-2"></span>
        <span class="drag-handle-3"></span>
    </div>
</div>
    <article id="ht-content" class="ht-content">
        <header class="ht-content-header">
            <div id="ht-breadcrumb">
    <ul>
        <li><a href="Kentico-11-Documentation-Home.htm">Kentico 11 Documentation</a></li>
                                                                                     <li><a href="Custom-development.htm">Custom development</a></li>
                                                            </ul>
</div>            <h1 id="src-68882160"> <span>Retrieving database data using ObjectQuery API</span></h1>
        </header>

        <div id="main-content" class="wiki-content sp-grid-section" data-index-for-search="true">
<p   
>Kentico uses ObjectQuery to provide an abstraction layer over the SQL database. Developers use ObjectQuery to retrieve data from the Kentico database. The main advantages of using ObjectQuery are:</p>
<ul class=" "><li class=" "><p   
>strongly typed and enumerable results</p>
</li><li class=" "><p   
>independence on specific versions of SQL syntax</p>
</li><li class=" "><p   
>security</p>
</li></ul><p   
>ObjectQuery call example:</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">var</code><code class="plain"> query = UserInfoProvider.GetUsers();</code></div>
</div>
    </div>
<p   
>The example query retrieves all users stored within Kentico.</p>
<p   
>The resulting data set contains Info objects. One instance of an Info object represents one row of data from the database. In this case, the result is a set of UserInfo objects. The result allows you to iterate through the records using a foreach statement.</p>
<p   
>Similarly to users, you can use ObjectQuery to retrieve any other type of object. To do that, use the correct InfoProvider class and the GetX method, where X is the object name. The following table provides an example of the naming conventions.</p>
    <div  class="tablewrap">
        <table class="wrapped confluenceTable">
        <thead class=" ">    <tr>
            <td  class="confluenceTh" rowspan="1" colspan="1">
    <p   
>Object</p>
            </td>
                <td  class="confluenceTh" rowspan="1" colspan="1">
    <p   
>Info class name</p>
            </td>
                <td  class="confluenceTh" rowspan="1" colspan="1">
    <p   
>InfoProvider class name</p>
            </td>
                <td  class="confluenceTh" rowspan="1" colspan="1">
    <p   
>ObjectQuery method name</p>
            </td>
        </tr>
</thead><tfoot class=" "></tfoot><tbody class=" ">    <tr>
            <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>A/B test</p>
            </td>
                <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>ABTestInfo</p>
            </td>
                <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>ABTestInfoProvider</p>
            </td>
                <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>GetABTests</p>
            </td>
        </tr>
    <tr>
            <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>CSS Stylesheet</p>
            </td>
                <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>CssStylesheetInfo</p>
            </td>
                <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>CssStylesheetInfoProvider</p>
            </td>
                <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>GetCssStylesheets</p>
            </td>
        </tr>
    <tr>
            <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>E-mail template</p>
            </td>
                <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>EmailTemplateInfo</p>
            </td>
                <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>EmailTemplateInfoProvider</p>
            </td>
                <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>GetEmailTemplates</p>
            </td>
        </tr>
    <tr>
            <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>Page template</p>
            </td>
                <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>PageTemplateInfo</p>
            </td>
                <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>PageTemplateInfoProvider</p>
            </td>
                <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>GetPageTemplates</p>
            </td>
        </tr>
    <tr>
            <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>User</p>
            </td>
                <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>UserInfo</p>
            </td>
                <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>UserInfoProvider</p>
            </td>
                <td  class="confluenceTd" rowspan="1" colspan="1">
    <p   
>GetUsers</p>
            </td>
        </tr>
</tbody>        </table>
            </div>
    <div  class="confbox panel">
            <div class="title panel-header">On this page</div>
            <div class="panel-content">
<p   
></p>
<ul class="toc-indentation "><li class=" "><p   
><a   href="k11/#src-68882160_RetrievingdatabasedatausingObjectQueryAPI-Selectingonlyspecificcolumns">Selecting only specific columns</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68882160_safe-id-UmV0cmlldmluZ2RhdGFiYXNlZGF0YXVzaW5nT2JqZWN0UXVlcnlBUEktTGltaXRpbmd0aGVyZXRyaWV2ZWRyZXN1bHRzKFNRTFdIRVJFKQ">Limiting the retrieved results (SQL WHERE)</a></p>
<ul class="toc-indentation "><li class=" "><p   
><a   href="k11/#src-68882160_RetrievingdatabasedatausingObjectQueryAPI-Logicaloperators">Logical operators</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68882160_RetrievingdatabasedatausingObjectQueryAPI-Nestedwhereconditions">Nested where conditions</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68882160_RetrievingdatabasedatausingObjectQueryAPI-Retrievingdataassignedtoaparticularsite">Retrieving data assigned to a particular site</a></p>
</li></ul></li><li class=" "><p   
><a   href="k11/#src-68882160_safe-id-UmV0cmlldmluZ2RhdGFiYXNlZGF0YXVzaW5nT2JqZWN0UXVlcnlBUEktT3JkZXJpbmdxdWVyeXJlc3VsdHMoU1FMT1JERVJCWSk">Ordering query results (SQL ORDER BY)</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68882160_safe-id-UmV0cmlldmluZ2RhdGFiYXNlZGF0YXVzaW5nT2JqZWN0UXVlcnlBUEktTGltaXRpbmd0aGVudW1iZXJvZnF1ZXJ5cmVzdWx0cyhTUUxUT1BOKQ">Limiting the number of query results (SQL TOP N)</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68882160_safe-id-UmV0cmlldmluZ2RhdGFiYXNlZGF0YXVzaW5nT2JqZWN0UXVlcnlBUEktSm9pbmluZ211bHRpcGxldGFibGVzKFNRTEpPSU4p">Joining multiple tables (SQL JOIN)</a></p>
<ul class="toc-indentation "><li class=" "><p   
><a   href="k11/#src-68882160_RetrievingdatabasedatausingObjectQueryAPI-Joining3ormoretables">Joining 3 or more tables</a></p>
</li></ul></li><li class=" "><p   
><a   href="k11/#src-68882160_RetrievingdatabasedatausingObjectQueryAPI-WorkingwithObjectQueryresults">Working with ObjectQuery results</a></p>
<ul class="toc-indentation "><li class=" "><p   
><a   href="k11/#src-68882160_safe-id-UmV0cmlldmluZ2RhdGFiYXNlZGF0YXVzaW5nT2JqZWN0UXVlcnlBUEktUmV1c2luZ3F1ZXJpZXMobXV0YWJpbGl0eSk">Reusing queries (mutability)</a></p>
</li></ul></li></ul><p   
></p>
        </div>
    </div>
    <div  class="confbox panel">
            <div class="title panel-header">Related pages</div>
            <div class="panel-content">
<ul class=" "><li class=" "><p   
><a   href="k11/Database-table-API.htm">Database table API</a></p>
</li><li class=" "><p   
><a   href="k11/Working-with-pages-in-the-API.htm">Working with pages in the API</a></p>
</li></ul>        </div>
    </div>
    <h3 id="src-68882160_RetrievingdatabasedatausingObjectQueryAPI-Selectingonlyspecificcolumns" class="heading "><span>Selecting only specific columns</span></h3>
<p   
>ObjectQuery allows you to select only those columns that you need to work with. Selecting only the required columns is a good practice that prevents issues with performance of your code by transferring only the necessary amount of data from the database server to the application server.</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">var</code><code class="plain"> columnsQuery = UserInfoProvider.GetUsers()</code></div>
<div class="line"><code class="plain">    .Columns(</code><code class="string">"FirstName"</code><code class="plain">, </code><code class="string">"LastName"</code><code class="plain">, </code><code class="string">"UserName"</code><code class="plain">);</code></div>
</div>
    </div>
<p   
>This example query retrieves all users but limits the data to the users&#39; first names, last names, and usernames.</p>
    <h3 id="src-68882160_safe-id-UmV0cmlldmluZ2RhdGFiYXNlZGF0YXVzaW5nT2JqZWN0UXVlcnlBUEktTGltaXRpbmd0aGVyZXRyaWV2ZWRyZXN1bHRzKFNRTFdIRVJFKQ" class="heading "><span>Limiting the retrieved results (SQL WHERE)</span></h3>
<p   
>ObjectQuery provides a way to narrow down the resulting data using SQL syntax independent where conditions.</p>
<p   
>Use predefined where condition methods that provide optimized performance and make your code easily readable. The predefined where condition methods include, but are not limited to:</p>
<ul class=" "><li class=" "><p   
>WhereEquals(&quot;ColumnName&quot;, value) - checks the equality of the value in the specified column with the value specified in the second parameter.</p>
</li><li class=" "><p   
>WhereGreaterThan(&quot;ColumnName&quot;, value) - compares the value in the specified column with the second parameter.</p>
</li><li class=" "><p   
>WhereNull(&quot;ColumnName&quot;) - select only rows where the specified column has a NULL value.</p>
</li><li class=" "><p   
>WhereNot(whereCondition) - negates the specified where condition.</p>
</li><li class=" "><p   
>WhereStartsWith(&quot;ColumnName&quot;, &quot;Value&quot;) - only works for text columns. Selects only rows whose value in the specified column starts with the given value.</p>
</li></ul><p   
>You can find the full list of predefined where conditions in the <a  class="external-link" href="http://devnet.kentico.com/docs/11_0/api/html/Methods_T_CMS_DataEngine_WhereCondition.htm">Kentico API Reference</a>.</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="comments">// Retrieves all users whose first name is "Joe"</code></div>
<div class="line"><code class="keyword">var</code><code class="plain"> whereQuery = UserInfoProvider.GetUsers().WhereEquals(</code><code class="string">"FirstName"</code><code class="plain">, </code><code class="string">"Joe"</code><code class="plain">);</code></div>
</div>
    </div>
    <div  class="confbox admonition admonition-tip">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">Tip</strong>: Use Visual Studio&#39;s IntelliSense to help you pick the right predefined where condition.</p>
        </div>
    </div>
    <h4 id="src-68882160_RetrievingdatabasedatausingObjectQueryAPI-Logicaloperators" class="heading "><span>Logical operators </span></h4>
<p   
>ObjectQuery allows you to join together multiple where conditions.</p>
<ul class=" "><li class=" "><p   
>By default, the conditions are combined using an AND parameter.</p>
</li><li class=" "><p   
>To place an OR operator between conditions, call the <strong class=" ">Or()</strong> method between the given <i class=" ">Where</i> methods.</p>
</li><li class=" "><p   
>You can also explicitly call the <strong class=" ">And()</strong> method if you wish to make the code of your conditions clearer and easier to read.</p>
</li></ul><p   
><strong class=" ">Example 1</strong>:</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="comments">// Retrieves users whose first name is "Joe" or last name is "Smith"</code></div>
<div class="line"><code class="keyword">var</code><code class="plain"> whereQuery = UserInfoProvider.GetUsers()</code></div>
<div class="line"><code class="plain">    .Where(</code><code class="string">"FirstName"</code><code class="plain">, QueryOperator.Equals, </code><code class="string">"Joe"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">    .Or()</code></div>
<div class="line"><code class="plain">    .Where(</code><code class="string">"LastName"</code><code class="plain">, QueryOperator.Equals, </code><code class="string">"Smith"</code><code class="plain">);</code></div>
</div>
    </div>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                    <div class="title">Generated condition</div>
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-title="Generated condition" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">DECLARE</code><code class="plain"> @FirstName nvarchar(</code><code class="keyword">max</code><code class="plain">) = N</code><code class="string">'Joe'</code><code class="plain">;</code></div>
<div class="line"><code class="keyword">DECLARE</code><code class="plain"> @LastName nvarchar(</code><code class="keyword">max</code><code class="plain">) = N</code><code class="string">'Smith'</code><code class="plain">;</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">...</code></div>
<div class="line"> </div>
<div class="line"><code class="keyword">WHERE</code><code class="plain"> [FirstName] = @FirstName </code><code class="color1">OR</code><code class="plain"> [LastName] = @LastName</code></div>
</div>
    </div>
<p   
><strong class=" ">Example 2</strong>:</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="comments">// Retrieves all enabled users whose first name is "Joe" and email address ends with "localhost.local"</code></div>
<div class="line"><code class="keyword">var</code><code class="plain"> whereQuery = UserInfoProvider.GetUsers()</code></div>
<div class="line"><code class="plain">    .WhereEquals(</code><code class="string">"FirstName"</code><code class="plain">, </code><code class="string">"Joe"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">    .WhereEquals(</code><code class="string">"UserEnabled"</code><code class="plain">, 1)</code></div>
<div class="line"><code class="plain">	.WhereEndsWith(</code><code class="string">"Email"</code><code class="plain">, </code><code class="string">"localhost.local"</code><code class="plain">);</code></div>
</div>
    </div>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                    <div class="title">Generated condition</div>
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-title="Generated condition" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">DECLARE</code><code class="plain"> @FirstName nvarchar(</code><code class="keyword">max</code><code class="plain">) = N</code><code class="string">'John'</code><code class="plain">;</code></div>
<div class="line"><code class="keyword">DECLARE</code><code class="plain"> @UserEnabled </code><code class="keyword">int</code><code class="plain"> = 1;</code></div>
<div class="line"><code class="keyword">DECLARE</code><code class="plain"> @Email nvarchar(</code><code class="keyword">max</code><code class="plain">) = N</code><code class="string">'%localhost.local'</code><code class="plain">;</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">...</code></div>
<div class="line"> </div>
<div class="line"><code class="keyword">WHERE</code><code class="plain"> [FirstName] = @FirstName </code><code class="color1">AND</code><code class="plain"> [UserEnabled] = @UserEnabled </code><code class="color1">AND</code><code class="plain"> [Email] </code><code class="color1">LIKE</code><code class="plain"> @Email</code></div>
</div>
    </div>
    <h4 id="src-68882160_RetrievingdatabasedatausingObjectQueryAPI-Nestedwhereconditions" class="heading "><span>Nested where conditions</span></h4>
<p   
>If you need to construct complex where conditions with multiple AND/OR operators, use nested where conditions:</p>
<p   
><strong class=" ">Note:</strong> You must use the <strong class=" "><i class=" ">new</i></strong> keyword to construct nested where conditions.</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="comments">// Retrieves users named "Smith", whose first name is "Joe" or "John"</code></div>
<div class="line"><code class="keyword">var</code><code class="plain"> nestedWhereQuery = UserInfoProvider.GetUsers()</code></div>
<div class="line"><code class="plain">    .WhereEquals(</code><code class="string">"LastName"</code><code class="plain">, </code><code class="string">"Smith"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">    .Where(</code><code class="keyword">new</code><code class="plain"> WhereCondition()</code></div>
<div class="line"><code class="plain">        .WhereEquals(</code><code class="string">"FirstName"</code><code class="plain">, </code><code class="string">"Joe"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">        .Or()</code></div>
<div class="line"><code class="plain">        .WhereEquals(</code><code class="string">"FirstName"</code><code class="plain">, </code><code class="string">"John"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">    );</code></div>
</div>
    </div>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                    <div class="title">Generated condition</div>
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-title="Generated condition" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">DECLARE</code><code class="plain"> @LastName nvarchar(</code><code class="keyword">max</code><code class="plain">) = N</code><code class="string">'Smith'</code><code class="plain">;</code></div>
<div class="line"><code class="keyword">DECLARE</code><code class="plain"> @FirstName nvarchar(</code><code class="keyword">max</code><code class="plain">) = N</code><code class="string">'Joe'</code><code class="plain">;</code></div>
<div class="line"><code class="keyword">DECLARE</code><code class="plain"> @FirstName1 nvarchar(</code><code class="keyword">max</code><code class="plain">) = N</code><code class="string">'John'</code><code class="plain">;</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">...</code></div>
<div class="line"> </div>
<div class="line"><code class="keyword">WHERE</code><code class="plain"> [LastName] = @LastName </code><code class="color1">AND</code><code class="plain"> ([FirstName] = @FirstName </code><code class="color1">OR</code><code class="plain"> [FirstName] = @FirstName1)</code></div>
</div>
    </div>
    <h4 id="src-68882160_RetrievingdatabasedatausingObjectQueryAPI-Retrievingdataassignedtoaparticularsite" class="heading "><span>Retrieving data assigned to a particular site</span></h4>
<p   
>Many Kentico objects that are stored in the database are related to a particular site. ObjectQuery allows you to filter results by site by providing a site ID or code name.</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="comments">// Retrieves all users assigned to the current site</code></div>
<div class="line"><code class="keyword">var</code><code class="plain"> siteQuery = UserInfoProvider.GetUsers()</code></div>
<div class="line"><code class="plain">    .OnSite(SiteContext.CurrentSiteID);</code></div>
</div>
    </div>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="comments">// Retrieves all users assigned to the Corporate site</code></div>
<div class="line"><code class="keyword">var</code><code class="plain"> siteQuery = UserInfoProvider.GetUsers()</code></div>
<div class="line"><code class="plain">    .OnSite(</code><code class="string">"CorporateSite"</code><code class="plain">);</code></div>
</div>
    </div>
    <h3 id="src-68882160_safe-id-UmV0cmlldmluZ2RhdGFiYXNlZGF0YXVzaW5nT2JqZWN0UXVlcnlBUEktT3JkZXJpbmdxdWVyeXJlc3VsdHMoU1FMT1JERVJCWSk" class="heading "><span>Ordering query results (SQL ORDER BY)</span></h3>
<p   
>ObjectQuery can also sort data. Use .OrderBy, .OrderByAscending, or .OrderByDescending.</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">var</code><code class="plain"> orderedQuery = UserInfoProvider.GetUsers()</code></div>
<div class="line"><code class="plain">    .WhereGreaterThan(</code><code class="string">"UserCreated"</code><code class="plain">, DateTime.Now.AddDays(-7))</code></div>
<div class="line"><code class="plain">    .OrderByDescending(</code><code class="string">"UserCreated"</code><code class="plain">);</code></div>
</div>
    </div>
<p   
>This example retrieves users who registered or were created in the system during the past week. The results are in descending order.</p>
    <h3 id="src-68882160_safe-id-UmV0cmlldmluZ2RhdGFiYXNlZGF0YXVzaW5nT2JqZWN0UXVlcnlBUEktTGltaXRpbmd0aGVudW1iZXJvZnF1ZXJ5cmVzdWx0cyhTUUxUT1BOKQ" class="heading "><span>Limiting the number of query results (SQL TOP N)</span></h3>
<p   
>ObjectQuery can also retrieve only a specified number of results.</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">var</code><code class="plain"> topNQuery = ForumPostInfoProvider.GetForumPosts()</code></div>
<div class="line"><code class="plain">    .TopN(5)</code></div>
<div class="line"><code class="plain">    .OrderByDescending(</code><code class="string">"PostTime"</code><code class="plain">);</code></div>
</div>
    </div>
<p   
>This example retrieves the latest 5 forum posts with the newest post on top.</p>
    <h3 id="src-68882160_safe-id-UmV0cmlldmluZ2RhdGFiYXNlZGF0YXVzaW5nT2JqZWN0UXVlcnlBUEktSm9pbmluZ211bHRpcGxldGFibGVzKFNRTEpPSU4p" class="heading "><span>Joining multiple tables (SQL JOIN)</span></h3>
<p   
>With ObjectQuery, you can combine data from two or more tables based on a common field.</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">var</code><code class="plain"> joinQuery = UserInfoProvider.GetUsers()</code></div>
<div class="line"><code class="plain">	.Source(sourceItem =&gt; sourceItem.Join&lt;UserSettingsInfo&gt;(</code><code class="string">"UserID"</code><code class="plain">, </code><code class="string">"UserSettingsUserID"</code><code class="plain">))</code></div>
<div class="line"><code class="plain">	.WhereEmpty(</code><code class="string">"UserPassword"</code><code class="plain">);</code></div>
</div>
    </div>
<p   
>This example retrieves users, who have not set a password, i.e., whose password is blank.</p>
<p   
>The code on the second line appends CMS_UserSettings table rows to the appropriate user records based on their ID. The code on the third line then selects only rows where the UserPassword is empty.</p>
    <div  class="confbox admonition admonition-info">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
>By default, the <i class=" ">Join&lt;TInfo&gt;</i> method performs an Inner join. For other types of joins, you can call the <i class=" ">LeftJoin&lt;TInfo&gt;</i> or <i class=" ">RightJoin&lt;TInfo&gt;</i> methods. See <a  class="external-link" href="http://www.w3schools.com/sql/sql_join.asp">SQL Joins</a> for more information.</p>
<p   
>For advanced scenarios, you can use the non-generic version of the <i class=" ">Join</i> method. In this case, you need to identify the target table via a <i class=" ">QuerySourceTable</i> object (requires the exact database table name, optionally allows you to specify an alias and <a  class="external-link" href="https://docs.microsoft.com/en-us/sql/t-sql/queries/hints-transact-sql">SQL Hints</a>).</p>
        </div>
    </div>
    <div  class="confbox admonition admonition-note">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">Working with joined data</strong></p>
<p   
>If you need to work with data containing columns from multiple tables, convert the result of the query to a <i class=" ">DataSet</i>. The default ObjectQuery result is strongly typed, so only allows you to access the data of a single Kentico <i class=" ">Info</i> class. Use the <strong class=" ">Result</strong> property of ObjectQuery to get the results as a DataSet.</p>
        </div>
    </div>
    <div  class="confbox admonition admonition-note">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">Limitation</strong>: ObjectQuery joins cannot be used for tables located in different databases. For example, if you have a <a   href="k11/Separating-the-contact-management-database.htm">separated on-line marketing database</a>, you cannot join data from a table in the main database and another table in the separated database. In these cases, use separate ObjectQuery calls and then combine the resulting data manually.</p>
        </div>
    </div>
    <h4 id="src-68882160_RetrievingdatabasedatausingObjectQueryAPI-Joining3ormoretables" class="heading "><span>Joining 3 or more tables</span></h4>
<p   
>You can chain together multiple <i class=" ">Join</i> methods to combine rows from 3 or more database tables.</p>
<p   
><strong class=" ">Note</strong>: When you call the <i class=" ">Join</i> method for a query source, the <i class=" ">left column</i> parameter works with columns within the given query source table by default. When using multiple joins, we recommend that you explicitly specify both the table and column by adding a table name prefix to the left column name, for example: <i class=" ">&quot;CMS_User.UserID&quot;</i></p>
<p   
>The following example joins together rows from 3 tables based on shared user IDs and returns the result as a DataSet.</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">using</code><code class="plain"> System.Data;</code></div>
<div class="line"><code class="keyword">using</code><code class="plain"> CMS.Membership;</code></div>
<div class="line"><code class="keyword">using</code><code class="plain"> CMS.Taxonomy;</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">...</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">DataSet data = UserInfoProvider.GetUsers()</code></div>
<div class="line"><code class="plain">	.Source(sourceItem =&gt; sourceItem.Join&lt;UserSettingsInfo&gt;(</code><code class="string">"CMS_User.UserID"</code><code class="plain">, </code><code class="string">"UserSettingsUserID"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">									.Join&lt;CategoryInfo&gt;(</code><code class="string">"CMS_User.UserID"</code><code class="plain">, </code><code class="string">"CategoryUserID"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">			)</code></div>
<div class="line"><code class="plain">	.Columns(</code><code class="string">"UserID, UserName, UserURLReferrer, CategoryDisplayName"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">	.Result;</code></div>
</div>
    </div>
    <h3 id="src-68882160_RetrievingdatabasedatausingObjectQueryAPI-WorkingwithObjectQueryresults" class="heading "><span>Working with ObjectQuery results</span></h3>
<p   
>ObjectQuery results are <a  class="external-link" href="http://en.wikipedia.org/wiki/Lazy_loading">lazy-loaded</a>. Lazy loading increases performance by executing queries only when you need to work with their results. Most of the examples on this page only constructed the proper SQL queries. The SQL queries are executed when you either enumerate the results using the foreach statement, or cast the query as a different type (for example a DataSet).</p>
<p   
>The system caches the loaded data, so if you work with the results after the query executed, the system will not perform any additional requests to the database.</p>
<p   
>The most common example of working with query results is iterating through them. Use a standard foreach loop.</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">var</code><code class="plain"> userQuery = UserInfoProvider.GetUsers();</code></div>
<div class="line"> </div>
<div class="line"><code class="keyword">foreach</code><code class="plain"> (UserInfo user </code><code class="keyword">in</code><code class="plain"> userQuery)</code></div>
<div class="line"><code class="plain">{</code></div>
<div class="line"><code class="plain">	</code><code class="comments">// Do something with the UserInfo object</code></div>
<div class="line"><code class="plain">}</code></div>
</div>
    </div>
    <div  class="confbox admonition admonition-tip">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">Tip</strong>: You can access the results of ObjectQuery calls in other data formats through the following properties:</p>
<ul class=" "><li class=" "><p   
><strong class=" ">Result</strong> - returns a <i class=" ">DataSet</i> containing the query results. Recommended if you need to bind the data as a data source, and for data containing columns from multiple tables (joins and unions).</p>
</li><li class=" "><p   
><strong class=" ">TypedResult</strong> - returns a strongly typed collection of the query results (<i class=" ">InfoDataSet&lt;TInfo&gt;</i>).</p>
</li></ul>        </div>
    </div>
    <div  class="confbox admonition admonition-info">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">LINQ support</strong></p>
<p   
>ObjectQuery provides limited support for <a  class="external-link" href="https://msdn.microsoft.com/en-us/library/bb397926.aspx">LINQ</a>.</p>
<p   
>Currently, we only recommend using LINQ for simple expressions, such as comparisons with constants. Any other expressions can lead to sub-optimal query execution. Use the ObjectQuery API directly to get optimal performance.</p>
<p   
>When using LINQ to process <i class=" ">ObjectQuery</i> results, always check the resulting queries using the <a   href="k11/Debugging.htm">Kentico SQL query debug</a>.</p>
        </div>
    </div>
    <h4 id="src-68882160_safe-id-UmV0cmlldmluZ2RhdGFiYXNlZGF0YXVzaW5nT2JqZWN0UXVlcnlBUEktUmV1c2luZ3F1ZXJpZXMobXV0YWJpbGl0eSk" class="heading "><span>Reusing queries (mutability)</span></h4>
<p   
>ObjectQuery instances are mutable by default. This means that any changes (method calls) made to existing instances also modify the original query.</p>
<p   
>If you wish to reuse an ObjectQuery instance without modifying the original, use one of the following approaches:</p>
<ul class=" "><li class=" "><p   
>Call the <strong class=" ">Immutable</strong> method for the original query. This ensures automatic cloning of the ObjectQuery instance when it is modified.</p>
</li><li class=" "><p   
>If you want to leave a query mutable, you can call the <strong class=" ">Clone</strong> method to create a new instance which can then be modified without affecting the original.</p>
</li></ul>    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                    <div class="title">Example</div>
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-title="Example" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">using</code><code class="plain"> System.Linq;</code></div>
<div class="line"><code class="keyword">using</code><code class="plain"> CMS.Membership;</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">...</code></div>
<div class="line"> </div>
<div class="line"><code class="comments">// Creates an immutable query for loading users ordered by their full name</code></div>
<div class="line"><code class="keyword">var</code><code class="plain"> userQuery = UserInfoProvider.GetUsers()</code></div>
<div class="line"><code class="plain">	.OrderBy(</code><code class="string">"FullName"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">	.Immutable();</code></div>
<div class="line"> </div>
<div class="line"><code class="comments">// Gets a subset of users based on the original query</code></div>
<div class="line"><code class="keyword">var</code><code class="plain"> enabledUserList = userQuery</code></div>
<div class="line"><code class="plain">	.WhereEquals(</code><code class="string">"UserEnabled"</code><code class="plain">, 1)</code></div>
<div class="line"><code class="plain">	.ToList();</code></div>
<div class="line"> </div>
<div class="line"><code class="comments">// Gets a list of users using the original unmodified query</code></div>
<div class="line"><code class="keyword">var</code><code class="plain"> userList = userQuery.ToList();</code></div>
</div>
    </div>
        </div>

    </article>


               
            
    <footer id="ht-footer">
    <a href="#" id="ht-jump-top" class="sp-aui-icon-small sp-aui-iconfont-arrows-up"></a>
</footer></div>

<div>
    <div id="ht-mq-detect"></div>
</div>

    <script src="js/lunr.js"></script>
    <script src="js/lunr-extras.js"></script>
    <script src="assets/js/scroll-search.js"></script>

    <script src="assets/js/expand-macro.js"></script>
</body>
</html>
