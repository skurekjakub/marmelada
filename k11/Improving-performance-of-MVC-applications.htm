<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Improving performance of MVC applications - Kentico 11 Documentation</title>

    
    <link rel="stylesheet" href="assets/css/expand-macro.css">

            <meta name="scroll-content-language-key" content="">
    
    <meta name="description" content="">
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=2.0, user-scalable=yes">

<script type="text/javascript" src="assets/js/jquery.min.js"></script>
<script type="text/javascript" src="assets/js/jquery.scrollTo.min.js"></script>


<script type="text/javascript" src="assets/js/translate.js"></script>

<script type="text/javascript" src="assets/js/theme.main.js"></script>

    <script type="text/javascript" src="assets/js/iframeResizer.min.js"></script>

<link rel="stylesheet" href="assets/css/content-style.css">
    <link rel="stylesheet" href="assets/css/search.css">

<link rel="stylesheet" href="assets/css/theme.main.css">
<link rel="stylesheet" href="assets/css/theme.colors.css">

            <!-- ES5 support for older browsers, needed by lunr -->
        <script src="js/augment.js"></script> 
        <script id="worker" type="javascript/worker">

        startIndex = function() {
            idx = lunr.Index.load(lunrIndex);
            idx.pipeline.remove(lunr.stopWordFilter);
            postMessage({type: "setup-complete"});
        }

        onmessage = function (event) {
            var message = event.data;

            if ((message.type === 'setup') && message.baseUrl) {
                var url = message.baseUrl;
                importScripts(url + 'js/lunr.js');
                importScripts(url + 'js/lunr-extras.js');
                importScripts(url + 'js/lunr-index.js');
                importScripts(url + 'js/lunr-data.js');
                startIndex();
            }

            if (idx && (message.type === 'search-request') && message.query) {
                var searchWord = message.query;
                var results = idx.search(searchWord).map(function (result) {
                    return lunrData.filter(function (d) {
                        return d.id === parseInt(result.ref, 10)
                    })[0]
                });
                postMessage({type: 'search-results', results: results, query: searchWord, queryId: message.queryId});
            }
        }

    </script>
    </head>

<body pageid="68879260">

<div id="ht-loader">
    <noscript>
        <p style="width: 100%; text-align:center; position: absolute; margin-top: 200px;">This content cannot be displayed without JavaScript.<br>Please enable JavaScript and reload the page.</p>
    </noscript>
</div>

<div>
   	<header id="ht-headerbar">
    <div class="ht-headerbar-left">
        <a href="" id="ht-menu-toggle" class="sp-aui-icon-small sp-aui-iconfont-appswitcher"></a>
    </div>
    <div class="ht-headerbar-right">
            <div class="sp-aui-icon-small ht-search-index-loader ht-header-icon"></div>

        <div id="ht-search">
            <div class="ht-search-input" style="display: none;">
              	<a href="#" class="sp-aui-icon-small sp-aui-iconfont-remove ht-search-clear"></a>

                <form action="#" method="GET" id="search">
                    <input class="search-input" type="text" placeholder="Search" tabindex="-1" autocomplete="off" name="q" value="">
                    <input type="hidden" name="max" value="15" />
                    <input type="submit" style="display:none" tabindex="-4"/>
                </form>

                <a href="#" id="ht-search-button" class="ht-header-icon ht-header-icon-svg">
                                        <svg width="40px" height="40px" viewBox="0 0 40 40" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                        <g>
                            <path d="M29.572,28.802 L28.801,29.571 C28.515,29.857 28.187,30 27.816,30 C27.445,30 27.116,29.857 26.831,29.571 L21.392,24.134 C20.193,24.762 18.908,25.076 17.538,25.076 C15.396,25.076 13.605,24.348 12.163,22.892 C10.721,21.436 10,19.651 10,17.538 C10,15.397 10.721,13.605 12.163,12.163 C13.605,10.721 15.396,10 17.538,10 C19.651,10 21.434,10.721 22.89,12.163 C24.347,13.605 25.075,15.397 25.075,17.538 C25.075,18.937 24.761,20.222 24.132,21.393 L29.572,26.832 C29.857,27.118 30,27.446 30,27.817 C30,28.188 29.857,28.517 29.572,28.802 L29.572,28.802 Z M13.662,21.414 C14.732,22.485 16.024,23.02 17.538,23.02 C19.051,23.02 20.343,22.485 21.413,21.414 C22.484,20.344 23.019,19.052 23.019,17.538 C23.019,16.025 22.484,14.733 21.413,13.662 C20.343,12.592 19.051,12.056 17.538,12.056 C16.024,12.056 14.732,12.592 13.662,13.662 C12.591,14.733 12.056,16.025 12.056,17.538 C12.056,19.052 12.591,20.344 13.662,21.414 L13.662,21.414 Z"></path>
                        </g>
                    </svg>
              	</a>

                <div class="ht-search-dropdown ht-dropdown">
                    <ul></ul>
                </div>
            </div>
        </div>
    </div>
    </header>   	<aside id="ht-sidebar">
    <div class="ht-sidebar-content">
        <div class="ht-sidebar-content-scroll-container">
            <header class="ht-sidebar-header">
                <h1 class="ht-logo">
                    <span class="ht-logo-label">K11</span>
                    <img class="space-logo" src="global.logo" />
                </h1>
                <a href="Kentico-11-Documentation-Home.htm" class="ht-space-link">
                    <h2>Kentico 11 Documentation</h2>
                </a>
            </header>
                            <iframe id="ht-nav" src="toc.html?pageId=68880517"></iframe>
                <script>
                    $('iframe#ht-nav').iFrameResize(
                            { 'log': true, 'autoResize': true, 'heightCalculationMethod': 'lowestElement', 'checkOrigin': false });
                </script>
                    </div>
    </div>

</aside></div>

<div id="ht-wrap-container">

            
    <div id="ht-sidebar-dragbar">
    <div class="ht-sidebar-drag-handle">
        <span class="drag-handle-1"></span>
        <span class="drag-handle-2"></span>
        <span class="drag-handle-3"></span>
    </div>
</div>
    <article id="ht-content" class="ht-content">
        <header class="ht-content-header">
            <div id="ht-breadcrumb">
    <ul>
        <li><a href="Kentico-11-Documentation-Home.htm">Kentico 11 Documentation</a></li>
                                                                                                             <li><a href="" onclick="$('.shortcut').each(function(){$(this).removeClass('shortcut')}); $(this).parent().addClass('shortcut'); return false;">...</a> </li>
                                        <li class="shortcut"><a href="Developing-websites.htm">Developing websites</a></li>
                                                                                                         <li class="shortcut"><a href="Developing-sites-using-ASP.NET-MVC.htm">Developing sites using ASP.NET MVC</a></li>
                                                                                     <li><a href="Developing-MVC-applications.htm">Developing MVC applications</a></li>
                                                            </ul>
</div>            <h1 id="src-68880517"> <span>Improving performance of MVC applications</span></h1>
        </header>

        <div id="main-content" class="wiki-content sp-grid-section" data-index-for-search="true">
    <h3 id="src-68880517_ImprovingperformanceofMVCapplications-ConfiguringwebfarmsonMVCapplications" class="heading "><span>Configuring web farms on MVC applications</span></h3>
<p   
>When using the <a   href="k11/Developing-sites-using-ASP.NET-MVC.htm">MVC development model</a>, your MVC application and Kentico application should always be configured to run as <a   href="k11/Setting-up-web-farms.htm">servers in a web farm</a> (see <a   href="k11/Starting-with-MVC-development.htm">Starting with MVC development</a>). The web farm ensures that the MVC application invalidates cache according to content or setting changes made in the Kentico application and vice versa.</p>
<p   
>The MVC application works as a web farm server, because it uses the same database as the Kentico application and performs operations through the Kentico API.</p>
<p   
>Licensing of the web farm servers works automatically for basic scenarios &ndash; see <a   href="k11/Kentico-licensing-for-MVC-applications.htm">Kentico licensing for MVC applications</a> for details.</p>
    <div  class="confbox panel">
            <div class="title panel-header">On this page</div>
            <div class="panel-content">
<p   
></p>
<ul class="toc-indentation "><li class=" "><p   
><a   href="k11/#src-68880517_ImprovingperformanceofMVCapplications-ConfiguringwebfarmsonMVCapplications">Configuring web farms on MVC applications</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68880517_ImprovingperformanceofMVCapplications-CachinginMVCapplications">Caching in MVC applications</a></p>
<ul class="toc-indentation "><li class=" "><p   
><a   href="k11/#src-68880517_ImprovingperformanceofMVCapplications-CachingdatainMVCapplications">Caching data in MVC applications</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68880517_ImprovingperformanceofMVCapplications-CachingcontrolleractionoutputinMVCapplications">Caching controller action output in MVC applications</a></p>
</li></ul></li></ul><p   
></p>
        </div>
    </div>
    <div  class="confbox admonition admonition-info">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">Adding web farm servers to scale performance</strong></p>
<p   
>If you wish to use a web farm to scale the site&#39;s performance, you can add further instances of the MVC application. We recommend using the following process:</p>
<ol class=" "><li class=" "><p   
>Develop and test the site in a web farm with two servers (one MVC application, one Kentico application).</p>
</li><li class=" "><p   
>Deploy any number of additional instances of the same MVC application. Each instance must connect to the same Kentico database.</p>
</li></ol><p   
>The automatic web farm mode automatically registers the new instances as web farm servers and ensures correct synchronization (among all instances of the MVC application and the Kentico application).</p>
<p   
>If you need to scale the performance of the Kentico administration interface used to manage the site content and settings, you can also run multiple instances of the Kentico application in the web farm. In this scenario, use the standard approach for <a   href="k11/Configuring-web-farm-servers.htm">configuring web farm servers</a>. You need to use one of the servers as the &quot;primary&quot; Kentico instance (for example for holding files shared by the entire web farm, such as <a   href="k11/Using-locally-stored-search-indexes.htm">locally stored search indexes</a>).</p>
<p   
><strong class=" ">Note</strong>: The above scenarios require a license that supports the additional number of web farm servers.</p>
        </div>
    </div>
    <h3 id="src-68880517_ImprovingperformanceofMVCapplications-CachinginMVCapplications" class="heading "><span>Caching in MVC applications</span></h3>
<p   
>You can cache the data and output of controller actions in your MVC application.</p>
<p   
><strong class=" ">Prerequisite</strong>: For caching in your MVC application to work correctly, your Kentico and MVC applications need to be <a   href="k11/#src-68880517_ImprovingperformanceofMVCapplications-ConfiguringwebfarmsonMVCapplications">configured as a web farm</a>.</p>
<p   
>Specifically, you can cache the following:</p>
<ul class=" "><li class=" "><p   
><a   href="k11/#src-68880517_ImprovingperformanceofMVCapplications-CachingdatainMVCapplications">Data</a> you retrieve to display on individual web pages.</p>
</li><li class=" "><p   
><a   href="k11/#src-68880517_ImprovingperformanceofMVCapplications-CachingcontrolleractionoutputinMVCapplications">Output</a> of controller actions.</p>
</li></ul>    <h4 id="src-68880517_ImprovingperformanceofMVCapplications-CachingdatainMVCapplications" class="heading "><span>Caching data in MVC applications</span></h4>
<p   
>We recommend using caching of data, especially for data that is frequently accessed (queried from the database). For example, you may want to cache individual pages, forms and any other data that you retrieve from the Kentico database and display on the site.</p>
<p   
>For pages, custom table data or forms, you can handle the caching in individual repositories that make use of the <a   href="k11/Generating-classes-for-Kentico-objects.htm">generated providers</a>. Another approach would be using <a  class="external-link" href="https://en.wikipedia.org/wiki/Aspect-oriented_programming">AOP</a> and decorating the individual repositories &ndash; see our <a  class="external-link" href="https://github.com/Kentico/mvc">MVC demo site</a> for a reference on how to use this approach.</p>
<p   
>Use the <strong class=" ">CacheHelper.Cache </strong>method to cache data in your code.</p>
    <h5 id="src-68880517_ImprovingperformanceofMVCapplications-Examples" class="heading "><span>Examples</span></h5>
    <div  class="confbox admonition admonition-note">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">Notes</strong></p>
<ul class=" "><li class=" "><p   
>To ensure consistency of the viewed data, always generate cache keys with names that include all the parameters that you use to retrieve the data. For example, a culture code variable in the cache key for page data ensures that visitors do not see cached articles displayed in an old culture after switching to a new culture.</p>
</li><li class=" "><p   
>The examples use minimal cache dependencies. See <a   href="k11/Setting-cache-dependencies.htm">Setting cache dependencies</a> for more information on how to configure cache dependencies for your scenarios.</p>
</li></ul>        </div>
    </div>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                    <div class="title">Caching the data of multiple articles</div>
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-title="Caching the data of multiple articles" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">using</code><code class="plain"> System;</code></div>
<div class="line"><code class="keyword">using</code><code class="plain"> System.Collections.Generic;</code></div>
<div class="line"><code class="keyword">using</code><code class="plain"> System.Linq;</code></div>
<div class="line"> </div>
<div class="line"><code class="keyword">using</code><code class="plain"> CMS.Helpers;</code></div>
<div class="line"><code class="keyword">using</code><code class="plain"> CMS.SiteProvider;</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">...</code></div>
<div class="line"> </div>
<div class="line"><code class="keyword">public</code><code class="plain"> IEnumerable&lt;Article&gt; GetArticles(</code><code class="keyword">int</code><code class="plain"> count = 0)</code></div>
<div class="line"><code class="plain">{</code></div>
<div class="line"><code class="plain">    </code><code class="keyword">string</code><code class="plain"> culture = </code><code class="string">"en-us"</code><code class="plain">;</code></div>
<div class="line"><code class="plain">    </code><code class="keyword">string</code><code class="plain"> siteName = SiteContext.CurrentSiteName;</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">    Func&lt;IEnumerable&lt;Article&gt;&gt; dataLoadMethod = () =&gt; ArticleProvider.GetArticles()</code></div>
<div class="line"><code class="plain">            .OnSite(siteName)</code></div>
<div class="line"><code class="plain">            .Culture(culture)</code></div>
<div class="line"><code class="plain">            .TopN(count)</code></div>
<div class="line"><code class="plain">            .OrderByDescending(</code><code class="string">"DocumentPublishFrom"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">            .TypedResult; </code><code class="comments">// Ensures that the result of the query is saved, not the query itself</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">    </code><code class="keyword">var</code><code class="plain"> cacheSettings = </code><code class="keyword">new</code><code class="plain"> CacheSettings(10, </code><code class="string">"myapp|data|articles"</code><code class="plain">, siteName, culture, count)</code></div>
<div class="line"><code class="plain">    {</code></div>
<div class="line"><code class="plain">        GetCacheDependency = () =&gt;</code></div>
<div class="line"><code class="plain">        {</code></div>
<div class="line"><code class="plain">            </code><code class="comments">// Create caches dependencies. This example makes the cache clear data when any article is modified, deleted, or created in Kentico.</code></div>
<div class="line"><code class="plain">            </code><code class="keyword">string</code><code class="plain"> dependencyCacheKey = String.Format(</code><code class="string">"nodes|{0}|{1}|all"</code><code class="plain">, siteName, Article.CLASS_NAME.ToLowerInvariant());</code></div>
<div class="line"><code class="plain">            </code><code class="keyword">return</code><code class="plain"> CacheHelper.GetCacheDependency(dependencyCacheKey);</code></div>
<div class="line"><code class="plain">        }</code></div>
<div class="line"><code class="plain">    };</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">    </code><code class="keyword">return</code><code class="plain"> CacheHelper.Cache(dataLoadMethod, cacheSettings);</code></div>
<div class="line"><code class="plain">}</code></div>
</div>
    </div>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                    <div class="title">Caching the data of a single article</div>
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-title="Caching the data of a single article" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">using</code><code class="plain"> System;</code></div>
<div class="line"><code class="keyword">using</code><code class="plain"> System.Linq;</code></div>
<div class="line"> </div>
<div class="line"><code class="keyword">using</code><code class="plain"> CMS.Helpers;</code></div>
<div class="line"><code class="keyword">using</code><code class="plain"> CMS.SiteProvider;</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">...</code></div>
<div class="line"> </div>
<div class="line"><code class="keyword">public</code><code class="plain"> Article GetArticle(Guid nodeGuid)</code></div>
<div class="line"><code class="plain">{</code></div>
<div class="line"><code class="plain">    </code><code class="keyword">string</code><code class="plain"> culture = </code><code class="string">"en-us"</code><code class="plain">;</code></div>
<div class="line"><code class="plain">    </code><code class="keyword">string</code><code class="plain"> siteName = SiteContext.CurrentSiteName;</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">    Func&lt;Article&gt; dataLoadMethod = () =&gt; ArticleProvider.GetArticle(nodeGuid, culture, siteName)</code></div>
<div class="line"><code class="plain">                                                        .TopN(1)</code></div>
<div class="line"><code class="plain">                                                        .FirstOrDefault();</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">    </code><code class="keyword">var</code><code class="plain"> cacheSettings = </code><code class="keyword">new</code><code class="plain"> CacheSettings(10, </code><code class="string">"myapp|data|article"</code><code class="plain">, nodeGuid, culture, siteName)</code></div>
<div class="line"><code class="plain">    {</code></div>
<div class="line"><code class="plain">        GetCacheDependency = () =&gt;</code></div>
<div class="line"><code class="plain">        {</code></div>
<div class="line"><code class="plain">            </code><code class="comments">// Creates cache dependencies. This example makes the cache clear the data when the specified article is modified in Kentico (any culture version).</code></div>
<div class="line"><code class="plain">            </code><code class="keyword">string</code><code class="plain"> dependencyCacheKey = String.Format(</code><code class="string">"nodeguid|{0}|{1}"</code><code class="plain">, siteName, nodeGuid);</code></div>
<div class="line"><code class="plain">            </code><code class="keyword">return</code><code class="plain"> CacheHelper.GetCacheDependency(dependencyCacheKey);</code></div>
<div class="line"><code class="plain">        }</code></div>
<div class="line"><code class="plain">    };</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">    </code><code class="keyword">return</code><code class="plain"> CacheHelper.Cache(dataLoadMethod, cacheSettings);</code></div>
<div class="line"><code class="plain">}</code></div>
</div>
    </div>
    <h4 id="src-68880517_ImprovingperformanceofMVCapplications-CachingcontrolleractionoutputinMVCapplications" class="heading "><span>Caching controller action output in MVC applications</span></h4>
<p   
>You can cache the output of individual controller actions using <a  class="external-link" href="https://docs.microsoft.com/en-us/aspnet/mvc/overview/older-versions-1/controllers-and-routing/improving-performance-with-output-caching-cs">ASP.NET output caching</a>. This can significantly increase your website performance. We recommend caching the output of all possible controller actions, especially on controllers that return often requested views.</p>
<p   
>Use the <a  class="external-link" href="https://docs.microsoft.com/en-us/dotnet/api/system.web.mvc.outputcacheattribute">OutputCache</a> attribute to mark the action methods you want to cache. Set the cache duration (in seconds) and other properties of the attribute.</p>
<p   
>When storing the output cache on the server (when the <i class=" ">OutputCache</i> attribute&#39;s <i class=" ">Location</i> property is set to <i class=" ">Server</i>), you can define cache dependencies to accommodate various scenarios with both static and dynamic content. Use the <strong class=" ">HttpContext.Response.AddCacheItemDependency()</strong> method to add dependencies in individual controller action methods.</p>
<p   
>Controller actions can be called in situations in which the dummy cache items have not yet been created. To account for that, ensure the existence of the dummy cache item explicitly by calling <i class=" ">CacheHelper.EnsureDummyKey()</i>.</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">using</code><code class="plain"> System;</code></div>
<div class="line"><code class="keyword">using</code><code class="plain"> System.Web.UI;</code></div>
<div class="line"><code class="keyword">using</code><code class="plain"> System.Web.Mvc;</code></div>
<div class="line"> </div>
<div class="line"><code class="keyword">using</code><code class="plain"> CMS.Helpers;</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">...</code></div>
<div class="line"><code class="plain"> </code></div>
<div class="line"><code class="plain">[OutputCache(Duration=600, VaryByParam=</code><code class="string">"none"</code><code class="plain">, Location = OutputCacheLocation.Server)]</code></div>
<div class="line"><code class="keyword">public</code><code class="plain"> ActionResult Index()</code></div>
<div class="line"><code class="plain">{</code></div>
<div class="line"><code class="plain">	</code><code class="keyword">var</code><code class="plain"> articles = mArticleRepository.GetArticles();</code></div>
<div class="line"><code class="plain"> </code></div>
<div class="line"><code class="plain">	</code><code class="comments">// Sets cache dependencies. This example makes the system clear the cache when any article is modified in Kentico.</code></div>
<div class="line"><code class="plain">	</code><code class="keyword">string</code><code class="plain"> dependencyCacheKey = String.Format(</code><code class="string">"nodes|mvcsite|{0}|all"</code><code class="plain">, Article.ClassName.ToLowerInvariant());</code></div>
<div class="line"><code class="plain">	CacheHelper.EnsureDummyKey(dependencyCacheKey);</code></div>
<div class="line"><code class="plain">	HttpContext.Response.AddCacheItemDependency(dependencyCacheKey);</code></div>
<div class="line"><code class="plain"> </code></div>
<div class="line"><code class="plain">	</code><code class="keyword">return</code><code class="plain"> View(articles);</code></div>
<div class="line"><code class="plain">}</code></div>
</div>
    </div>
<p   
><strong class=" ">Note</strong>: The example uses minimal cache dependencies &ndash; the cache is cleared when any of the articles the method works with is modified, deleted, or when a new article is created. See <a   href="k11/Setting-cache-dependencies.htm">Setting cache dependencies</a> for more information on how to configure cache dependencies for your scenarios.</p>
        </div>

    </article>


               
            
    <footer id="ht-footer">
    <a href="#" id="ht-jump-top" class="sp-aui-icon-small sp-aui-iconfont-arrows-up"></a>
</footer></div>

<div>
    <div id="ht-mq-detect"></div>
</div>

    <script src="js/lunr.js"></script>
    <script src="js/lunr-extras.js"></script>
    <script src="assets/js/scroll-search.js"></script>

    <script src="assets/js/expand-macro.js"></script>
</body>
</html>
