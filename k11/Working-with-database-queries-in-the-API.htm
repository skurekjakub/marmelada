<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Working with database queries in the API - Kentico 11 Documentation</title>

    
    <link rel="stylesheet" href="assets/css/expand-macro.css">

            <meta name="scroll-content-language-key" content="">
    
    <meta name="description" content="">
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=2.0, user-scalable=yes">

<script type="text/javascript" src="assets/js/jquery.min.js"></script>
<script type="text/javascript" src="assets/js/jquery.scrollTo.min.js"></script>


<script type="text/javascript" src="assets/js/translate.js"></script>

<script type="text/javascript" src="assets/js/theme.main.js"></script>

    <script type="text/javascript" src="assets/js/iframeResizer.min.js"></script>

<link rel="stylesheet" href="assets/css/content-style.css">
    <link rel="stylesheet" href="assets/css/search.css">

<link rel="stylesheet" href="assets/css/theme.main.css">
<link rel="stylesheet" href="assets/css/theme.colors.css">

            <!-- ES5 support for older browsers, needed by lunr -->
        <script src="js/augment.js"></script> 
        <script id="worker" type="javascript/worker">

        startIndex = function() {
            idx = lunr.Index.load(lunrIndex);
            idx.pipeline.remove(lunr.stopWordFilter);
            postMessage({type: "setup-complete"});
        }

        onmessage = function (event) {
            var message = event.data;

            if ((message.type === 'setup') && message.baseUrl) {
                var url = message.baseUrl;
                importScripts(url + 'js/lunr.js');
                importScripts(url + 'js/lunr-extras.js');
                importScripts(url + 'js/lunr-index.js');
                importScripts(url + 'js/lunr-data.js');
                startIndex();
            }

            if (idx && (message.type === 'search-request') && message.query) {
                var searchWord = message.query;
                var results = idx.search(searchWord).map(function (result) {
                    return lunrData.filter(function (d) {
                        return d.id === parseInt(result.ref, 10)
                    })[0]
                });
                postMessage({type: 'search-results', results: results, query: searchWord, queryId: message.queryId});
            }
        }

    </script>
    </head>

<body pageid="68879260">

<div id="ht-loader">
    <noscript>
        <p style="width: 100%; text-align:center; position: absolute; margin-top: 200px;">This content cannot be displayed without JavaScript.<br>Please enable JavaScript and reload the page.</p>
    </noscript>
</div>

<div>
   	<header id="ht-headerbar">
    <div class="ht-headerbar-left">
        <a href="" id="ht-menu-toggle" class="sp-aui-icon-small sp-aui-iconfont-appswitcher"></a>
    </div>
    <div class="ht-headerbar-right">
            <div class="sp-aui-icon-small ht-search-index-loader ht-header-icon"></div>

        <div id="ht-search">
            <div class="ht-search-input" style="display: none;">
              	<a href="#" class="sp-aui-icon-small sp-aui-iconfont-remove ht-search-clear"></a>

                <form action="#" method="GET" id="search">
                    <input class="search-input" type="text" placeholder="Search" tabindex="-1" autocomplete="off" name="q" value="">
                    <input type="hidden" name="max" value="15" />
                    <input type="submit" style="display:none" tabindex="-4"/>
                </form>

                <a href="#" id="ht-search-button" class="ht-header-icon ht-header-icon-svg">
                                        <svg width="40px" height="40px" viewBox="0 0 40 40" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                        <g>
                            <path d="M29.572,28.802 L28.801,29.571 C28.515,29.857 28.187,30 27.816,30 C27.445,30 27.116,29.857 26.831,29.571 L21.392,24.134 C20.193,24.762 18.908,25.076 17.538,25.076 C15.396,25.076 13.605,24.348 12.163,22.892 C10.721,21.436 10,19.651 10,17.538 C10,15.397 10.721,13.605 12.163,12.163 C13.605,10.721 15.396,10 17.538,10 C19.651,10 21.434,10.721 22.89,12.163 C24.347,13.605 25.075,15.397 25.075,17.538 C25.075,18.937 24.761,20.222 24.132,21.393 L29.572,26.832 C29.857,27.118 30,27.446 30,27.817 C30,28.188 29.857,28.517 29.572,28.802 L29.572,28.802 Z M13.662,21.414 C14.732,22.485 16.024,23.02 17.538,23.02 C19.051,23.02 20.343,22.485 21.413,21.414 C22.484,20.344 23.019,19.052 23.019,17.538 C23.019,16.025 22.484,14.733 21.413,13.662 C20.343,12.592 19.051,12.056 17.538,12.056 C16.024,12.056 14.732,12.592 13.662,13.662 C12.591,14.733 12.056,16.025 12.056,17.538 C12.056,19.052 12.591,20.344 13.662,21.414 L13.662,21.414 Z"></path>
                        </g>
                    </svg>
              	</a>

                <div class="ht-search-dropdown ht-dropdown">
                    <ul></ul>
                </div>
            </div>
        </div>
    </div>
    </header>   	<aside id="ht-sidebar">
    <div class="ht-sidebar-content">
        <div class="ht-sidebar-content-scroll-container">
            <header class="ht-sidebar-header">
                <h1 class="ht-logo">
                    <span class="ht-logo-label">K11</span>
                    <img class="space-logo" src="global.logo" />
                </h1>
                <a href="Kentico-11-Documentation-Home.htm" class="ht-space-link">
                    <h2>Kentico 11 Documentation</h2>
                </a>
            </header>
                            <iframe id="ht-nav" src="toc.html?pageId=68882141"></iframe>
                <script>
                    $('iframe#ht-nav').iFrameResize(
                            { 'log': true, 'autoResize': true, 'heightCalculationMethod': 'lowestElement', 'checkOrigin': false });
                </script>
                    </div>
    </div>

</aside></div>

<div id="ht-wrap-container">

            
    <div id="ht-sidebar-dragbar">
    <div class="ht-sidebar-drag-handle">
        <span class="drag-handle-1"></span>
        <span class="drag-handle-2"></span>
        <span class="drag-handle-3"></span>
    </div>
</div>
    <article id="ht-content" class="ht-content">
        <header class="ht-content-header">
            <div id="ht-breadcrumb">
    <ul>
        <li><a href="Kentico-11-Documentation-Home.htm">Kentico 11 Documentation</a></li>
                                                                                                             <li><a href="" onclick="$('.shortcut').each(function(){$(this).removeClass('shortcut')}); $(this).parent().addClass('shortcut'); return false;">...</a> </li>
                                        <li class="shortcut"><a href="Custom-development.htm">Custom development</a></li>
                                                                                     <li><a href="Miscellaneous-custom-development-tasks.htm">Miscellaneous custom development tasks</a></li>
                                                            </ul>
</div>            <h1 id="src-68882141"> <span>Working with database queries in the API</span></h1>
        </header>

        <div id="main-content" class="wiki-content sp-grid-section" data-index-for-search="true">
    <h3 id="src-68882141_WorkingwithdatabasequeriesintheAPI-Runningqueries" class="heading "><span>Running queries</span></h3>
<p   
>You can execute system queries in your custom code.</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                    <div class="title">Examples</div>
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-title="Examples" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">using</code><code class="plain"> System.Data;</code></div>
<div class="line"><code class="keyword">using</code><code class="plain"> CMS.DataEngine;</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">...</code></div>
<div class="line"> </div>
<div class="line"><code class="comments">// Executes the cms.user.selectall query, with specified columns, and a WHERE and ORDER BY clause</code></div>
<div class="line"><code class="plain">DataSet users = </code><code class="keyword">new</code><code class="plain"> DataQuery(</code><code class="string">"cms.user.selectall"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">	.Columns(</code><code class="string">"UserID"</code><code class="plain">, </code><code class="string">"UserName"</code><code class="plain">, </code><code class="string">"FullName"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">	.Where(</code><code class="string">"UserName"</code><code class="plain">, QueryOperator.Like, </code><code class="string">"%admin%"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">	.OrderBy(</code><code class="string">"FullName"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">	.Execute();</code></div>
<div class="line"> </div>
<div class="line"><code class="comments">// Assigns the value "administrator" to the "@UserName" query parameter</code></div>
<div class="line"><code class="plain">QueryDataParameters parameters = </code><code class="keyword">new</code><code class="plain"> QueryDataParameters();</code></div>
<div class="line"><code class="plain">parameters.Add(</code><code class="string">"@UserName"</code><code class="plain">, </code><code class="string">"administrator"</code><code class="plain">);</code></div>
<div class="line"> </div>
<div class="line"><code class="comments">// Executes the cms.user.selectbyusername query</code></div>
<div class="line"><code class="comments">// Uses the "administrator" value for the "@UserName" parameter in the query's code</code></div>
<div class="line"><code class="keyword">var</code><code class="plain"> query = </code><code class="keyword">new</code><code class="plain"> DataQuery(</code><code class="string">"cms.user.selectbyusername"</code><code class="plain">);</code></div>
<div class="line"><code class="plain">query.Parameters = parameters;</code></div>
<div class="line"><code class="plain">DataSet selectedUser = query.Result;</code></div>
</div>
    </div>
<p   
>To create custom queries or modify existing ones, use one of the following approaches:</p>
<ul class=" "><li class=" "><p   
>Manually edit the <strong class=" ">CMS_Query</strong> database table.</p>
</li><li class=" "><p   
>Manage queries through the administration interface in:<br/><br/></p>
<ul class=" "><li class=" "><p   
><strong class=" ">Page types -&gt; Edit page type -&gt; Queries</strong></p>
</li><li class=" "><p   
><strong class=" ">Custom tables -&gt; Edit table -&gt; Queries</strong></p>
</li><li class=" "><p   
><strong class=" ">Modules -&gt; Edit module -&gt; Classes -&gt; Edit class -&gt; Queries</strong><br/><br/></p>
</li></ul></li></ul>    <div  class="confbox panel">
            <div class="title panel-header">On this page</div>
            <div class="panel-content">
<p   
></p>
<ul class="toc-indentation "><li class=" "><p   
><a   href="k11/#src-68882141_WorkingwithdatabasequeriesintheAPI-Runningqueries">Running queries</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68882141_WorkingwithdatabasequeriesintheAPI-Pre-processingqueries">Pre-processing queries</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68882141_WorkingwithdatabasequeriesintheAPI-Post-processingqueries">Post-processing queries</a></p>
</li></ul><p   
></p>
        </div>
    </div>
    <div  class="confbox panel">
            <div class="title panel-header">Related pages</div>
            <div class="panel-content">
<ul class=" "><li class=" "><p   
><a   href="k11/Loading-data-using-custom-queries.htm">Loading data using custom queries</a></p>
</li><li class=" "><p   
><a   href="k11/Retrieving-database-data-using-ObjectQuery-API.htm">Retrieving database data using ObjectQuery API</a></p>
</li><li class=" "><p   
><a   href="k11/CMS-controls---Listings-and-viewers-with-custom-queries.htm">CMS controls - Listings and viewers with custom queries</a></p>
</li></ul>        </div>
    </div>
    <h3 id="src-68882141_WorkingwithdatabasequeriesintheAPI-Pre-processingqueries" class="heading "><span>Pre-processing queries</span></h3>
<p   
>You can pre-process database queries using the <strong class=" ">ExecuteQuery.Before</strong> event of the <strong class=" ">SqlEvents</strong> class. The system raises the event before executing any database query. The event allows you to dynamically modify the behavior and code of queries.</p>
<p   
>To create a handler for the <i class=" ">ExecuteQuery.Before</i> event:</p>
<ol class=" "><li class=" "><p   
>Open your Kentico web project in Visual Studio (using the <strong class=" ">WebSite.sln</strong> or <strong class=" ">WebApp.sln</strong> file).</p>
</li><li class=" "><p   
>Create a <a   href="k11/Initializing-modules-to-run-custom-code.htm">custom module class</a>.</p>
<ul class=" "><li class=" "><p   
>Either add the class into a custom project within the Kentico solution (recommended) or directly into the Kentico web project (into a custom folder under the <strong class=" ">CMSApp</strong> project for <i class=" ">web application</i> installations, into the <strong class=" ">App_Code</strong> folder for <i class=" ">web site</i> installations).</p>
    <div  class="confbox admonition admonition-info">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
>For basic execution of initialization code, you only need to register a &quot;code-only&quot; module through the API. You do NOT need to create a new module within the <strong class=" ">Modules</strong> application in the Kentico administration interface.</p>
        </div>
    </div>
</li></ul></li><li class=" "><p   
>Override the module&#39;s <strong class=" ">OnInit</strong> method and assign a handler method to the <strong class=" ">SqlEvents.ExecuteQuery.Before</strong> event.</p>
</li><li class=" "><p   
>Define the handler method as required.</p>
</li></ol><p   
>The system automatically runs the module&#39;s <strong class=" ">OnInit</strong> method when the application starts, which registers your event handler.</p>
<p   
>The following handler example replaces <i class=" ">CMS_User</i> with <i class=" ">View_CMS_User</i> in the query code when processing the <i class=" ">cms.user.selectall</i> query:</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">using</code><code class="plain"> System.Data;</code></div>
<div class="line"> </div>
<div class="line"><code class="keyword">using</code><code class="plain"> CMS;</code></div>
<div class="line"><code class="keyword">using</code><code class="plain"> CMS.DataEngine;</code></div>
<div class="line"> </div>
<div class="line"><code class="comments">// Registers the custom module into the system</code></div>
<div class="line"><code class="plain">[assembly: RegisterModule(</code><code class="keyword">typeof</code><code class="plain">(CustomQueryProcessingModule))]</code></div>
<div class="line"> </div>
<div class="line"><code class="keyword">public</code><code class="plain"> </code><code class="keyword">class</code><code class="plain"> CustomQueryProcessingModule : Module</code></div>
<div class="line"><code class="plain">{</code></div>
<div class="line"><code class="plain">	</code><code class="comments">// Module class constructor, the system registers the module under the name "CustomQueryProcessing"</code></div>
<div class="line"><code class="plain">	</code><code class="keyword">public</code><code class="plain"> CustomQueryProcessingModule()</code></div>
<div class="line"><code class="plain">		: </code><code class="keyword">base</code><code class="plain">(</code><code class="string">"CustomQueryProcessing"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">	{</code></div>
<div class="line"><code class="plain">	}    </code></div>
<div class="line"> </div>
<div class="line"><code class="plain">	</code><code class="comments">// Contains initialization code that is executed when the application starts</code></div>
<div class="line"><code class="plain">	</code><code class="keyword">protected</code><code class="plain"> </code><code class="keyword">override</code><code class="plain"> </code><code class="keyword">void</code><code class="plain"> OnInit()</code></div>
<div class="line"><code class="plain">	{</code></div>
<div class="line"><code class="plain">		</code><code class="keyword">base</code><code class="plain">.OnInit();</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">		SqlEvents.ExecuteQuery.Before += BeforeExecuteQuery;</code></div>
<div class="line"><code class="plain">	}</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">	</code><code class="comments">// Replaces CMS_User with View_CMS_User in the query code when processing the cms.user.selectall query</code></div>
<div class="line"><code class="plain">	</code><code class="keyword">static</code><code class="plain"> </code><code class="keyword">void</code><code class="plain"> BeforeExecuteQuery(</code><code class="keyword">object</code><code class="plain"> sender, ExecuteQueryEventArgs&lt;DataSet&gt; e)</code></div>
<div class="line"><code class="plain">	{</code></div>
<div class="line"><code class="plain">		</code><code class="keyword">if</code><code class="plain"> (e.Query.Name != </code><code class="keyword">null</code><code class="plain">)</code></div>
<div class="line"><code class="plain">		{</code></div>
<div class="line"><code class="plain">			</code><code class="keyword">switch</code><code class="plain"> (e.Query.Name.ToLower())</code></div>
<div class="line"><code class="plain">			{</code></div>
<div class="line"><code class="plain">				</code><code class="keyword">case</code><code class="plain"> </code><code class="string">"cms.user.selectall"</code><code class="plain">:</code></div>
<div class="line"><code class="plain">					e.Query.Text = e.Query.Text.Replace(</code><code class="string">"CMS_User"</code><code class="plain">, </code><code class="string">"View_CMS_User"</code><code class="plain">);</code></div>
<div class="line"><code class="plain">					</code><code class="keyword">break</code><code class="plain">;</code></div>
<div class="line"><code class="plain">			}</code></div>
<div class="line"><code class="plain">		}</code></div>
<div class="line"><code class="plain">	}</code></div>
<div class="line"><code class="plain">}</code></div>
</div>
    </div>
    <h3 id="src-68882141_WorkingwithdatabasequeriesintheAPI-Post-processingqueries" class="heading "><span>Post-processing queries</span></h3>
<p   
>You can process the results of queries using the <strong class=" ">ExecuteQuery.After</strong> event of the <strong class=" ">SqlEvents</strong> class. The system raises the event after executing any database query. The event allows you to use or modify the data retrieved by queries.</p>
<p   
>To create a handler for the <i class=" ">ExecuteQuery.After</i> event:</p>
<ol class=" "><li class=" "><p   
>Open your Kentico web project in Visual Studio (using the <strong class=" ">WebSite.sln</strong> or <strong class=" ">WebApp.sln</strong> file).</p>
</li><li class=" "><p   
>Create a <a   href="k11/Initializing-modules-to-run-custom-code.htm">custom module class</a>.</p>
<ul class=" "><li class=" "><p   
>Either add the class into a custom project within the Kentico solution (recommended) or directly into the Kentico web project (into a custom folder under the <strong class=" ">CMSApp</strong> project for <i class=" ">web application</i> installations, into the <strong class=" ">App_Code</strong> folder for <i class=" ">web site</i> installations).</p>
    <div  class="confbox admonition admonition-info">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
>For basic execution of initialization code, you only need to register a &quot;code-only&quot; module through the API. You do NOT need to create a new module within the <strong class=" ">Modules</strong> application in the Kentico administration interface.</p>
        </div>
    </div>
</li></ul></li><li class=" "><p   
>Override the module&#39;s <strong class=" ">OnInit</strong> method and assign a handler method to the <strong class=" ">SqlEvents.ExecuteQuery.After</strong> event.</p>
</li><li class=" "><p   
>Define the handler method as required.</p>
</li></ol><p   
>The system automatically runs the module&#39;s <strong class=" ">OnInit</strong> method when the application starts, which registers your event handler.</p>
<p   
>The following handler example dynamically generates the full name of users and overrides the default full name (whenever the <i class=" ">cms.user.selectall</i> query is executed).</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">using</code><code class="plain"> System.Data;</code></div>
<div class="line"> </div>
<div class="line"><code class="keyword">using</code><code class="plain"> CMS;</code></div>
<div class="line"><code class="keyword">using</code><code class="plain"> CMS.DataEngine;</code></div>
<div class="line"> </div>
<div class="line"><code class="comments">// Registers the custom module into the system</code></div>
<div class="line"><code class="plain">[assembly: RegisterModule(</code><code class="keyword">typeof</code><code class="plain">(CustomQueryProcessingModule))]</code></div>
<div class="line"> </div>
<div class="line"><code class="keyword">public</code><code class="plain"> </code><code class="keyword">class</code><code class="plain"> CustomQueryProcessingModule : Module</code></div>
<div class="line"><code class="plain">{</code></div>
<div class="line"><code class="plain">	</code><code class="comments">// Module class constructor, the system registers the module under the name "CustomQueryProcessing"</code></div>
<div class="line"><code class="plain">	</code><code class="keyword">public</code><code class="plain"> CustomQueryProcessingModule()</code></div>
<div class="line"><code class="plain">		: </code><code class="keyword">base</code><code class="plain">(</code><code class="string">"CustomQueryProcessing"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">	{</code></div>
<div class="line"><code class="plain">	}</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">	</code><code class="comments">// Contains initialization code that is executed when the application starts</code></div>
<div class="line"><code class="plain">	</code><code class="keyword">protected</code><code class="plain"> </code><code class="keyword">override</code><code class="plain"> </code><code class="keyword">void</code><code class="plain"> OnInit()</code></div>
<div class="line"><code class="plain">	{</code></div>
<div class="line"><code class="plain">		</code><code class="keyword">base</code><code class="plain">.OnInit();</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">		SqlEvents.ExecuteQuery.After += AfterExecuteQuery;</code></div>
<div class="line"><code class="plain">	}</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">	</code><code class="comments">// Generates the full name of users and overrides the default full name whenever the cms.user.selectall query is executed</code></div>
<div class="line"><code class="plain">	</code><code class="keyword">static</code><code class="plain"> </code><code class="keyword">void</code><code class="plain"> AfterExecuteQuery(</code><code class="keyword">object</code><code class="plain"> sender, ExecuteQueryEventArgs&lt;DataSet&gt; e)</code></div>
<div class="line"><code class="plain">	{</code></div>
<div class="line"><code class="plain">		</code><code class="keyword">if</code><code class="plain"> (e.Query.Name != </code><code class="keyword">null</code><code class="plain">)</code></div>
<div class="line"><code class="plain">		{</code></div>
<div class="line"><code class="plain">			</code><code class="keyword">switch</code><code class="plain"> (e.Query.Name.ToLower())</code></div>
<div class="line"><code class="plain">			{</code></div>
<div class="line"><code class="plain">				</code><code class="keyword">case</code><code class="plain"> </code><code class="string">"cms.user.selectall"</code><code class="plain">:</code></div>
<div class="line"><code class="plain">					</code><code class="keyword">if</code><code class="plain"> (e.Result != </code><code class="keyword">null</code><code class="plain">)</code></div>
<div class="line"><code class="plain">					{</code></div>
<div class="line"><code class="plain">						DataTable dt = e.Result.Tables[0];</code></div>
<div class="line"><code class="plain">						</code><code class="keyword">foreach</code><code class="plain"> (DataRow dr </code><code class="keyword">in</code><code class="plain"> dt.Rows)</code></div>
<div class="line"><code class="plain">						{</code></div>
<div class="line"><code class="plain">							dr[</code><code class="string">"FullName"</code><code class="plain">] = dr[</code><code class="string">"FirstName"</code><code class="plain">] + </code><code class="string">" "</code><code class="plain"> + dr[</code><code class="string">"MiddleName"</code><code class="plain">] + </code><code class="string">" "</code><code class="plain"> + dr[</code><code class="string">"LastName"</code><code class="plain">];</code></div>
<div class="line"><code class="plain">						}</code></div>
<div class="line"><code class="plain">					}</code></div>
<div class="line"><code class="plain">					</code><code class="keyword">break</code><code class="plain">;</code></div>
<div class="line"><code class="plain">			}</code></div>
<div class="line"><code class="plain">		}</code></div>
<div class="line"><code class="plain">	}</code></div>
<div class="line"><code class="plain">}</code></div>
</div>
    </div>
        </div>

    </article>


               
            
    <footer id="ht-footer">
    <a href="#" id="ht-jump-top" class="sp-aui-icon-small sp-aui-iconfont-arrows-up"></a>
</footer></div>

<div>
    <div id="ht-mq-detect"></div>
</div>

    <script src="js/lunr.js"></script>
    <script src="js/lunr-extras.js"></script>
    <script src="assets/js/scroll-search.js"></script>

    <script src="assets/js/expand-macro.js"></script>
</body>
</html>
