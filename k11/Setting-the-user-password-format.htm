<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Setting the user password format - Kentico 11 Documentation</title>

    
    <link rel="stylesheet" href="assets/css/expand-macro.css">

            <meta name="scroll-content-language-key" content="">
    
    <meta name="description" content="">
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=2.0, user-scalable=yes">

<script type="text/javascript" src="assets/js/jquery.min.js"></script>
<script type="text/javascript" src="assets/js/jquery.scrollTo.min.js"></script>


<script type="text/javascript" src="assets/js/translate.js"></script>

<script type="text/javascript" src="assets/js/theme.main.js"></script>

    <script type="text/javascript" src="assets/js/iframeResizer.min.js"></script>

<link rel="stylesheet" href="assets/css/content-style.css">
    <link rel="stylesheet" href="assets/css/search.css">

<link rel="stylesheet" href="assets/css/theme.main.css">
<link rel="stylesheet" href="assets/css/theme.colors.css">

            <!-- ES5 support for older browsers, needed by lunr -->
        <script src="js/augment.js"></script> 
        <script id="worker" type="javascript/worker">

        startIndex = function() {
            idx = lunr.Index.load(lunrIndex);
            idx.pipeline.remove(lunr.stopWordFilter);
            postMessage({type: "setup-complete"});
        }

        onmessage = function (event) {
            var message = event.data;

            if ((message.type === 'setup') && message.baseUrl) {
                var url = message.baseUrl;
                importScripts(url + 'js/lunr.js');
                importScripts(url + 'js/lunr-extras.js');
                importScripts(url + 'js/lunr-index.js');
                importScripts(url + 'js/lunr-data.js');
                startIndex();
            }

            if (idx && (message.type === 'search-request') && message.query) {
                var searchWord = message.query;
                var results = idx.search(searchWord).map(function (result) {
                    return lunrData.filter(function (d) {
                        return d.id === parseInt(result.ref, 10)
                    })[0]
                });
                postMessage({type: 'search-results', results: results, query: searchWord, queryId: message.queryId});
            }
        }

    </script>
    </head>

<body pageid="68879260">

<div id="ht-loader">
    <noscript>
        <p style="width: 100%; text-align:center; position: absolute; margin-top: 200px;">This content cannot be displayed without JavaScript.<br>Please enable JavaScript and reload the page.</p>
    </noscript>
</div>

<div>
   	<header id="ht-headerbar">
    <div class="ht-headerbar-left">
        <a href="" id="ht-menu-toggle" class="sp-aui-icon-small sp-aui-iconfont-appswitcher"></a>
    </div>
    <div class="ht-headerbar-right">
            <div class="sp-aui-icon-small ht-search-index-loader ht-header-icon"></div>

        <div id="ht-search">
            <div class="ht-search-input" style="display: none;">
              	<a href="#" class="sp-aui-icon-small sp-aui-iconfont-remove ht-search-clear"></a>

                <form action="#" method="GET" id="search">
                    <input class="search-input" type="text" placeholder="Search" tabindex="-1" autocomplete="off" name="q" value="">
                    <input type="hidden" name="max" value="15" />
                    <input type="submit" style="display:none" tabindex="-4"/>
                </form>

                <a href="#" id="ht-search-button" class="ht-header-icon ht-header-icon-svg">
                                        <svg width="40px" height="40px" viewBox="0 0 40 40" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                        <g>
                            <path d="M29.572,28.802 L28.801,29.571 C28.515,29.857 28.187,30 27.816,30 C27.445,30 27.116,29.857 26.831,29.571 L21.392,24.134 C20.193,24.762 18.908,25.076 17.538,25.076 C15.396,25.076 13.605,24.348 12.163,22.892 C10.721,21.436 10,19.651 10,17.538 C10,15.397 10.721,13.605 12.163,12.163 C13.605,10.721 15.396,10 17.538,10 C19.651,10 21.434,10.721 22.89,12.163 C24.347,13.605 25.075,15.397 25.075,17.538 C25.075,18.937 24.761,20.222 24.132,21.393 L29.572,26.832 C29.857,27.118 30,27.446 30,27.817 C30,28.188 29.857,28.517 29.572,28.802 L29.572,28.802 Z M13.662,21.414 C14.732,22.485 16.024,23.02 17.538,23.02 C19.051,23.02 20.343,22.485 21.413,21.414 C22.484,20.344 23.019,19.052 23.019,17.538 C23.019,16.025 22.484,14.733 21.413,13.662 C20.343,12.592 19.051,12.056 17.538,12.056 C16.024,12.056 14.732,12.592 13.662,13.662 C12.591,14.733 12.056,16.025 12.056,17.538 C12.056,19.052 12.591,20.344 13.662,21.414 L13.662,21.414 Z"></path>
                        </g>
                    </svg>
              	</a>

                <div class="ht-search-dropdown ht-dropdown">
                    <ul></ul>
                </div>
            </div>
        </div>
    </div>
    </header>   	<aside id="ht-sidebar">
    <div class="ht-sidebar-content">
        <div class="ht-sidebar-content-scroll-container">
            <header class="ht-sidebar-header">
                <h1 class="ht-logo">
                    <span class="ht-logo-label">K11</span>
                    <img class="space-logo" src="global.logo" />
                </h1>
                <a href="Kentico-11-Documentation-Home.htm" class="ht-space-link">
                    <h2>Kentico 11 Documentation</h2>
                </a>
            </header>
                            <iframe id="ht-nav" src="toc.html?pageId=68881144"></iframe>
                <script>
                    $('iframe#ht-nav').iFrameResize(
                            { 'log': true, 'autoResize': true, 'heightCalculationMethod': 'lowestElement', 'checkOrigin': false });
                </script>
                    </div>
    </div>

</aside></div>

<div id="ht-wrap-container">

            
    <div id="ht-sidebar-dragbar">
    <div class="ht-sidebar-drag-handle">
        <span class="drag-handle-1"></span>
        <span class="drag-handle-2"></span>
        <span class="drag-handle-3"></span>
    </div>
</div>
    <article id="ht-content" class="ht-content">
        <header class="ht-content-header">
            <div id="ht-breadcrumb">
    <ul>
        <li><a href="Kentico-11-Documentation-Home.htm">Kentico 11 Documentation</a></li>
                                                                                                             <li><a href="" onclick="$('.shortcut').each(function(){$(this).removeClass('shortcut')}); $(this).parent().addClass('shortcut'); return false;">...</a> </li>
                                        <li class="shortcut"><a href="Securing-websites.htm">Securing websites</a></li>
                                                                                                         <li class="shortcut"><a href="Designing-secure-websites.htm">Designing secure websites</a></li>
                                                                                     <li><a href="Securing-user-accounts-and-passwords.htm">Securing user accounts and passwords</a></li>
                                                            </ul>
</div>            <h1 id="src-68881144"> <span>Setting the user password format</span></h1>
        </header>

        <div id="main-content" class="wiki-content sp-grid-section" data-index-for-search="true">
<p   
>Kentico provides several options for storing user passwords in the database. The passwords can either be secured using a cryptographic function or saved in plain text (not recommended).</p>
<p   
>To configure the password format, open the <strong class=" ">Settings</strong> application and select an option using the <strong class=" ">Security &amp; Membership -&gt; Passwords -&gt; Password format</strong> setting. Currently, the following options provide sufficient security:</p>
<ul class=" "><li class=" "><p   
><strong class=" ">PBKDF2</strong> - the default and recommended option with the strongest security. Applies a cryptographic function to passwords and repeats the operation many times. To learn more, see <a  class="external-link" href="https://en.wikipedia.org/wiki/PBKDF2">PBKDF2</a>.</p>
</li><li class=" "><p   
><strong class=" ">SHA-2 with salt</strong> - uses the <a  class="external-link" href="http://en.wikipedia.org/wiki/SHA-2">SHA-2</a> hash function with an additional salt applied to the password input.</p>
</li></ul>    <div  class="confbox admonition admonition-note">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">Note</strong>: Changing the password format only affects how future passwords will be stored. Existing passwords remain functional, but are stored in their original format (the <i class=" ">CMS_User</i> database table contains a column that specifies the format of each user&#39;s password). You need to reset all passwords to store them in the new format.</p>
<p   
>For this reason, we recommend setting the appropriate password format directly after installation, before you create user accounts or allow users to start registering.</p>
        </div>
    </div>
    <div  class="confbox panel">
            <div class="title panel-header">On this page</div>
            <div class="panel-content">
<ul class="toc-indentation "><li class=" "><p   
><a   href="k11/#src-68881144_Settingtheuserpasswordformat-CustomizingthenumberofiterationsforPBKDF2">Customizing the number of iterations for PBKDF2</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68881144_Settingtheuserpasswordformat-ConfiguringthesaltfortheSHA-2passwordformat">Configuring the salt for the SHA-2 password format</a></p>
</li></ul>        </div>
    </div>
    <h3 id="src-68881144_Settingtheuserpasswordformat-CustomizingthenumberofiterationsforPBKDF2" class="heading "><span>Customizing the number of iterations for PBKDF2</span></h3>
<p   
>When the <strong class=" ">PBKDF2</strong> option is selected for the <strong class=" ">Password format</strong> setting, the system uses the <a  class="external-link" href="https://en.wikipedia.org/wiki/PBKDF2">PBKDF2</a> key derivation standard to secure user passwords. A cryptographic function is applied to the original password input (with a salt), and the operation is repeated many times. By default, the number of iterations is 10000.</p>
<p   
>You can adjust the number of iterations used to create the final secured password values.</p>
<ul class=" "><li class=" "><p   
>Increasing the number of iterations generates password hashes that are more resistant to brute force attacks. However, a very high number may lead to performance problems in situations where many users authenticate or change their password at the same time.</p>
</li><li class=" "><p   
>You can decrease the number of iterations if you experience performance problems and security is not a priority.</p>
</li></ul><p   
>To customize the number of PBKDF2 iterations, you need to use the API &ndash; set the <strong class=" ">Pbkdf2IterationsCount</strong> property of the <strong class=" ">CMS.Helpers.SecurityHelper</strong> class.</p>
<p   
>To ensure correct behavior, set the property at the beginning of the application&#39;s life cycle (during initialization):</p>
<ol class=" "><li class=" "><p   
>Create a <a   href="k11/Initializing-modules-to-run-custom-code.htm">custom module class</a>.</p>
<ul class=" "><li class=" "><p   
>Either add the class into a custom project within the Kentico solution (recommended) or directly into the Kentico web project (into a custom folder under the <strong class=" ">CMSApp</strong> project for <i class=" ">web application</i> installations, into the <strong class=" ">App_Code</strong> folder for <i class=" ">web site</i> installations).<br/><br/></p>
</li></ul></li><li class=" "><p   
>Override the module&#39;s <strong class=" ">OnInit</strong> method and set the <strong class=" ">Pbkdf2IterationsCount</strong> property.</p>
</li></ol>    <div  class="confbox admonition admonition-info">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
>For basic execution of initialization code, you only need to register a &quot;code-only&quot; module through the API. You do NOT need to create a new module within the <strong class=" ">Modules</strong> application in the Kentico administration interface.</p>
        </div>
    </div>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                    <div class="title">Example</div>
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-title="Example" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">using</code><code class="plain"> CMS;</code></div>
<div class="line"> </div>
<div class="line"><code class="keyword">using</code><code class="plain"> CMS.DataEngine;</code></div>
<div class="line"><code class="keyword">using</code><code class="plain"> CMS.Helpers;</code></div>
<div class="line"> </div>
<div class="line"><code class="comments">// Registers the custom module into the system</code></div>
<div class="line"><code class="plain">[assembly: RegisterModule(</code><code class="keyword">typeof</code><code class="plain">(CustomInitializationModule))]</code></div>
<div class="line"> </div>
<div class="line"><code class="keyword">public</code><code class="plain"> </code><code class="keyword">class</code><code class="plain"> CustomInitializationModule : Module</code></div>
<div class="line"><code class="plain">{</code></div>
<div class="line"><code class="plain">	</code><code class="comments">// Module class constructor, the system registers the module under the name "CustomInit"</code></div>
<div class="line"><code class="plain">	</code><code class="keyword">public</code><code class="plain"> CustomInitializationModule()</code></div>
<div class="line"><code class="plain">		: </code><code class="keyword">base</code><code class="plain">(</code><code class="string">"CustomInit"</code><code class="plain">)</code></div>
<div class="line"><code class="plain">	{</code></div>
<div class="line"><code class="plain">	}</code></div>
<div class="line"><code class="plain">	</code></div>
<div class="line"><code class="plain">	</code><code class="comments">// Contains initialization code that is executed when the application starts</code></div>
<div class="line"><code class="plain">	</code><code class="keyword">protected</code><code class="plain"> </code><code class="keyword">override</code><code class="plain"> </code><code class="keyword">void</code><code class="plain"> OnInit()</code></div>
<div class="line"><code class="plain">	{</code></div>
<div class="line"><code class="plain">		</code><code class="keyword">base</code><code class="plain">.OnInit();</code></div>
<div class="line"> </div>
<div class="line"><code class="plain">		</code><code class="comments">// Sets the number of iterations used when generating user passwords in the PBKDF2 format</code></div>
<div class="line"><code class="plain">		SecurityHelper.Pbkdf2IterationsCount = 50000;</code></div>
<div class="line"><code class="plain">	}</code></div>
<div class="line"><code class="plain">}</code></div>
</div>
    </div>
<p   
>When generating new passwords in the PBKDF2 format, the system now uses the assigned number of iterations. Existing passwords created with a different number of iterations remain functional. You only need to reset existing passwords if you wish to enforce the new number of iterations.</p>
    <h3 id="src-68881144_Settingtheuserpasswordformat-ConfiguringthesaltfortheSHA-2passwordformat" class="heading "><span>Configuring the salt for the SHA-2 password format</span></h3>
<p   
>If you select the <strong class=" ">SHA2 with salt</strong> option for the <strong class=" ">Password format</strong> setting, the system secures passwords using the <a  class="external-link" href="http://en.wikipedia.org/wiki/SHA-2">SHA-2</a> hash function with the additional application of a <a  class="external-link" href="https://en.wikipedia.org/wiki/Salt_%28cryptography%29"><strong class=" ">salt</strong></a>. A salt is a string appended to passwords before they are hashed, which helps protect the passwords against dictionary or other types of brute force attacks. It also ensures that every user has a different password hash, even if multiple users have the same password.</p>
<p   
>Kentico adds two types of salt to passwords:</p>
<ul class=" "><li class=" "><p   
><strong class=" ">User salt</strong> - by default, the GUID of each user (stored in the <i class=" ">UserGuid</i> column) is appended to the passwords before the hash function is applied.</p>
</li></ul><ul class=" "><li class=" "><p   
><strong class=" ">Password salt</strong> - to increase the length of the salt (to further improve the security of hashed passwords), you can define a custom string that the system appends to every password. Add the following key into the <strong class=" ">&lt;appSettings&gt;</strong> section of your web.config file:</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="plain">&lt;add key=</code><code class="string">"CMSPasswordSalt"</code><code class="plain"> value=</code><code class="string">"SaltText"</code><code class="plain"> /&gt;</code></div>
</div>
    </div>
</li></ul><p   
>The following diagram shows how the password and salt values are composed before the hash function is applied:</p>
    <div  class="tablewrap">
        <table class="confluenceTable">
        <thead class=" "></thead><tfoot class=" "></tfoot><tbody class=" ">    <tr>
            <td  class="highlight-blue confluenceTd" rowspan="1" colspan="1">
    <p   
><strong class=" ">Password</strong></p>
            </td>
                <td  class="highlight-green confluenceTd" rowspan="1" colspan="1">
    <p   
><strong class=" ">User salt</strong></p>
            </td>
                <td  class="highlight-yellow confluenceTd" rowspan="1" colspan="1">
    <p   
><strong class=" ">Password salt</strong></p>
            </td>
        </tr>
</tbody>        </table>
            </div>
        </div>

    </article>


               
            
    <footer id="ht-footer">
    <a href="#" id="ht-jump-top" class="sp-aui-icon-small sp-aui-iconfont-arrows-up"></a>
</footer></div>

<div>
    <div id="ht-mq-detect"></div>
</div>

    <script src="js/lunr.js"></script>
    <script src="js/lunr-extras.js"></script>
    <script src="assets/js/scroll-search.js"></script>

    <script src="assets/js/expand-macro.js"></script>
</body>
</html>
