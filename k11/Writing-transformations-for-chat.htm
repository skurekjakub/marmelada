<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Writing transformations for chat - Kentico 11 Documentation</title>

    
    <link rel="stylesheet" href="assets/css/expand-macro.css">

            <meta name="scroll-content-language-key" content="">
    
    <meta name="description" content="">
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=2.0, user-scalable=yes">

<script type="text/javascript" src="assets/js/jquery.min.js"></script>
<script type="text/javascript" src="assets/js/jquery.scrollTo.min.js"></script>


<script type="text/javascript" src="assets/js/translate.js"></script>

<script type="text/javascript" src="assets/js/theme.main.js"></script>

    <script type="text/javascript" src="assets/js/iframeResizer.min.js"></script>

<link rel="stylesheet" href="assets/css/content-style.css">
    <link rel="stylesheet" href="assets/css/search.css">

<link rel="stylesheet" href="assets/css/theme.main.css">
<link rel="stylesheet" href="assets/css/theme.colors.css">

            <!-- ES5 support for older browsers, needed by lunr -->
        <script src="js/augment.js"></script> 
        <script id="worker" type="javascript/worker">

        startIndex = function() {
            idx = lunr.Index.load(lunrIndex);
            idx.pipeline.remove(lunr.stopWordFilter);
            postMessage({type: "setup-complete"});
        }

        onmessage = function (event) {
            var message = event.data;

            if ((message.type === 'setup') && message.baseUrl) {
                var url = message.baseUrl;
                importScripts(url + 'js/lunr.js');
                importScripts(url + 'js/lunr-extras.js');
                importScripts(url + 'js/lunr-index.js');
                importScripts(url + 'js/lunr-data.js');
                startIndex();
            }

            if (idx && (message.type === 'search-request') && message.query) {
                var searchWord = message.query;
                var results = idx.search(searchWord).map(function (result) {
                    return lunrData.filter(function (d) {
                        return d.id === parseInt(result.ref, 10)
                    })[0]
                });
                postMessage({type: 'search-results', results: results, query: searchWord, queryId: message.queryId});
            }
        }

    </script>
    </head>

<body pageid="68879260">

<div id="ht-loader">
    <noscript>
        <p style="width: 100%; text-align:center; position: absolute; margin-top: 200px;">This content cannot be displayed without JavaScript.<br>Please enable JavaScript and reload the page.</p>
    </noscript>
</div>

<div>
   	<header id="ht-headerbar">
    <div class="ht-headerbar-left">
        <a href="" id="ht-menu-toggle" class="sp-aui-icon-small sp-aui-iconfont-appswitcher"></a>
    </div>
    <div class="ht-headerbar-right">
            <div class="sp-aui-icon-small ht-search-index-loader ht-header-icon"></div>

        <div id="ht-search">
            <div class="ht-search-input" style="display: none;">
              	<a href="#" class="sp-aui-icon-small sp-aui-iconfont-remove ht-search-clear"></a>

                <form action="#" method="GET" id="search">
                    <input class="search-input" type="text" placeholder="Search" tabindex="-1" autocomplete="off" name="q" value="">
                    <input type="hidden" name="max" value="15" />
                    <input type="submit" style="display:none" tabindex="-4"/>
                </form>

                <a href="#" id="ht-search-button" class="ht-header-icon ht-header-icon-svg">
                                        <svg width="40px" height="40px" viewBox="0 0 40 40" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                        <g>
                            <path d="M29.572,28.802 L28.801,29.571 C28.515,29.857 28.187,30 27.816,30 C27.445,30 27.116,29.857 26.831,29.571 L21.392,24.134 C20.193,24.762 18.908,25.076 17.538,25.076 C15.396,25.076 13.605,24.348 12.163,22.892 C10.721,21.436 10,19.651 10,17.538 C10,15.397 10.721,13.605 12.163,12.163 C13.605,10.721 15.396,10 17.538,10 C19.651,10 21.434,10.721 22.89,12.163 C24.347,13.605 25.075,15.397 25.075,17.538 C25.075,18.937 24.761,20.222 24.132,21.393 L29.572,26.832 C29.857,27.118 30,27.446 30,27.817 C30,28.188 29.857,28.517 29.572,28.802 L29.572,28.802 Z M13.662,21.414 C14.732,22.485 16.024,23.02 17.538,23.02 C19.051,23.02 20.343,22.485 21.413,21.414 C22.484,20.344 23.019,19.052 23.019,17.538 C23.019,16.025 22.484,14.733 21.413,13.662 C20.343,12.592 19.051,12.056 17.538,12.056 C16.024,12.056 14.732,12.592 13.662,13.662 C12.591,14.733 12.056,16.025 12.056,17.538 C12.056,19.052 12.591,20.344 13.662,21.414 L13.662,21.414 Z"></path>
                        </g>
                    </svg>
              	</a>

                <div class="ht-search-dropdown ht-dropdown">
                    <ul></ul>
                </div>
            </div>
        </div>
    </div>
    </header>   	<aside id="ht-sidebar">
    <div class="ht-sidebar-content">
        <div class="ht-sidebar-content-scroll-container">
            <header class="ht-sidebar-header">
                <h1 class="ht-logo">
                    <span class="ht-logo-label">K11</span>
                    <img class="space-logo" src="global.logo" />
                </h1>
                <a href="Kentico-11-Documentation-Home.htm" class="ht-space-link">
                    <h2>Kentico 11 Documentation</h2>
                </a>
            </header>
                            <iframe id="ht-nav" src="toc.html?pageId=68881081"></iframe>
                <script>
                    $('iframe#ht-nav').iFrameResize(
                            { 'log': true, 'autoResize': true, 'heightCalculationMethod': 'lowestElement', 'checkOrigin': false });
                </script>
                    </div>
    </div>

</aside></div>

<div id="ht-wrap-container">

            
    <div id="ht-sidebar-dragbar">
    <div class="ht-sidebar-drag-handle">
        <span class="drag-handle-1"></span>
        <span class="drag-handle-2"></span>
        <span class="drag-handle-3"></span>
    </div>
</div>
    <article id="ht-content" class="ht-content">
        <header class="ht-content-header">
            <div id="ht-breadcrumb">
    <ul>
        <li><a href="Kentico-11-Documentation-Home.htm">Kentico 11 Documentation</a></li>
                                                                                                             <li><a href="" onclick="$('.shortcut').each(function(){$(this).removeClass('shortcut')}); $(this).parent().addClass('shortcut'); return false;">...</a> </li>
                                        <li class="shortcut"><a href="Community-features.htm">Community features</a></li>
                                                                                                         <li class="shortcut"><a href="Chat.htm">Chat</a></li>
                                                                                     <li><a href="Customizing-chat-appearance.htm">Customizing chat appearance</a></li>
                                                            </ul>
</div>            <h1 id="src-68881081"> <span>Writing transformations for chat</span></h1>
        </header>

        <div id="main-content" class="wiki-content sp-grid-section" data-index-for-search="true">
<p   
>Chat web parts use <strong class=" ">jQuery templates</strong> to display their content. This includes on-line users lists, room lists, messages and other elements. In Kentico, the templates are stored as ordinary transformations that have their type set to <i class=" "><strong class=" ">jQuery</strong></i>.</p>
<p   
>You can find all transformations that Chat needs in <strong class=" ">Page types -&gt; Chat - Transformations -&gt; Transformations</strong>.</p>
<p   
>A jQuery transformation consists of HTML code and <strong class=" ">template tags</strong> that dynamically insert values of the object that is currently being processed. There are also tags that control the flow of the transformation.</p>
    <div  class="confbox panel">
            <div class="title panel-header">On this page</div>
            <div class="panel-content">
<p   
></p>
<ul class="toc-indentation "><li class=" "><p   
><a   href="k11/#src-68881081_Writingtransformationsforchat-Displayingdata">Displaying data</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68881081_Writingtransformationsforchat-Creatingconditions">Creating conditions</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68881081_Writingtransformationsforchat-Integratingmacroexpressions">Integrating macro expressions</a></p>
</li><li class=" "><p   
><a   href="k11/#src-68881081_Writingtransformationsforchat-Insertingactioncommands">Inserting action commands</a></p>
</li></ul><p   
></p>
        </div>
    </div>
    <h3 id="src-68881081_Writingtransformationsforchat-Displayingdata" class="heading "><span>Displaying data</span></h3>
<p   
>An example transformation could look like this:</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="plain">&lt;div&gt;</code></div>
<div class="line"><code class="plain">    &lt;strong&gt;${Nickname}&lt;/strong&gt;: ${MessageText}</code></div>
<div class="line"><code class="plain">&lt;/div&gt;</code></div>
</div>
    </div>
<p   
>The example can be used to display a chat message. It displays the sender&#39;s nickname in bold and the text of the message.</p>
<p   
>In this example, template tags are used to display data. Tags that display data should always start with a dollar sign ($), followed by the name of the variable that you want to display enclosed in brackets.</p>
<p   
>To learn what data you can display, see <a   href="k11/Chat-transformations-reference.htm">Chat transformations reference</a>.</p>
    <h3 id="src-68881081_Writingtransformationsforchat-Creatingconditions" class="heading "><span>Creating conditions</span></h3>
<p   
>You can also add conditional template tags that will control what content will be displayed based on a true/false condition.</p>
<p   
>A condition begins with the <tt class=" ">{{if}}</tt> tag. As an argument, you can enter any statement that returns a boolean value (<i class=" ">true</i> or <i class=" ">false</i>). The following are examples of a valid conditional statement:</p>
<ul class=" "><li class=" "><p   
>IsSystem</p>
</li><li class=" "><p   
>Nickname == &#39;administrator&#39;</p>
</li><li class=" "><p   
>! IsCurrentUser</p>
</li></ul><p   
>An <i class=" ">if</i> condition can have two branches - one that gets rendered when the condition is true, and one indicated by the tag <tt class=" ">{{else}}</tt> that gets rendered when the condition is false. You must always close the body of the condition with the <tt class=" ">{{/if}}</tt> closing tag.</p>
<p   
>In the following example, we&#39;ll add the recipient&#39;s nickname in case the message is a whisper. Otherwise, the transformation will display only the standard nickname and text combination.</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="plain">&lt;div&gt;</code></div>
<div class="line"><code class="plain">    {{</code><code class="keyword">if</code><code class="plain"> Whisper}}</code></div>
<div class="line"><code class="plain">        &lt;strong&gt;${Nickname} -&gt; ${Recipient}&lt;/strong&gt;: ${MessageText}</code></div>
<div class="line"><code class="plain">    {{</code><code class="keyword">else</code><code class="plain">}}</code></div>
<div class="line"><code class="plain">        &lt;strong&gt;${Nickname}&lt;/strong&gt;: ${MessageText}</code></div>
<div class="line"><code class="plain">    {{/</code><code class="keyword">if</code><code class="plain">}}</code></div>
<div class="line"><code class="plain">&lt;/div&gt;</code></div>
</div>
    </div>
<p   
>Conditional tags support multiple conditions joined by logical operators. The syntax is similar to that of C#, as you can see in the following example:</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="plain">{{</code><code class="keyword">if</code><code class="plain"> IsSystem || Nickname == </code><code class="string">'administrator'</code><code class="plain"> }}</code></div>
<div class="line"><code class="plain">    &lt;div&gt;</code></div>
<div class="line"><code class="plain">        &lt;strong&gt;System message:&lt;/strong&gt; ${MessageText}</code></div>
<div class="line"><code class="plain">    &lt;/div&gt;</code></div>
<div class="line"><code class="plain">{{/</code><code class="keyword">if</code><code class="plain">}}</code></div>
</div>
    </div>
    <h3 id="src-68881081_Writingtransformationsforchat-Integratingmacroexpressions" class="heading "><span>Integrating macro expressions</span></h3>
<p   
>You can insert <a   href="k11/Macro-expressions.htm">K# macro expressions</a> into templates and combine them with template tags.</p>
<p   
>By using <strong class=" ">localization macros</strong> in transformations, you can ensure that all elements will be displayed in the correct language. The elements that can be translated include:</p>
<ul class=" "><li class=" "><p   
>system messages</p>
</li><li class=" "><p   
>notifications</p>
</li><li class=" "><p   
>buttons</p>
</li></ul><p   
>All of these elements are already prepared in the form of resource strings.</p>
<p   
>The following code example shows how to inform that a message has been rejected using a resource string.</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="plain">{{</code><code class="keyword">if</code><code class="plain"> Rejected}}</code></div>
<div class="line"><code class="plain">    &lt;span </code><code class="keyword">class</code><code class="plain">=</code><code class="string">"Rejected"</code><code class="plain">&gt;{$chat.messagerejected$}&lt;/span&gt;</code></div>
<div class="line"><code class="plain">{{/</code><code class="keyword">if</code><code class="plain">}}</code></div>
</div>
    </div>
<p   
>You can find the complete list of resource strings belonging to Chat in <a   href="k11/Chat-transformations-reference.htm">Chat transformations reference</a>.</p>
    <h3 id="src-68881081_Writingtransformationsforchat-Insertingactioncommands" class="heading "><span>Inserting action commands</span></h3>
<p   
>Users can perform actions on objects, provided they have permission to do so. For example, you can allow room administrators to reject messages directly in the list, or you can allow them to disable or delete rooms.</p>
<p   
>The following example shows how you can insert a command control for the <strong class=" ">reject message</strong> action. You need to insert the action command into the <i class=" "><strong class=" ">onclick</strong></i> attribute with the same syntax as if you were displaying a variable.</p>
<p   
>The <i class=" ">if</i> condition ensures that the action command will be rendered only if the current chat user has permission to reject the message, i.e., if the user is an administrator or a creator of the room.</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="plain">{{</code><code class="keyword">if</code><code class="plain"> RejectMessage}}</code></div>
<div class="line"><code class="plain">    &lt;a href=</code><code class="string">"#"</code><code class="plain"> onclick=</code><code class="string">"${RejectMessage}"</code><code class="plain">&gt;Reject&lt;/a&gt;</code></div>
<div class="line"><code class="plain">{{/</code><code class="keyword">if</code><code class="plain">}}</code></div>
</div>
    </div>
<p   
>For a complete list of available commands, see <a   href="k11/Chat-transformations-reference.htm">Chat transformations reference</a>.</p>
        </div>

    </article>


               
            
    <footer id="ht-footer">
    <a href="#" id="ht-jump-top" class="sp-aui-icon-small sp-aui-iconfont-arrows-up"></a>
</footer></div>

<div>
    <div id="ht-mq-detect"></div>
</div>

    <script src="js/lunr.js"></script>
    <script src="js/lunr-extras.js"></script>
    <script src="assets/js/scroll-search.js"></script>

    <script src="assets/js/expand-macro.js"></script>
</body>
</html>
