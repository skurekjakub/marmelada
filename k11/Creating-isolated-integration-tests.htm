<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Creating isolated integration tests - Kentico 11 Documentation</title>

    
    <link rel="stylesheet" href="assets/css/expand-macro.css">

            <meta name="scroll-content-language-key" content="">
    
    <meta name="description" content="">
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=2.0, user-scalable=yes">

<script type="text/javascript" src="assets/js/jquery.min.js"></script>
<script type="text/javascript" src="assets/js/jquery.scrollTo.min.js"></script>


<script type="text/javascript" src="assets/js/translate.js"></script>

<script type="text/javascript" src="assets/js/theme.main.js"></script>

    <script type="text/javascript" src="assets/js/iframeResizer.min.js"></script>

<link rel="stylesheet" href="assets/css/content-style.css">
    <link rel="stylesheet" href="assets/css/search.css">

<link rel="stylesheet" href="assets/css/theme.main.css">
<link rel="stylesheet" href="assets/css/theme.colors.css">

            <!-- ES5 support for older browsers, needed by lunr -->
        <script src="js/augment.js"></script> 
        <script id="worker" type="javascript/worker">

        startIndex = function() {
            idx = lunr.Index.load(lunrIndex);
            idx.pipeline.remove(lunr.stopWordFilter);
            postMessage({type: "setup-complete"});
        }

        onmessage = function (event) {
            var message = event.data;

            if ((message.type === 'setup') && message.baseUrl) {
                var url = message.baseUrl;
                importScripts(url + 'js/lunr.js');
                importScripts(url + 'js/lunr-extras.js');
                importScripts(url + 'js/lunr-index.js');
                importScripts(url + 'js/lunr-data.js');
                startIndex();
            }

            if (idx && (message.type === 'search-request') && message.query) {
                var searchWord = message.query;
                var results = idx.search(searchWord).map(function (result) {
                    return lunrData.filter(function (d) {
                        return d.id === parseInt(result.ref, 10)
                    })[0]
                });
                postMessage({type: 'search-results', results: results, query: searchWord, queryId: message.queryId});
            }
        }

    </script>
    </head>

<body pageid="68879260">

<div id="ht-loader">
    <noscript>
        <p style="width: 100%; text-align:center; position: absolute; margin-top: 200px;">This content cannot be displayed without JavaScript.<br>Please enable JavaScript and reload the page.</p>
    </noscript>
</div>

<div>
   	<header id="ht-headerbar">
    <div class="ht-headerbar-left">
        <a href="" id="ht-menu-toggle" class="sp-aui-icon-small sp-aui-iconfont-appswitcher"></a>
    </div>
    <div class="ht-headerbar-right">
            <div class="sp-aui-icon-small ht-search-index-loader ht-header-icon"></div>

        <div id="ht-search">
            <div class="ht-search-input" style="display: none;">
              	<a href="#" class="sp-aui-icon-small sp-aui-iconfont-remove ht-search-clear"></a>

                <form action="#" method="GET" id="search">
                    <input class="search-input" type="text" placeholder="Search" tabindex="-1" autocomplete="off" name="q" value="">
                    <input type="hidden" name="max" value="15" />
                    <input type="submit" style="display:none" tabindex="-4"/>
                </form>

                <a href="#" id="ht-search-button" class="ht-header-icon ht-header-icon-svg">
                                        <svg width="40px" height="40px" viewBox="0 0 40 40" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                        <g>
                            <path d="M29.572,28.802 L28.801,29.571 C28.515,29.857 28.187,30 27.816,30 C27.445,30 27.116,29.857 26.831,29.571 L21.392,24.134 C20.193,24.762 18.908,25.076 17.538,25.076 C15.396,25.076 13.605,24.348 12.163,22.892 C10.721,21.436 10,19.651 10,17.538 C10,15.397 10.721,13.605 12.163,12.163 C13.605,10.721 15.396,10 17.538,10 C19.651,10 21.434,10.721 22.89,12.163 C24.347,13.605 25.075,15.397 25.075,17.538 C25.075,18.937 24.761,20.222 24.132,21.393 L29.572,26.832 C29.857,27.118 30,27.446 30,27.817 C30,28.188 29.857,28.517 29.572,28.802 L29.572,28.802 Z M13.662,21.414 C14.732,22.485 16.024,23.02 17.538,23.02 C19.051,23.02 20.343,22.485 21.413,21.414 C22.484,20.344 23.019,19.052 23.019,17.538 C23.019,16.025 22.484,14.733 21.413,13.662 C20.343,12.592 19.051,12.056 17.538,12.056 C16.024,12.056 14.732,12.592 13.662,13.662 C12.591,14.733 12.056,16.025 12.056,17.538 C12.056,19.052 12.591,20.344 13.662,21.414 L13.662,21.414 Z"></path>
                        </g>
                    </svg>
              	</a>

                <div class="ht-search-dropdown ht-dropdown">
                    <ul></ul>
                </div>
            </div>
        </div>
    </div>
    </header>   	<aside id="ht-sidebar">
    <div class="ht-sidebar-content">
        <div class="ht-sidebar-content-scroll-container">
            <header class="ht-sidebar-header">
                <h1 class="ht-logo">
                    <span class="ht-logo-label">K11</span>
                    <img class="space-logo" src="global.logo" />
                </h1>
                <a href="Kentico-11-Documentation-Home.htm" class="ht-space-link">
                    <h2>Kentico 11 Documentation</h2>
                </a>
            </header>
                            <iframe id="ht-nav" src="toc.html?pageId=68882278"></iframe>
                <script>
                    $('iframe#ht-nav').iFrameResize(
                            { 'log': true, 'autoResize': true, 'heightCalculationMethod': 'lowestElement', 'checkOrigin': false });
                </script>
                    </div>
    </div>

</aside></div>

<div id="ht-wrap-container">

            
    <div id="ht-sidebar-dragbar">
    <div class="ht-sidebar-drag-handle">
        <span class="drag-handle-1"></span>
        <span class="drag-handle-2"></span>
        <span class="drag-handle-3"></span>
    </div>
</div>
    <article id="ht-content" class="ht-content">
        <header class="ht-content-header">
            <div id="ht-breadcrumb">
    <ul>
        <li><a href="Kentico-11-Documentation-Home.htm">Kentico 11 Documentation</a></li>
                                                                                                             <li><a href="" onclick="$('.shortcut').each(function(){$(this).removeClass('shortcut')}); $(this).parent().addClass('shortcut'); return false;">...</a> </li>
                                        <li class="shortcut"><a href="Custom-development.htm">Custom development</a></li>
                                                                                     <li><a href="Writing-automated-tests.htm">Writing automated tests</a></li>
                                                            </ul>
</div>            <h1 id="src-68882278"> <span>Creating isolated integration tests</span></h1>
        </header>

        <div id="main-content" class="wiki-content sp-grid-section" data-index-for-search="true">
<p   
>Isolated integration tests are <a   href="k11/Writing-automated-tests.htm">automated tests</a> that work with database objects within their own separate database. A new clean database instance is created for each test (using the default Kentico installation scripts) and then deleted after the test run. Note that integration tests are significantly slower than <a   href="k11/Faking-Info-and-Provider-objects-in-unit-tests.htm">unit tests with faked data</a>.</p>
<p   
>All test classes with isolated integration tests must inherit from the <strong class=" ">IsolatedIntegrationTests</strong> base class (provided by the <i class=" ">CMS.Tests</i> library). The base class automatically performs database initialization before test runs and cleanup thereafter.</p>
    <div  class="confbox admonition admonition-note">
                            <span class="admonition-icon confluence-information-macro-icon"></span>
                <div class="admonition-body">
<p   
><strong class=" ">Requirements</strong></p>
<p   
>To use isolated integration tests, you need to have <strong class=" ">Microsoft SQL Server 2012 Express LocalDB v11</strong> (or newer) installed. LocalDB is automatically included in Visual Studio or Microsoft SQL Server installations.</p>
        </div>
    </div>
    <div class="section section-1" id="src-68882278_Creatingisolatedintegrationtests-Creatingisolatedintegrationtests">
        <h1 class="heading "><span>Creating isolated integration tests</span></h1>
<ol class=" "><li class=" "><p   
>Open the solution containing your <a   href="k11/Creating-automated-test-projects.htm">test project</a> in Visual Studio.</p>
</li><li class=" "><p   
>Make the test class inherit from the <strong class=" ">IsolatedIntegrationTests</strong> base class.</p>
    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="keyword">using</code><code class="plain"> CMS.Tests;</code></div>
<div class="line"><code class="keyword">using</code><code class="plain"> NUnit.Framework;</code></div>
<div class="line">Â </div>
<div class="line"><code class="plain">[TestFixture]</code></div>
<div class="line"><code class="keyword">public</code><code class="plain"> </code><code class="keyword">class</code><code class="plain"> MyIntegrationTests : IsolatedIntegrationTests</code></div>
<div class="line"><code class="plain">{</code></div>
<div class="line"><code class="plain">	...</code></div>
<div class="line"><code class="plain">}</code></div>
</div>
    </div>
</li><li class=" "><p   
>Write the required isolated integration test methods.</p>
</li><li class=" "><p   
>(Optional) Create an <strong class=" ">app.config</strong> file in your test project and set the following keys under the <i class=" ">configuration/appSettings</i> section:<br/></p>
<ul class=" "><li class=" "><p   
><strong class=" ">CMSTestDatabaseScriptFolderPath </strong>&ndash; the path to the folder with files required for database creation. The folder must contain the <i class=" ">SQL.zip</i> file. If not specified, the test initialization searches the parent directories of the test project and attempts to locate the default Kentico installation scripts under the <i class=" ">CMS\App_Data\Install</i> folder path.</p>
</li><li class=" "><p   
><strong class=" ">CMSTestDatabaseFolderPath </strong>&ndash; the path to the folder that will contain test databases. If not specified, the databases are stored in the <i class=" ">TestDatabases</i> folder under the current solution&#39;s root folder.</p>
</li><li class=" "><p   
><strong class=" ">CMSTestDatabaseInstanceName </strong>&ndash; the name of the SQL server instance used by tests. The default value is: <i class=" ">(LocalDB)\v11.0<br/></i></p>
</li></ul>    <div  class="confbox programlisting" style="counter-reset: scroll-code-numbering 1">
                <div xmlns="http://www.w3.org/1999/xhtml" class="defaultnew syntaxhighlighter scroll-html-formatted-code" data-linenumbers="false" data-firstline="1">
<div class="line"><code class="plain">&lt;</code><code class="keyword">appSettings</code><code class="plain">&gt;</code></div>
<div class="line"><code class="plain">  &lt;</code><code class="keyword">add</code><code class="plain"> </code><code class="color1">key</code><code class="plain">=</code><code class="string">"CMSTestDatabaseScriptFolderPath"</code><code class="plain"> </code><code class="color1">value</code><code class="plain">=</code><code class="string">"C:\inetpub\wwwroot\Kentico\CMS\App_Data\Install"</code><code class="plain"> /&gt;</code></div>
<div class="line"><code class="plain">  &lt;</code><code class="keyword">add</code><code class="plain"> </code><code class="color1">key</code><code class="plain">=</code><code class="string">"CMSTestDatabaseFolderPath"</code><code class="plain"> </code><code class="color1">value</code><code class="plain">=</code><code class="string">"C:\CustomDBFolder"</code><code class="plain"> /&gt;</code></div>
<div class="line"><code class="plain">  &lt;</code><code class="keyword">add</code><code class="plain"> </code><code class="color1">key</code><code class="plain">=</code><code class="string">"CMSTestDatabaseInstanceName"</code><code class="plain"> </code><code class="color1">value</code><code class="plain">=</code><code class="string">"(localdb)\CustomTestingInstance"</code><code class="plain"> /&gt;</code></div>
<div class="line"><code class="plain">&lt;/</code><code class="keyword">appSettings</code><code class="plain">&gt;</code></div>
</div>
    </div>
</li></ol><p   
>Each test in a test class inheriting from <strong class=" ">IsolatedIntegrationTests</strong> uses its own database, which is automatically initialized before the test run and cleaned up after.</p>
    </div>
        </div>

    </article>


               
            
    <footer id="ht-footer">
    <a href="#" id="ht-jump-top" class="sp-aui-icon-small sp-aui-iconfont-arrows-up"></a>
</footer></div>

<div>
    <div id="ht-mq-detect"></div>
</div>

    <script src="js/lunr.js"></script>
    <script src="js/lunr-extras.js"></script>
    <script src="assets/js/scroll-search.js"></script>

    <script src="assets/js/expand-macro.js"></script>
</body>
</html>
