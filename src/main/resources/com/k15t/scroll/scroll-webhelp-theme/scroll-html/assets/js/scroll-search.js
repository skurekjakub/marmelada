!function(e){"use strict";window.SCROLL_WEBHELP.search=window.SCROLL_WEBHELP.search||{};var t,n,r=!1,o={};e("form#search").on("submit",(function(){return!1})),window.SCROLL_WEBHELP.search.performSearch=function(e,t){a(e,t)};var a=function(e,t){void 0!==n?t(c(e),e):r&&i(e,t)},c=function(e){return n.search(e).map((function(e){return lunrData.filter((function(t){return t.id===parseInt(e.ref,10)}))[0]}))},i=function(e,n){var r=(new Date).getTime();o[r]=n,t.postMessage({type:"search-request",query:e,queryId:r})};window.SCROLL_WEBHELP.search.navigateToSearchPage=function(e){var t=window.location.protocol+"//"+window.location.hostname+(window.location.port?":"+window.location.port:"")+window.location.pathname,n=t.substr(0,t.lastIndexOf("/")+1)+"search.$context.getLinkNamingStrategy().getExtension()?query="+e;window.location.assign(n)},window.SCROLL_WEBHELP.search.getSearchQueryParametersForContext=function(e,t){return[]};var s=function(t,n){var r,o=e("#html-search-results");o.find(".ht-content-header h1").html(SCROLL_WEBHELP.i18n("searchResultsTitle",t.length,{query:(r=n,String(r).replace(/[&<>"'\/]/g,(function(e){return l[e]})))}));var a=e("#search-results");a.empty();var c=window.location.href.substr(0,window.location.href.lastIndexOf("/")+1);e.each(t,(function(e,t){var n=c+t.link;a.append('<section class="search-result"><header><h2><a href="'+encodeURI(t.link)+'">'+SCROLL_WEBHELP.escapeHtml(t.title)+'</a></h2></header><div class="search-result-content"><p class="search-result-link">'+SCROLL_WEBHELP.escapeHtml(n)+"</p></div><hr></section>")})),o.show()},u=function(){var c=window.location.protocol+"//"+window.location.hostname+(window.location.port?":"+window.location.port:"")+window.location.pathname,i=c.substr(0,c.lastIndexOf("/")+1),u=function(){e(".ht-search-index-loader").fadeOut(300,(function(){e(".ht-search-input").fadeIn()}))};try{var l=new Blob([document.querySelector("#worker").textContent]);(t=new Worker(window.URL.createObjectURL(l))).onmessage=function(e){var t=e.data;if("setup-complete"===t.type){u(),r=!0;var n=function(e){e=e.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var t=new RegExp("[\\?&]"+e+"=([^&#]*)").exec(location.search);return null===t?"":decodeURIComponent(t[1])}("query");n&&!0===t.isSearchPage&&a(n,s)}if("search-results"===t.type){var c=o[t.queryId];c&&(delete o[t.queryId],c(t.results,t.query))}},t.onerror=function(e){throw e.preventDefault(),e},t.postMessage({type:"setup",baseUrl:i})}catch(t){setTimeout((function(){r||(e.ajax({url:"js/lunr-data.js",cache:!0,crossDomain:!0,dataType:"script"}),e.ajax({url:"js/lunr-index.js",cache:!0,crossDomain:!0,dataType:"script"}).done((function(){(n=lunr.Index.load(lunrIndex)).pipeline.remove(lunr.stopWordFilter),u()})))}),3e3)}},l={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};e(document).ready((function(){u()}))}($);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
