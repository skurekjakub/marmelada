function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)
/*! iFrame Resizer (iframeSizer.min.js ) - v4.2.11 - 2020-06-02
 *  Desc: Force cross domain iframes to size to content.
 *  Requires: iframeResizer.contentWindow.min.js to be loaded into the target frame.
 *  Copyright: (c) 2020 David J. Bradshaw - dave@bradshaw.net
 *  License: MIT
 */}!function(e){if("undefined"!=typeof window){var n,t=0,i=!1,o=!1,r=7,a="[iFrameSizer]",d=a.length,s=null,c=window.requestAnimationFrame,u={max:1,scroll:1,bodyScroll:1,documentElementScroll:1},f={},l=null,m={autoResize:!0,bodyBackground:null,bodyMargin:null,bodyMarginV1:8,bodyPadding:null,checkOrigin:!0,inPageLinks:!1,enablePublicMethods:!0,heightCalculationMethod:"bodyOffset",id:"iFrameResizer",interval:32,log:!1,maxHeight:1/0,maxWidth:1/0,minHeight:0,minWidth:0,resizeFrom:"parent",scrolling:!1,sizeHeight:!0,sizeWidth:!1,warningTimeout:5e3,tolerance:0,widthCalculationMethod:"scroll",onClose:function(){return!0},onClosed:function(){},onInit:function(){},onMessage:function(){I("onMessage function not defined")},onResized:function(){},onScroll:function(){return!0}},g={};window.jQuery&&((n=window.jQuery).fn?n.fn.iFrameResize||(n.fn.iFrameResize=function(e){return this.filter("iframe").each((function(n,t){H(t,e)})).end()}):v("","Unable to bind to jQuery, it is not fully loaded.")),"function"==typeof define&&define.amd?define([],B):"object"==("undefined"==typeof module?"undefined":_typeof(module))&&"object"==_typeof(module.exports)&&(module.exports=B()),window.iFrameResize=window.iFrameResize||B()}function p(){return window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver}function h(e,n,t){e.addEventListener(n,t,!1)}function w(e,n,t){e.removeEventListener(n,t,!1)}function b(e){return f[e]?f[e].log:i}function y(e,n){x("log",e,n,b(e))}function v(e,n){x("info",e,n,b(e))}function I(e,n){x("warn",e,n,!0)}function x(e,n,t,i){!0===i&&"object"==_typeof(window.console)&&console[e](function(e){return a+"["+function(e){var n="Host page: "+e;return window.top!==window.self&&(n=window.parentIFrame&&window.parentIFrame.getId?window.parentIFrame.getId()+": "+e:"Nested host page: "+e),n}(e)+"]"}(n),t)}function F(e){function n(){t("Height"),t("Width"),W((function(){S(B),R(L),m("onResized",B)}),B,"init")}function t(e){var n=Number(f[L]["max"+e]),t=Number(f[L]["min"+e]),i=e.toLowerCase(),o=Number(B[i]);y(L,"Checking "+i+" is in range "+t+"-"+n),o<t&&(o=t,y(L,"Set "+i+" to min value")),n<o&&(o=n,y(L,"Set "+i+" to max value")),B[i]=""+o}function i(e){return A.substr(A.indexOf(":")+r+e)}function o(e,n){!function(e,n,t){g[t]||(g[t]=setTimeout((function(){g[t]=null,e()}),32))}((function(){C("Send Page Info","pageInfo:"+function(){var e=document.body.getBoundingClientRect(),n=B.iframe.getBoundingClientRect();return JSON.stringify({iframeHeight:n.height,iframeWidth:n.width,clientHeight:Math.max(document.documentElement.clientHeight,window.innerHeight||0),clientWidth:Math.max(document.documentElement.clientWidth,window.innerWidth||0),offsetTop:parseInt(n.top-e.top,10),offsetLeft:parseInt(n.left-e.left,10),scrollTop:window.pageYOffset,scrollLeft:window.pageXOffset,documentHeight:document.documentElement.clientHeight,documentWidth:document.documentElement.clientWidth,windowHeight:window.innerHeight,windowWidth:window.innerWidth})}(),e,n)}),0,n)}function c(e){var n=e.getBoundingClientRect();return O(L),{x:Math.floor(Number(n.left)+Number(s.x)),y:Math.floor(Number(n.top)+Number(s.y))}}function u(e){var n=e?c(B.iframe):{x:0,y:0},t={x:Number(B.width)+n.x,y:Number(B.height)+n.y};y(L,"Reposition requested from iFrame (offset x:"+n.x+" y:"+n.y+")"),window.top!==window.self?window.parentIFrame?window.parentIFrame["scrollTo"+(e?"Offset":"")](t.x,t.y):I(L,"Unable to scroll to requested position, window.parentIFrame not found"):(s=t,l(),y(L,"--"))}function l(){!1!==m("onScroll",s)?R(L):T()}function m(e,n){return M(L,e,n)}var p,b,x,F,k,H,j,P,A=e.data,B={},L=null;"[iFrameResizerChild]Ready"===A?function(){for(var e in f)C("iFrame requested init",N(e),f[e].iframe,e)}():a===(""+A).substr(0,d)&&A.substr(d).split(":")[0]in f?(H=(k=A.substr(d).split(":"))[1]?parseInt(k[1],10):0,j=f[k[0]]&&f[k[0]].iframe,P=getComputedStyle(j),B={iframe:j,id:k[0],height:H+function(e){return"border-box"!==e.boxSizing?0:(e.paddingTop?parseInt(e.paddingTop,10):0)+(e.paddingBottom?parseInt(e.paddingBottom,10):0)}(P)+function(e){return"border-box"!==e.boxSizing?0:(e.borderTopWidth?parseInt(e.borderTopWidth,10):0)+(e.borderBottomWidth?parseInt(e.borderBottomWidth,10):0)}(P),width:k[2],type:k[3]},L=B.id,f[L]&&(f[L].loaded=!0),(F=B.type in{true:1,false:1,undefined:1})&&y(L,"Ignoring init message from meta parent page"),!F&&(x=!0,f[b=L]||(x=!1,I(B.type+" No settings for "+b+". Message was: "+A)),x)&&(y(L,"Received: "+A),p=!0,null===B.iframe&&(I(L,"IFrame ("+B.id+") not found"),p=!1),p&&function(){var n,t=e.origin,i=f[L]&&f[L].checkOrigin;if(i&&""+t!="null"&&!(i.constructor===Array?function(){var e=0,n=!1;for(y(L,"Checking connection is from allowed list of origins: "+i);e<i.length;e++)if(i[e]===t){n=!0;break}return n}():(n=f[L]&&f[L].remoteHost,y(L,"Checking connection is from: "+n),t===n)))throw new Error("Unexpected message received from: "+t+" for "+B.iframe.id+". Message was: "+e.data+". This error can be disabled by setting the checkOrigin: false option or by providing of array of trusted domains.");return!0}()&&function(){switch(f[L]&&f[L].firstRun&&f[L]&&(f[L].firstRun=!1),B.type){case"close":z(B.iframe);break;case"message":!function(e){y(L,"onMessage passed: {iframe: "+B.iframe.id+", message: "+e+"}"),m("onMessage",{iframe:B.iframe,message:JSON.parse(e)}),y(L,"--")}(i(6));break;case"autoResize":f[L].autoResize=JSON.parse(i(9));break;case"scrollTo":u(!1);break;case"scrollToOffset":u(!0);break;case"pageInfo":o(f[L]&&f[L].iframe,L),function(){function e(e,i){function r(){f[t]?o(f[t].iframe,t):n()}["scroll","resize"].forEach((function(n){y(t,e+n+" listener for sendPageInfo"),i(window,n,r)}))}function n(){e("Remove ",w)}var t=L;e("Add ",h),f[t]&&(f[t].stopPageInfo=n)}();break;case"pageInfoStop":f[L]&&f[L].stopPageInfo&&(f[L].stopPageInfo(),delete f[L].stopPageInfo);break;case"inPageLink":!function(e){var n,t=e.split("#")[1]||"",i=decodeURIComponent(t),o=document.getElementById(i)||document.getElementsByName(i)[0];o?(n=c(o),y(L,"Moving to in page link (#"+t+") at x: "+n.x+" y: "+n.y),s={x:n.x,y:n.y},l(),y(L,"--")):window.top!==window.self?window.parentIFrame?window.parentIFrame.moveToAnchor(t):y(L,"In page link #"+t+" not found and window.parentIFrame not found"):y(L,"In page link #"+t+" not found")}(i(9));break;case"reset":E(B);break;case"init":n(),m("onInit",B.iframe);break;default:n()}}())):v(L,"Ignored: "+A)}function M(e,n,t){var i=null,o=null;if(f[e]){if("function"!=typeof(i=f[e][n]))throw new TypeError(n+" on iFrame["+e+"] is not a function");o=i(t)}return o}function k(e){var n=e.id;delete f[n]}function z(e){var n=e.id;if(!1!==M(n,"onClose",n)){y(n,"Removing iFrame: "+n);try{e.parentNode&&e.parentNode.removeChild(e)}catch(e){I(e)}M(n,"onClosed",n),y(n,"--"),k(e)}else y(n,"Close iframe cancelled by onClose event")}function O(n){null===s&&y(n,"Get page position: "+(s={x:window.pageXOffset!==e?window.pageXOffset:document.documentElement.scrollLeft,y:window.pageYOffset!==e?window.pageYOffset:document.documentElement.scrollTop}).x+","+s.y)}function R(e){null!==s&&(window.scrollTo(s.x,s.y),y(e,"Set page position: "+s.x+","+s.y),T())}function T(){s=null}function E(e){y(e.id,"Size reset requested by "+("init"===e.type?"host page":"iFrame")),O(e.id),W((function(){S(e),C("reset","reset",e.iframe,e.id)}),e,"reset")}function S(e){function n(n){!function(n){e.id?(e.iframe.style[n]=e[n]+"px",y(e.id,"IFrame ("+t+") "+n+" set to "+e[n]+"px")):y("undefined","messageData id not set")}(n),function(n){o||"0"!==e[n]||(o=!0,y(t,"Hidden iFrame detected, creating visibility listener"),function(){function e(){Object.keys(f).forEach((function(e){!function(e){function n(n){return"0px"===(f[e]&&f[e].iframe.style[n])}f[e]&&null!==f[e].iframe.offsetParent&&(n("height")||n("width"))&&C("Visibility change","resize",f[e].iframe,e)}(e)}))}function n(n){y("window","Mutation observed: "+n[0].target+" "+n[0].type),j(e,16)}var t=p();t&&function(){var e=document.querySelector("body");new t(n).observe(e,{attributes:!0,attributeOldValue:!1,characterData:!0,characterDataOldValue:!1,childList:!0,subtree:!0})}()}())}(n)}var t=e.iframe.id;f[t]&&(f[t].sizeHeight&&n("height"),f[t].sizeWidth&&n("width"))}function W(e,n,t){t!==n.type&&c&&!window.jasmine?(y(n.id,"Requesting animation frame"),c(e)):e()}function C(e,n,t,i,o){var r,d=!1;i=i||t.id,f[i]&&(t&&"contentWindow"in t&&null!==t.contentWindow?(r=f[i]&&f[i].targetOrigin,y(i,"["+e+"] Sending msg to iframe["+i+"] ("+n+") targetOrigin: "+r),t.contentWindow.postMessage(a+n,r)):I(i,"["+e+"] IFrame("+i+") not found"),o&&f[i]&&f[i].warningTimeout&&(f[i].msgTimeout=setTimeout((function(){!f[i]||f[i].loaded||d||(d=!0,I(i,"IFrame has not responded within "+f[i].warningTimeout/1e3+" seconds. Check iFrameResizer.contentWindow.js has been loaded in iFrame. This message can be ignored if everything is working, or you can set the warningTimeout option to a higher value or zero to suppress this warning."))}),f[i].warningTimeout)))}function N(e){return e+":"+f[e].bodyMarginV1+":"+f[e].sizeWidth+":"+f[e].log+":"+f[e].interval+":"+f[e].enablePublicMethods+":"+f[e].autoResize+":"+f[e].bodyMargin+":"+f[e].heightCalculationMethod+":"+f[e].bodyBackground+":"+f[e].bodyPadding+":"+f[e].tolerance+":"+f[e].inPageLinks+":"+f[e].resizeFrom+":"+f[e].widthCalculationMethod}function H(n,o){var r,a,d,s,c,l,g=(""===(a=n.id)&&(n.id=(r=o&&o.id||m.id+t++,null!==document.getElementById(r)&&(r+=t++),a=r),i=(o||{}).log,y(a,"Added missing iframe ID: "+a+" ("+n.src+")")),a);function w(e){1/0!==f[g][e]&&0!==f[g][e]&&(n.style[e]=f[g][e]+"px",y(g,"Set "+e+" = "+f[g][e]+"px"))}function b(e){if(f[g]["min"+e]>f[g]["max"+e])throw new Error("Value for min"+e+" can not be greater than max"+e)}g in f&&"iFrameResizer"in n?I(g,"Ignored iFrame, already setup."):(l=(l=o)||{},f[g]={firstRun:!0,iframe:n,remoteHost:n.src&&n.src.split("/").slice(0,3).join("/")},function(e){if("object"!=_typeof(e))throw new TypeError("Options is not an object")}(l),Object.keys(l).forEach((function(e){var n=e.split("Callback");if(2===n.length){var t="on"+n[0].charAt(0).toUpperCase()+n[0].slice(1);this[t]=this[e],delete this[e],I(g,"Deprecated: '"+e+"' has been renamed '"+t+"'. The old method will be removed in the next major version.")}}),l),function(e){for(var n in m)Object.prototype.hasOwnProperty.call(m,n)&&(f[g][n]=Object.prototype.hasOwnProperty.call(e,n)?e[n]:m[n])}(l),f[g]&&(f[g].targetOrigin=!0===f[g].checkOrigin?function(e){return""===e||null!==e.match(/^(about:blank|javascript:|file:\/\/)/)?"*":e}(f[g].remoteHost):"*"),function(){switch(y(g,"IFrame scrolling "+(f[g]&&f[g].scrolling?"enabled":"disabled")+" for "+g),n.style.overflow=!1===(f[g]&&f[g].scrolling)?"hidden":"auto",f[g]&&f[g].scrolling){case"omit":break;case!0:n.scrolling="yes";break;case!1:n.scrolling="no";break;default:n.scrolling=f[g]?f[g].scrolling:"no"}}(),b("Height"),b("Width"),w("maxHeight"),w("minHeight"),w("maxWidth"),w("minWidth"),"number"!=typeof(f[g]&&f[g].bodyMargin)&&"0"!==(f[g]&&f[g].bodyMargin)||(f[g].bodyMarginV1=f[g].bodyMargin,f[g].bodyMargin=f[g].bodyMargin+"px"),d=N(g),(c=p())&&(s=c,n.parentNode&&new s((function(e){e.forEach((function(e){Array.prototype.slice.call(e.removedNodes).forEach((function(e){e===n&&z(n)}))}))})).observe(n.parentNode,{childList:!0})),h(n,"load",(function(){C("iFrame.onload",d,n,e,!0),function(){var e=f[g]&&f[g].firstRun,t=f[g]&&f[g].heightCalculationMethod in u;!e&&t&&E({iframe:n,height:0,width:0,type:"init"})}()})),C("init",d,n,e,!0),f[g]&&(f[g].iframe.iFrameResizer={close:z.bind(null,f[g].iframe),removeListeners:k.bind(null,f[g].iframe),resize:C.bind(null,"Window resize","resize",f[g].iframe),moveToAnchor:function(e){C("Move to anchor","moveToAnchor:"+e,f[g].iframe,g)},sendMessage:function(e){C("Send Message","message:"+(e=JSON.stringify(e)),f[g].iframe,g)}}))}function j(e,n){null===l&&(l=setTimeout((function(){l=null,e()}),n))}function P(){"hidden"!==document.visibilityState&&(y("document","Trigger event: Visiblity change"),j((function(){A("Tab Visable","resize")}),16))}function A(e,n){Object.keys(f).forEach((function(t){!function(e){return f[e]&&"parent"===f[e].resizeFrom&&f[e].autoResize&&!f[e].firstRun}(t)||C(e,n,f[t].iframe,t)}))}function B(){function n(e,n){n&&(function(){if(!n.tagName)throw new TypeError("Object is not a valid DOM element");if("IFRAME"!==n.tagName.toUpperCase())throw new TypeError("Expected <IFRAME> tag, found <"+n.tagName+">")}(),H(n,e),t.push(n))}var t;return function(){var e,n=["moz","webkit","o","ms"];for(e=0;e<n.length&&!c;e+=1)c=window[n[e]+"RequestAnimationFrame"];c?c=c.bind(window):y("setup","RequestAnimationFrame not supported")}(),h(window,"message",F),h(window,"resize",(function(){!function(e){y("window","Trigger event: "+e),j((function(){A("Window "+e,"resize")}),16)}("resize")})),h(document,"visibilitychange",P),h(document,"-webkit-visibilitychange",P),function(i,o){switch(t=[],function(e){e&&e.enablePublicMethods&&I("enablePublicMethods option has been removed, public methods are now always available in the iFrame")}(i),_typeof(o)){case"undefined":case"string":Array.prototype.forEach.call(document.querySelectorAll(o||"iframe"),n.bind(e,i));break;case"object":n(i,o);break;default:throw new TypeError("Unexpected data type ("+_typeof(o)+")")}return t}}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
