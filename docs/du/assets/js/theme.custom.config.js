var DOCUMENTATION_VERSIONS=[{versionId:"xp",versionText:"Xperience by Kentico",helpServiceVersion:"xp"},{versionId:"13",versionText:"Xperience 13",helpServiceVersion:"13.0"},{versionId:"12sp",versionText:"Kentico 12 SP",helpServiceVersion:"12.0sp"},{versionId:"12",versionText:"Kentico 12",helpServiceVersion:"12.0"},{versionId:"11",versionText:"Kentico 11",helpServiceVersion:"11.0"},{versionId:"10",versionText:"Kentico 10",helpServiceVersion:"10.0"},{versionId:"9",versionText:"Kentico 9",helpServiceVersion:"9.0"},{versionId:"82",versionText:"Kentico 8.2",helpServiceVersion:"8.2"},{versionId:"81",versionText:"Kentico 8.1",helpServiceVersion:"8.1"},{versionId:"8",versionText:"Kentico 8",helpServiceVersion:"8"}],CONFIG={DEV_DOCUMENTATION_VERSION_ID:"none",NEWEST_UNSUPPORTED_VERSION_ID:"11",CONFLUENCE_BASE_URL:$('[name="confluence-base-url"]').attr("content"),CONFLUENCE_SPACE_KEY:$('[name="confluence-space-key"]').attr("content"),CONFLUENCE_PAGE_ID:$("body").attr("pageId"),CONFLUENCE_DEVMODEL_VERSIONSWITCHER_WHITELIST:["12","12sp"],DOC_ROOT_URL_SPACE_KEY:"13",OBSOLETE_SPACE_KEY_FORMAT_VERSIONS:["8","81","82","9","10","11","12","12sp"],HELPSERVICE_URLID_ENDPOINT:"https://devnet.kentico.com/CMSPages/DocLinkUrlId.ashx?tinyid=",HELPSERVICE_LISTALTVERSIONLINKS_ENDPOINT:"https://devnet.kentico.com/CMSPages/DocLinkListing.ashx?versionLink=",HELPSERVICE_LINKMAPPER_ENDPOINT:"https://devnet.kentico.com/CMSPages/DocLinkMapper.ashx?version=",XPERIENCE13_MISSING_PAGES_URL:"https://docs.xperience.io/release-notes-xperience-13/missing-documentation-pages",XP_MISSING_PAGES_URL:"https://docs.xperience.io/xp/xperience-changelog/missing-documentation-pages"};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRoZW1lLmN1c3RvbS5jb25maWcuanMiXSwibmFtZXMiOlsiRE9DVU1FTlRBVElPTl9WRVJTSU9OUyIsInZlcnNpb25JZCIsInZlcnNpb25UZXh0IiwiaGVscFNlcnZpY2VWZXJzaW9uIiwiREVWX0RPQ1VNRU5UQVRJT05fVkVSU0lPTl9JRCIsIiQiLCJhdHRyIiwiRE9DX1JPT1RfVVJMX1NQQUNFX0tFWSIsIk9CU09MRVRFX1NQQUNFX0tFWV9GT1JNQVRfVkVSU0lPTlMiLCJIRUxQU0VSVklDRV9MSU5LTUFQUEVSX0VORFBPSU5UIiwiWFBFUklFTkNFMTNfTUlTU0lOR19QQUdFU19VUkwiLCJYUF9NSVNTSU5HX1BBR0VTX1VSTCJdLCJtYXBwaW5ncyI6IkFBR0EsSUFBTUEsdUJBQ0YsQ0FBRUMsQ0FBQUEsVUFBZSxLQUFBQyxZQUFBLHVCQUFBQyxtQkFBQSxNQUNwQixDQUR3QkQsVUFBVyxLQUFFQSxZQUFBLGVBQXNCQyxtQkFBQSxRQUFJQSxDQUFBQSxVQUFBQSxPQUFvQkQsWUFBQSxnQkFBQUMsbUJBQUEsVUFDbkYsQ0FBQUYsVUFBQSxLQUFBQyxZQUFBLGFBQUFDLG1CQUFBLFFBQUVGLENBQUFBLFVBQWUsS0FBQUMsWUFBQSxhQUFBQyxtQkFBQSxRQUFJRCxDQUFBQSxVQUFhLEtBQUFBLFlBQWMsYUFBQUMsbUJBQUEsUUFBSUEsQ0FBQUEsVUFBQUEsSUFBb0JELFlBQUEsWUFBQUMsbUJBQUEsT0FDckUsQ0FBQUYsVUFBQSxLQUFBQyxZQUFBLGNBQUFDLG1CQUFBLE9BQUVGLENBQUFBLFVBQVcsS0FBTUMsWUFBQSxjQUFBQyxtQkFBQSxPQUFpQ0EsQ0FBQUEsVUFBQUEsSUFBb0JELFlBQUEsWUFBQUMsbUJBQUEsTUFDcEJBLE9BQUFBLENBQ3BEQyw2QkFBQSxPQUFxQkYsOEJBQXlCLEtBQzVDRCxvQkFBZUksRUFBQSxnQ0FBQUMsS0FBQSxXQUFtQ0gscUJBQW9CRSxFQUFBLGlDQUFBQyxLQUFBLFdBQ3RFTCxtQkFBY0ksRUFBQSxRQUFBQyxLQUFBLFVBQUtKLDhDQUF3QixDQUFBLEtBQUEsUUFzQmhESyx1QkFyQm9CLEtBQThEQyxtQ0FDL0UsQ0FBQSxJQUFBLEtBQUEsS0FBQSxJQUFBLEtBQUEsS0FBQSxLQUFBLFFBQXFCTiwyQkFBMEIsZ0VBQUtDLHlDQUFvQix1RUFBT00sZ0NBQUEsa0VBK0JsRkMsOEJBN0JnRCxtRkE4QmhEQyxxQkE5QjJFIiwiZmlsZSI6InRoZW1lLmN1c3RvbS5jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09IFwiQ09ORklHXCIgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbi8vIEFkZCBsYXRlc3QgZG9jdW1lbnRhdGlvbiB2ZXJzaW9ucyB0byB0aGUgZnJvbnRcclxuY29uc3QgRE9DVU1FTlRBVElPTl9WRVJTSU9OUyA9IFtcclxuICAgIHsgdmVyc2lvbklkOiBcInhwXCIsICAgdmVyc2lvblRleHQ6IFwiWHBlcmllbmNlIGJ5IEtlbnRpY29cIiwgICBoZWxwU2VydmljZVZlcnNpb246IFwieHBcIiB9LFxyXG5cdHsgdmVyc2lvbklkOiBcIjEzXCIsICAgdmVyc2lvblRleHQ6IFwiWHBlcmllbmNlIDEzXCIsICAgaGVscFNlcnZpY2VWZXJzaW9uOiBcIjEzLjBcIiB9LFxyXG4gICAgeyB2ZXJzaW9uSWQ6IFwiMTJzcFwiLCB2ZXJzaW9uVGV4dDogXCJLZW50aWNvIDEyIFNQXCIsICBoZWxwU2VydmljZVZlcnNpb246IFwiMTIuMHNwXCIgfSxcclxuICAgIHsgdmVyc2lvbklkOiBcIjEyXCIsICAgdmVyc2lvblRleHQ6IFwiS2VudGljbyAxMlwiLCAgICAgaGVscFNlcnZpY2VWZXJzaW9uOiBcIjEyLjBcIiB9LFxyXG4gICAgeyB2ZXJzaW9uSWQ6IFwiMTFcIiwgICB2ZXJzaW9uVGV4dDogXCJLZW50aWNvIDExXCIsICAgICBoZWxwU2VydmljZVZlcnNpb246IFwiMTEuMFwiIH0sXHJcbiAgICB7IHZlcnNpb25JZDogXCIxMFwiLCAgIHZlcnNpb25UZXh0OiBcIktlbnRpY28gMTBcIiwgICAgIGhlbHBTZXJ2aWNlVmVyc2lvbjogXCIxMC4wXCIgfSxcclxuICAgIHsgdmVyc2lvbklkOiBcIjlcIiwgICAgdmVyc2lvblRleHQ6IFwiS2VudGljbyA5XCIsICAgICAgaGVscFNlcnZpY2VWZXJzaW9uOiBcIjkuMFwiIH0sXHJcbiAgICB7IHZlcnNpb25JZDogXCI4MlwiLCAgIHZlcnNpb25UZXh0OiBcIktlbnRpY28gOC4yXCIsICAgIGhlbHBTZXJ2aWNlVmVyc2lvbjogXCI4LjJcIiB9LFxyXG4gICAgeyB2ZXJzaW9uSWQ6IFwiODFcIiwgICB2ZXJzaW9uVGV4dDogXCJLZW50aWNvIDguMVwiLCAgICBoZWxwU2VydmljZVZlcnNpb246IFwiOC4xXCIgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBhcyBjb25maWd1cmVkIGluIHRoZSBIZWxwU2VydmljZSBtb2R1bGVcclxuICAgIHsgdmVyc2lvbklkOiBcIjhcIiwgICAgdmVyc2lvblRleHQ6IFwiS2VudGljbyA4XCIsICAgICAgaGVscFNlcnZpY2VWZXJzaW9uOiBcIjhcIiB9XHJcbl07XHJcblxyXG5cclxuY29uc3QgQ09ORklHID0ge1xyXG4gICAgREVWX0RPQ1VNRU5UQVRJT05fVkVSU0lPTl9JRDogXCJub25lXCIsXHJcbiAgICAvKiogVGhlIG5ld2VzdCB1bnN1cHBvcnRlZCBLZW50aWNvIHZlcnNpb24gSUQgKi9cclxuICAgIE5FV0VTVF9VTlNVUFBPUlRFRF9WRVJTSU9OX0lEOiBcIjExXCIsXHJcblxyXG4gICAgLyoqIFRoZSBiYXNlIFVSTCBvZiB0aGUgQ29uZmx1ZW5jZSBpbnN0YW5jZSAqL1xyXG4gICAgQ09ORkxVRU5DRV9CQVNFX1VSTDogJCgnW25hbWU9XCJjb25mbHVlbmNlLWJhc2UtdXJsXCJdJykuYXR0cignY29udGVudCcpLFxyXG4gICAgLyoqIFRoZSBjdXJyZW50IHNwYWNlIGtleSAqL1xyXG4gICAgQ09ORkxVRU5DRV9TUEFDRV9LRVk6ICQoJ1tuYW1lPVwiY29uZmx1ZW5jZS1zcGFjZS1rZXlcIl0nKS5hdHRyKCdjb250ZW50JyksXHJcbiAgICAvKiogVGhlIENvbmZsdWVuY2UgcGFnZSBpZGVudGlmaWVyICovXHJcbiAgICBDT05GTFVFTkNFX1BBR0VfSUQ6ICQoXCJib2R5XCIpLmF0dHIoXCJwYWdlSWRcIiksXHJcbiAgICBDT05GTFVFTkNFX0RFVk1PREVMX1ZFUlNJT05TV0lUQ0hFUl9XSElURUxJU1Q6IFtcIjEyXCIsIFwiMTJzcFwiXSxcclxuXHRcdFxyXG5cdC8qKiBUaGUgc3BlY2lmaWVkIHZlcnNpb24gaXMgcmVkaXJlY3RlZCB0byB0aGUgXCJyb290XCIgZG9tYWluIHdpdGhvdXQgYSB2aWV3cG9ydCBVUkwgcGF0aCAqL1xyXG5cdERPQ19ST09UX1VSTF9TUEFDRV9LRVk6IFwiMTNcIixcclxuXHRcdFxyXG5cdC8qKiBDb250YWlucyB2ZXJzaW9uSWRzIHdpdGggdGhlIG9sZCBcImsgcHJlZml4XCIgYW5kIEFQSSBleGFtcGxlIHBhdHRlcm4gZm9yIHNwYWNlIGtleXMgKGJlZm9yZSBYcGVyaWVuY2UgMTMpICovXHJcblx0T0JTT0xFVEVfU1BBQ0VfS0VZX0ZPUk1BVF9WRVJTSU9OUzogW1wiOFwiLCBcIjgxXCIsIFwiODJcIiwgXCI5XCIsIFwiMTBcIiwgXCIxMVwiLCBcIjEyXCIsIFwiMTJzcFwiXSxcclxuXHJcbiAgICBIRUxQU0VSVklDRV9VUkxJRF9FTkRQT0lOVDogXCJodHRwczovL2Rldm5ldC5rZW50aWNvLmNvbS9DTVNQYWdlcy9Eb2NMaW5rVXJsSWQuYXNoeD90aW55aWQ9XCIsXHJcbiAgICBIRUxQU0VSVklDRV9MSVNUQUxUVkVSU0lPTkxJTktTX0VORFBPSU5UOiBcImh0dHBzOi8vZGV2bmV0LmtlbnRpY28uY29tL0NNU1BhZ2VzL0RvY0xpbmtMaXN0aW5nLmFzaHg/dmVyc2lvbkxpbms9XCIsXHJcbiAgICBIRUxQU0VSVklDRV9MSU5LTUFQUEVSX0VORFBPSU5UOiBcImh0dHBzOi8vZGV2bmV0LmtlbnRpY28uY29tL0NNU1BhZ2VzL0RvY0xpbmtNYXBwZXIuYXNoeD92ZXJzaW9uPVwiLCBcclxuXHRcclxuXHQvKiogVVJMcyBvZiB0aGUgWHBlcmllbmNlIDEzIGFuZCBYUCBzcGVjaWFsIHBhZ2VzIHRoYXQgYXJlIGxpbmtlZCB3aGVuIHN3aXRjaGluZyB0byBhIG5vbi1leGlzdGluZyBwYWdlIGZyb20gYW4gb2xkZXIgZG9jIHZlcnNpb25cclxuICAgICAgICBEb2VzIG5vdCB1c2UgdGhlIHBhZ2UncyBUaW55SWQgYmVjYXVzZSB0aGF0IGNhdXNlcyBhIHJlZGlyZWN0IC0tIGxvc3Mgb2YgcXVlcnkgc3RyaW5nIHBhcmFtZXRlcnMgKHdvdWxkIG5lZWQgYSBjaGFuZ2UgaW4gQ29uZmx1ZW5jZSB0byBjaGFuZ2UgdGhpcyBiZWhhdmlvcikgLS0gc2VlIHRoZSB1c2FnZSBvZiB0aGlzIHNldHRpbmcqL1xyXG5cdFhQRVJJRU5DRTEzX01JU1NJTkdfUEFHRVNfVVJMOiBcImh0dHBzOi8vZG9jcy54cGVyaWVuY2UuaW8vcmVsZWFzZS1ub3Rlcy14cGVyaWVuY2UtMTMvbWlzc2luZy1kb2N1bWVudGF0aW9uLXBhZ2VzXCIsXHJcblx0WFBfTUlTU0lOR19QQUdFU19VUkw6IFwiaHR0cHM6Ly9kb2NzLnhwZXJpZW5jZS5pby94cC94cGVyaWVuY2UtY2hhbmdlbG9nL21pc3NpbmctZG9jdW1lbnRhdGlvbi1wYWdlc1wiXHJcbn07Il19
