!function(e){"use strict";window.SCROLL_WEBHELP.search=window.SCROLL_WEBHELP.search||{};var n,t,r=!1,o={};e("form#search").on("submit",(function(){return!1})),window.SCROLL_WEBHELP.search.performSearch=function(e,n){a(e,n)};var a=function(e,n){void 0!==t?n(c(e),e):r&&s(e,n)},c=function(e){return t.search(e).map((function(e){return lunrData.filter((function(n){return n.id===parseInt(e.ref,10)}))[0]}))},s=function(e,t){var r=(new Date).getTime();o[r]=t,n.postMessage({type:"search-request",query:e,queryId:r})};window.SCROLL_WEBHELP.search.navigateToSearchPage=function(e){var n=window.location.protocol+"//"+window.location.hostname+(window.location.port?":"+window.location.port:"")+window.location.pathname,t=n.substr(0,n.lastIndexOf("/")+1)+"search?query="+e;window.location.assign(t)},window.SCROLL_WEBHELP.search.getSearchQueryParametersForContext=function(e,n){return[]};var i=function(n,t){var r=e("#html-search-results"),o=e("#search-results");o.empty();var a=window.location.href.substr(0,window.location.href.lastIndexOf("/")+1);e.each(n,(function(e,n){var t=a+n.link.toLowerCase().replace(".html","");o.append('<section class="search-result"><header><h2><a href="'+encodeURI(n.link.substr(0,n.link.length-5)).toLowerCase()+'">'+SCROLL_WEBHELP.escapeHtml(n.title)+'</a></h2></header><div class="search-result-content"><p class="search-result-link">'+SCROLL_WEBHELP.escapeHtml(t)+"</p></div><hr></section>")})),r.show()},u=function(){var c=window.location.protocol+"//"+window.location.hostname+(window.location.port?":"+window.location.port:"")+window.location.pathname,s=c.substr(0,c.lastIndexOf("/")+1),u=function(){e(".ht-search-index-loader").fadeOut(300,(function(){e(".ht-search-input").fadeIn()}))};try{var l=new Blob([document.querySelector("#worker").textContent]);(n=new Worker(window.URL.createObjectURL(l))).onmessage=function(e){var n=e.data;if("setup-complete"===n.type){u(),r=!0;var t=function(e){e=e.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var n=new RegExp("[\\?&]"+e+"=([^&#]*)").exec(location.search);return null===n?"":decodeURIComponent(n[1])}("query");t&&!0===n.isSearchPage&&a(t,i)}if("search-results"===n.type){var c=o[n.queryId];c&&(delete o[n.queryId],c(n.results,n.query))}},n.onerror=function(e){throw e.preventDefault(),e},n.postMessage({type:"setup",baseUrl:s})}catch(n){setTimeout((function(){r||(e.ajax({url:"js/lunr-data.js",cache:!0,crossDomain:!0,dataType:"script"}),e.ajax({url:"js/lunr-index.js",cache:!0,crossDomain:!0,dataType:"script"}).done((function(){(t=lunr.Index.load(lunrIndex)).pipeline.remove(lunr.stopWordFilter),u()})))}),3e3)}};e(document).ready((function(){u()}))}($);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
